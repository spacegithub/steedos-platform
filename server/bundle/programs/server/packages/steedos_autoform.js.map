{"version":3,"sources":["meteor://ðŸ’»app/packages/steedos_autoform/client/core.coffee","meteor://ðŸ’»app/client/core.coffee","meteor://ðŸ’»app/packages/steedos_autoform/client/coreform/inputTypes/coreform-user/lib/cf_tabular_space_user.coffee","meteor://ðŸ’»app/client/coreform/inputTypes/coreform-user/lib/cf_tabular_space_user.coffee","meteor://ðŸ’»app/packages/steedos_autoform/routes/formula_space_users.coffee","meteor://ðŸ’»app/routes/formula_space_users.coffee","meteor://ðŸ’»app/packages/steedos_autoform/routes/formula_organizations.coffee","meteor://ðŸ’»app/routes/formula_organizations.coffee"],"names":["TabularTables","Meteor","startup","SimpleSchema","extendOptions","beforeOpenFunction","Match","Optional","OneOf","Function","String","cf_tabular_space_user","Tabular","Table","name","collection","db","space_users","drawCallback","settings","$","attr","columns","data","title","orderable","width","render","val","type","doc","input","inputType","ref","ref1","ref2","customData","multiple","user","email","defaultValues","includes","visible","onUnload","console","log","dom","order","extraFields","lengthChange","pageLength","info","searching","responsive","details","autoWidth","changeSelector","selector","userId","space","space_user","_id","$and","length","getProperty","findOne","fields","pagingType","JsonRoutes","add","req","res","next","query","selected","spaceId","spaceUsers","userIds","body","Array","$in","find","fetch","forEach","u","fu","u_org","u_orgs","user_flow_positions","user_role_ids","user_roles","indexOf","id","sort_no","mobile","work_phone","position","organizations","organization","fullname","hr","flow_positions","flow_roles","users","role","roles","push","uId","_","su","sendResult","code","orgIds","orgs","res_orgs","org","oId","o"],"mappings":"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","file":"/packages/steedos_autoform.js","sourcesContent":["@TabularTables = {};\n\n\nMeteor.startup ->\n\tSimpleSchema.extendOptions({beforeOpenFunction: Match.Optional(Match.OneOf(Function, String))})","this.TabularTables = {};\n\nMeteor.startup(function() {\n  return SimpleSchema.extendOptions({\n    beforeOpenFunction: Match.Optional(Match.OneOf(Function, String))\n  });\n});\n","Meteor.startup ()->\n\tTabularTables.cf_tabular_space_user = new Tabular.Table({\n\t\tname: \"cf_tabular_space_user\",\n\t\tcollection: db.space_users,\n\t\tdrawCallback: (settings)->\n\t\t\t$(\"#cf_reverse\").attr(\"checked\", false)\n\t\tcolumns: [\n\t\t\t{\n\t\t\t\tdata: \"_id\",\n\t\t\t\ttitle: '<input type=\"checkbox\" name=\"cf_reverse\" id=\"cf_reverse\">',\n\t\t\t\torderable: false,\n\t\t\t\twidth:'10px',\n\t\t\t\trender:  (val, type, doc) ->\n\n\t\t\t\t\tinputType = \"checkbox\";\n\n\t\t\t\t\tif !TabularTables.cf_tabular_space_user.customData?.multiple\n\t\t\t\t\t\tinputType = \"radio\"\n\n\t\t\t\t\tinput = '<input type=\"' + inputType + '\" class=\"list_checkbox\" name=\"cf_contacts_ids\" id=\"' + doc.user + '\" value=\"' + doc.user + '\" data-name=\"' + doc.name + '\" data-email=\"' + doc.email + '\"';\n\n\t\t\t\t\tif TabularTables.cf_tabular_space_user.customData?.defaultValues?.includes(doc.user)\n\t\t\t\t\t\tinput += \" checked \"\n\n\t\t\t\t\tinput += \">\"\n\t\t\t\t\treturn input\n\t\t\t},\n\t\t\t{\n\t\t\t\tdata: \"name\",\n\t\t\t\torderable: false,\n\t\t\t\trender:  (val, type, doc) ->\n\t\t\t\t\treturn \"<label data-user='\" + doc.user + \"' class='for-input'><div class='user-name'><font>\" + doc.name + \"</font></div></label>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tdata: \"sort_no\",\n\t\t\t\ttitle: \"\",\n\t\t\t\torderable: true,\n\t\t\t\tvisible: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tdata: \"name\",\n\t\t\t\ttitle: \"\",\n\t\t\t\torderable: true,\n\t\t\t\tvisible: false\n\t\t\t},{\n\t\t\t\tdata: \"email\",\n\t\t\t\ttitle: \"\",\n\t\t\t\torderable: false,\n\t\t\t\tvisible: false\n\t\t\t}\n\t\t],\n\t\tonUnload:() ->\n\t\t\treturn console.log(\"onUnload ok....\");\n#select:\n#  style: 'single'\n\t\tdom: \"tp\",\n\t\torder:[[2,\"desc\"],[3,\"asc\"]],\n\t\textraFields: [\"_id\", \"name\", \"user\", \"sort_no\", \"email\"],\n\t\tlengthChange: false,\n\t\tpageLength: 100,\n\t\tinfo: false,\n\t\tsearching: true,\n\t\tresponsive:\n\t\t\tdetails: false\n\t\tautoWidth: false,\n\t\tchangeSelector: (selector, userId) ->\n\t\t\tunless userId\n\t\t\t\treturn {_id: -1}\n\t\t\tspace = selector.space\n\t\t\tunless space\n\t\t\t\tif selector?.$and?.length > 0\n\t\t\t\t\tspace = selector.$and.getProperty('space')[0]\n\t\t\tunless space\n\t\t\t\treturn {_id: -1}\n\t\t\tspace_user = db.space_users.findOne({user: userId,space:space}, {fields: {_id: 1}})\n\t\t\tunless space_user\n\t\t\t\treturn {_id: -1}\n\t\t\treturn selector\n\n#scrollY:        '400px',\n#scrollCollapse: true,\n\t\tpagingType: \"numbers\"\n\n\t});\n","Meteor.startup(function() {\n  return TabularTables.cf_tabular_space_user = new Tabular.Table({\n    name: \"cf_tabular_space_user\",\n    collection: db.space_users,\n    drawCallback: function(settings) {\n      return $(\"#cf_reverse\").attr(\"checked\", false);\n    },\n    columns: [\n      {\n        data: \"_id\",\n        title: '<input type=\"checkbox\" name=\"cf_reverse\" id=\"cf_reverse\">',\n        orderable: false,\n        width: '10px',\n        render: function(val, type, doc) {\n          var input, inputType, ref, ref1, ref2;\n          inputType = \"checkbox\";\n          if (!((ref = TabularTables.cf_tabular_space_user.customData) != null ? ref.multiple : void 0)) {\n            inputType = \"radio\";\n          }\n          input = '<input type=\"' + inputType + '\" class=\"list_checkbox\" name=\"cf_contacts_ids\" id=\"' + doc.user + '\" value=\"' + doc.user + '\" data-name=\"' + doc.name + '\" data-email=\"' + doc.email + '\"';\n          if ((ref1 = TabularTables.cf_tabular_space_user.customData) != null ? (ref2 = ref1.defaultValues) != null ? ref2.includes(doc.user) : void 0 : void 0) {\n            input += \" checked \";\n          }\n          input += \">\";\n          return input;\n        }\n      }, {\n        data: \"name\",\n        orderable: false,\n        render: function(val, type, doc) {\n          return \"<label data-user='\" + doc.user + \"' class='for-input'><div class='user-name'><font>\" + doc.name + \"</font></div></label>\";\n        }\n      }, {\n        data: \"sort_no\",\n        title: \"\",\n        orderable: true,\n        visible: false\n      }, {\n        data: \"name\",\n        title: \"\",\n        orderable: true,\n        visible: false\n      }, {\n        data: \"email\",\n        title: \"\",\n        orderable: false,\n        visible: false\n      }\n    ],\n    onUnload: function() {\n      return console.log(\"onUnload ok....\");\n    },\n    dom: \"tp\",\n    order: [[2, \"desc\"], [3, \"asc\"]],\n    extraFields: [\"_id\", \"name\", \"user\", \"sort_no\", \"email\"],\n    lengthChange: false,\n    pageLength: 100,\n    info: false,\n    searching: true,\n    responsive: {\n      details: false\n    },\n    autoWidth: false,\n    changeSelector: function(selector, userId) {\n      var ref, space, space_user;\n      if (!userId) {\n        return {\n          _id: -1\n        };\n      }\n      space = selector.space;\n      if (!space) {\n        if ((selector != null ? (ref = selector.$and) != null ? ref.length : void 0 : void 0) > 0) {\n          space = selector.$and.getProperty('space')[0];\n        }\n      }\n      if (!space) {\n        return {\n          _id: -1\n        };\n      }\n      space_user = db.space_users.findOne({\n        user: userId,\n        space: space\n      }, {\n        fields: {\n          _id: 1\n        }\n      });\n      if (!space_user) {\n        return {\n          _id: -1\n        };\n      }\n      return selector;\n    },\n    pagingType: \"numbers\"\n  });\n});\n","Meteor.startup ->\n\tJsonRoutes.add \"post\", \"/api/formula/space_users\", (req, res, next) ->\n\t\tuserIds = req.body.userIds\n\t\tspaceId = req.query.spaceId\n\n\t\tspaceUsers = []\n\n\t\tdata = []\n\n\t\tif (userIds)\n\n\t\t\tif not userIds instanceof Array\n\t\t\t\tuserIds = [userIds]\n\n\t\t\tquery = {\n\t\t\t\tuser: {\n\t\t\t\t\t$in: userIds\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif spaceId\n\t\t\t\tquery.space = spaceId\n\n\t\t\tspace_users = db.space_users.find(query).fetch();\n\n\t\t\tselected = []\n\n\t\t\tspace_users.forEach (u)->\n\t\t\t\tif selected.indexOf(u.user) < 0\n\t\t\t\t\tfu = {}\n\n\t\t\t\t\tfu.id = u.user\n\n\t\t\t\t\tfu.name = u.name\n\n\t\t\t\t\tfu.sort_no = u.sort_no\n\n\t\t\t\t\tfu.mobile = u.mobile\n\n\t\t\t\t\tfu.work_phone = u.work_phone\n\n\t\t\t\t\tfu.position = u.position\n\n\t\t\t\t\tu_org = db.organizations.findOne({_id: u.organization}, {fields: {name: 1, fullname: 1}})\n\n\t\t\t\t\tu_orgs = db.organizations.find({_id: {$in: u.organizations}}, {fields: {name: 1, fullname: 1}}).fetch()\n\n\n\t\t\t\t\tfu.organization = {\n\t\t\t\t\t\tname: u_org?.name,\n\t\t\t\t\t\tfullname: u_org?.fullname\n\t\t\t\t\t}\n\n\t\t\t\t\tfu.organizations = {\n\t\t\t\t\t\tname: u_orgs?.getProperty(\"name\"),\n\t\t\t\t\t\tfullname: u_orgs?.getProperty(\"fullname\"),\n\t\t\t\t\t}\n\n\t\t\t\t\tfu.hr = u.hr || {}\n\n\t\t\t\t\tif db.flow_positions && db.flow_roles\n\n\t\t\t\t\t\tuser_flow_positions = db.flow_positions.find({space: u.space, users: u.user}, {fields: {role: 1}}).fetch();\n\n\t\t\t\t\t\tuser_role_ids = user_flow_positions.getProperty(\"role\");\n\n\t\t\t\t\t\tuser_roles = db.flow_roles.find({_id: {$in: user_role_ids}}, {fields: {name: 1}}).fetch();\n\n\t\t\t\t\t\tfu.roles = user_roles.getProperty(\"name\")\n\n\t\t\t\t\tdata.push fu\n\n\t\t\t\t\tselected.push u.user\n\n\t\t\tuserIds.forEach (uId)->\n\t\t\t\tspaceUsers.push _.find(data, (su)-> return su.id == uId)\n\n\n\t\tJsonRoutes.sendResult(res, {\n\t\t\tcode: 200,\n\t\t\tdata: {\n\t\t\t\t'spaceUsers': spaceUsers\n\t\t\t}\n\t\t});\n\n","Meteor.startup(function() {\n  return JsonRoutes.add(\"post\", \"/api/formula/space_users\", function(req, res, next) {\n    var data, query, selected, spaceId, spaceUsers, space_users, userIds;\n    userIds = req.body.userIds;\n    spaceId = req.query.spaceId;\n    spaceUsers = [];\n    data = [];\n    if (userIds) {\n      if (!userIds instanceof Array) {\n        userIds = [userIds];\n      }\n      query = {\n        user: {\n          $in: userIds\n        }\n      };\n      if (spaceId) {\n        query.space = spaceId;\n      }\n      space_users = db.space_users.find(query).fetch();\n      selected = [];\n      space_users.forEach(function(u) {\n        var fu, u_org, u_orgs, user_flow_positions, user_role_ids, user_roles;\n        if (selected.indexOf(u.user) < 0) {\n          fu = {};\n          fu.id = u.user;\n          fu.name = u.name;\n          fu.sort_no = u.sort_no;\n          fu.mobile = u.mobile;\n          fu.work_phone = u.work_phone;\n          fu.position = u.position;\n          u_org = db.organizations.findOne({\n            _id: u.organization\n          }, {\n            fields: {\n              name: 1,\n              fullname: 1\n            }\n          });\n          u_orgs = db.organizations.find({\n            _id: {\n              $in: u.organizations\n            }\n          }, {\n            fields: {\n              name: 1,\n              fullname: 1\n            }\n          }).fetch();\n          fu.organization = {\n            name: u_org != null ? u_org.name : void 0,\n            fullname: u_org != null ? u_org.fullname : void 0\n          };\n          fu.organizations = {\n            name: u_orgs != null ? u_orgs.getProperty(\"name\") : void 0,\n            fullname: u_orgs != null ? u_orgs.getProperty(\"fullname\") : void 0\n          };\n          fu.hr = u.hr || {};\n          if (db.flow_positions && db.flow_roles) {\n            user_flow_positions = db.flow_positions.find({\n              space: u.space,\n              users: u.user\n            }, {\n              fields: {\n                role: 1\n              }\n            }).fetch();\n            user_role_ids = user_flow_positions.getProperty(\"role\");\n            user_roles = db.flow_roles.find({\n              _id: {\n                $in: user_role_ids\n              }\n            }, {\n              fields: {\n                name: 1\n              }\n            }).fetch();\n            fu.roles = user_roles.getProperty(\"name\");\n          }\n          data.push(fu);\n          return selected.push(u.user);\n        }\n      });\n      userIds.forEach(function(uId) {\n        return spaceUsers.push(_.find(data, function(su) {\n          return su.id === uId;\n        }));\n      });\n    }\n    return JsonRoutes.sendResult(res, {\n      code: 200,\n      data: {\n        'spaceUsers': spaceUsers\n      }\n    });\n  });\n});\n","Meteor.startup ->\n\tJsonRoutes.add \"post\", \"/api/formula/organizations\", (req, res, next) ->\n\n\t\tres_orgs = []\n\n\t\tdata = []\n\n\t\torgIds = req.body.orgIds\n\n\t\tspaceId = req.query.spaceId\n\n\t\tif orgIds\n\t\t\tif not orgIds instanceof Array\n\t\t\t\torgIds = [orgIds]\n\n\t\t\tquery = {_id: {$in: orgIds}}\n\n\t\t\tif spaceId\n\t\t\t\tquery.space = spaceId\n\n\t\t\torgs = db.organizations.find(query, {fields: {name: 1, fullname: 1}}).fetch();\n\n\t\t\torgs.forEach (org)->\n\t\t\t\tdata.push {id: org._id, name: org.name, fullname: org.fullname}\n\n\t\t\torgIds.forEach (oId)->\n\t\t\t\tres_orgs.push _.find(data, (o)-> return o.id == oId)\n\n\n\n\t\tJsonRoutes.sendResult(res, {\n\t\t\tcode: 200,\n\t\t\tdata: {\n\t\t\t\t'orgs': res_orgs\n\t\t\t}\n\t\t});\n\n","Meteor.startup(function() {\n  return JsonRoutes.add(\"post\", \"/api/formula/organizations\", function(req, res, next) {\n    var data, orgIds, orgs, query, res_orgs, spaceId;\n    res_orgs = [];\n    data = [];\n    orgIds = req.body.orgIds;\n    spaceId = req.query.spaceId;\n    if (orgIds) {\n      if (!orgIds instanceof Array) {\n        orgIds = [orgIds];\n      }\n      query = {\n        _id: {\n          $in: orgIds\n        }\n      };\n      if (spaceId) {\n        query.space = spaceId;\n      }\n      orgs = db.organizations.find(query, {\n        fields: {\n          name: 1,\n          fullname: 1\n        }\n      }).fetch();\n      orgs.forEach(function(org) {\n        return data.push({\n          id: org._id,\n          name: org.name,\n          fullname: org.fullname\n        });\n      });\n      orgIds.forEach(function(oId) {\n        return res_orgs.push(_.find(data, function(o) {\n          return o.id === oId;\n        }));\n      });\n    }\n    return JsonRoutes.sendResult(res, {\n      code: 200,\n      data: {\n        'orgs': res_orgs\n      }\n    });\n  });\n});\n"]}