{"version":3,"sources":["meteor://ðŸ’»app/packages/steedos_creator-autoform-modals/lib/server/core.coffee","meteor://ðŸ’»app/lib/server/core.coffee"],"names":["Meteor","methods","options","_ids","_object_name","collection","object","ref","check","Object","String","Creator","getObject","Error","db","update","_id","$in","split","multi","id","insert","findOne"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,OAAP,CACC;AAAA,wBAAsB,UAACC,OAAD;AACrB,QAAAC,IAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,GAAA;;AAAAC,UAAMN,OAAN,EAAeO,MAAf;AACAF,UAAwBL,QAAQ,MAAR,CAAxB,EAAEC,OAAAI,IAAAJ,IAAF,EAAQC,eAAAG,IAAAH,YAAR;AACAI,UAAML,IAAN,EAAYO,MAAZ;AACAF,UAAMJ,YAAN,EAAoBM,MAApB;AAEA,WAAOR,QAAQ,MAAR,EAAgBC,IAAvB;AACA,WAAOD,QAAQ,MAAR,EAAgBE,YAAvB;AACAE,aAASK,QAAQC,SAAR,CAAkBR,YAAlB,CAAT;;AACA,SAAOE,MAAP;AACC,YAAM,IAAIN,OAAOa,KAAX,CAAiB,GAAjB,EAAsB,SAAtB,CAAN;AACA,aAAO,KAAP;ACCE;;ADAHR,iBAAaC,OAAOQ,EAApB;AAEAT,eAAWU,MAAX,CAAkB;AACjBC,WAAK;AAACC,aAAKd,KAAKe,KAAL,CAAW,GAAX;AAAN;AADY,KAAlB,EAEGhB,OAFH,EAEY;AAACiB,aAAM;AAAP,KAFZ;AAGA,WAAO,IAAP;AAjBD;AAmBA,eAAa,UAACjB,OAAD,EAAUkB,EAAV;AACZ,QAAAhB,YAAA,EAAAC,UAAA,EAAAC,MAAA;;AAAAF,mBAAeF,QAAQ,MAAR,EAAgBE,YAA/B;AAEAI,UAAMN,OAAN,EAAeO,MAAf;AACAD,UAAMJ,YAAN,EAAoBM,MAApB;AACA,WAAOR,QAAQ,MAAR,EAAgBC,IAAvB;AACA,WAAOD,QAAQ,MAAR,EAAgBE,YAAvB;AACAE,aAASK,QAAQC,SAAR,CAAkBR,YAAlB,CAAT;;AACA,SAAOE,MAAP;AACC,YAAM,IAAIN,OAAOa,KAAX,CAAiB,GAAjB,EAAsB,SAAtB,CAAN;AACA,aAAO,KAAP;ACKE;;ADJHR,iBAAaC,OAAOQ,EAApB;AACAT,eAAWU,MAAX,CAAkB;AAACC,WAAKI;AAAN,KAAlB,EAA6BlB,OAA7B;AACA,WAAO,IAAP;AAhCD;AAkCA,eAAa,UAACA,OAAD;AACZ,QAAAc,GAAA,EAAAZ,YAAA,EAAAC,UAAA,EAAAC,MAAA;;AAACF,mBAAgBF,QAAAE,YAAhB;AACDI,UAAMN,OAAN,EAAeO,MAAf;AACAD,UAAMJ,YAAN,EAAoBM,MAApB;AACA,WAAOR,QAAQC,IAAf;AACA,WAAOD,QAAQE,YAAf;AACAE,aAASK,QAAQC,SAAR,CAAkBR,YAAlB,CAAT;;AACA,SAAOE,MAAP;AACC,YAAM,IAAIN,OAAOa,KAAX,CAAiB,GAAjB,EAAsB,SAAtB,CAAN;AACA,aAAO,KAAP;ACSE;;ADRHR,iBAAaC,OAAOQ,EAApB;AACAE,UAAMX,WAAWgB,MAAX,CAAkBnB,OAAlB,CAAN;AACA,WAAOG,WAAWiB,OAAX,CAAmBN,GAAnB,CAAP;AA9CD;AAAA,CADD,E","file":"/packages/steedos_creator-autoform-modals.js","sourcesContent":["Meteor.methods\n\t\"af_multiple_update\": (options)->\n\t\tcheck options, Object\n\t\t{ _ids, _object_name} = options['$set']\n\t\tcheck _ids, String\n\t\tcheck _object_name, String\n\n\t\tdelete options['$set']._ids\n\t\tdelete options['$set']._object_name\n\t\tobject = Creator.getObject(_object_name)\n\t\tunless object\n\t\t\tthrow new Meteor.Error(403, \"æœªæ‰¾åˆ°æŒ‡å®šå¯¹è±¡\")\n\t\t\treturn false\n\t\tcollection = object.db\n\t\t# console.log \"af_modal_multiple_update,options2:\", options\n\t\tcollection.update {\n\t\t\t_id: {$in: _ids.split(\",\")}\n\t\t}, options, {multi:true}\n\t\treturn true\n\n\t\"af_update\": (options, id)->\n\t\t_object_name = options[\"$set\"]._object_name\n\n\t\tcheck options, Object\n\t\tcheck _object_name, String\n\t\tdelete options[\"$set\"]._ids\n\t\tdelete options[\"$set\"]._object_name\n\t\tobject = Creator.getObject(_object_name)\n\t\tunless object\n\t\t\tthrow new Meteor.Error(403, \"æœªæ‰¾åˆ°æŒ‡å®šå¯¹è±¡\")\n\t\t\treturn false\n\t\tcollection = object.db\n\t\tcollection.update {_id: id}, options\n\t\treturn true\n\n\t\"af_insert\": (options)->\n\t\t{_object_name} = options\n\t\tcheck options, Object\n\t\tcheck _object_name, String\n\t\tdelete options._ids\n\t\tdelete options._object_name\n\t\tobject = Creator.getObject(_object_name)\n\t\tunless object\n\t\t\tthrow new Meteor.Error(403, \"æœªæ‰¾åˆ°æŒ‡å®šå¯¹è±¡\")\n\t\t\treturn false\n\t\tcollection = object.db\n\t\t_id = collection.insert options\n\t\treturn collection.findOne(_id)","Meteor.methods({\n  \"af_multiple_update\": function(options) {\n    var _ids, _object_name, collection, object, ref;\n    check(options, Object);\n    ref = options['$set'], _ids = ref._ids, _object_name = ref._object_name;\n    check(_ids, String);\n    check(_object_name, String);\n    delete options['$set']._ids;\n    delete options['$set']._object_name;\n    object = Creator.getObject(_object_name);\n    if (!object) {\n      throw new Meteor.Error(403, \"æœªæ‰¾åˆ°æŒ‡å®šå¯¹è±¡\");\n      return false;\n    }\n    collection = object.db;\n    collection.update({\n      _id: {\n        $in: _ids.split(\",\")\n      }\n    }, options, {\n      multi: true\n    });\n    return true;\n  },\n  \"af_update\": function(options, id) {\n    var _object_name, collection, object;\n    _object_name = options[\"$set\"]._object_name;\n    check(options, Object);\n    check(_object_name, String);\n    delete options[\"$set\"]._ids;\n    delete options[\"$set\"]._object_name;\n    object = Creator.getObject(_object_name);\n    if (!object) {\n      throw new Meteor.Error(403, \"æœªæ‰¾åˆ°æŒ‡å®šå¯¹è±¡\");\n      return false;\n    }\n    collection = object.db;\n    collection.update({\n      _id: id\n    }, options);\n    return true;\n  },\n  \"af_insert\": function(options) {\n    var _id, _object_name, collection, object;\n    _object_name = options._object_name;\n    check(options, Object);\n    check(_object_name, String);\n    delete options._ids;\n    delete options._object_name;\n    object = Creator.getObject(_object_name);\n    if (!object) {\n      throw new Meteor.Error(403, \"æœªæ‰¾åˆ°æŒ‡å®šå¯¹è±¡\");\n      return false;\n    }\n    collection = object.db;\n    _id = collection.insert(options);\n    return collection.findOne(_id);\n  }\n});\n"]}