{"version":3,"sources":["meteor://💻app/packages/steedos_oauth2-server/client/subscribe.coffee","meteor://💻app/client/subscribe.coffee","meteor://💻app/packages/steedos_oauth2-server/server/rest.coffee","meteor://💻app/server/rest.coffee","meteor://💻app/packages/steedos_oauth2-server/server/publications/oauth2clients.coffee","meteor://💻app/packages/steedos_oauth2-server/server/methods/oauth2authcodes.coffee","meteor://💻app/server/methods/oauth2authcodes.coffee"],"names":["subClients","SubsManager","Meteor","startup","Tracker","autorun","c","client_id","ready","FlowRouter","getQueryParam","subscribe","Cookies","Setup","Npm","require","clearAuthCookies","req","res","cookies","uri","set","headers","origin","URI","referer","domain","overwrite","setAuthCookies","userId","authToken","maxAge","httpOnly","JsonRoutes","Middleware","use","oAuth2Server","oauthserver","authorise","add","next","accessToken","accessTokenStr","hashedToken","redirectUrl","ref","ref1","ref2","ref3","params","redirect_url","query","access_token","collections","findOne","get","Accounts","_hashLoginToken","destroyToken","writeHead","end","_generateStampedLoginToken","_hashStampedToken","_insertHashedLoginToken","token","publish","clientId","collection","client","find","fields","clientName","methods","isAuthorized","count","authCodesCollection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,UAAA;AAAAA,aAAa,IAAIC,WAAJ,EAAb;AAEAC,OAAOC,OAAP,CAAe;ACGb,SDFDC,QAAQC,OAAR,CAAgB,UAACC,CAAD;AACT,QAAAC,SAAA;;AAAA,QAAGP,WAAWQ,KAAX,EAAH;AACID,kBAAYE,WAAWC,aAAX,CAAyB,WAAzB,CAAZ;;AACA,UAAGH,SAAH;ACIJ,eDHQP,WAAWW,SAAX,CAAqB,eAArB,EAAqCJ,SAArC,CCGR;ADNA;ACQH;ADTJ,ICEC;ADHF,G;;;;;;;;;;;;;;;;;;;AEFA,IAAAK,OAAA,EAAAC,KAAA;AAAAD,UAAUE,IAAIC,OAAJ,CAAY,SAAZ,CAAV;AAEAF,QAAQ,EAAR;;AAEAA,MAAMG,gBAAN,GAAyB,UAACC,GAAD,EAAMC,GAAN;AACxB,MAAAC,OAAA,EAAAC,GAAA;AAAAD,YAAU,IAAIP,OAAJ,CAAaK,GAAb,EAAkBC,GAAlB,CAAV;AACAC,UAAQE,GAAR,CAAY,WAAZ;AACAF,UAAQE,GAAR,CAAY,cAAZ;AACAF,UAAQE,GAAR,CAAY,YAAZ;AACAF,UAAQE,GAAR,CAAY,eAAZ;;AAGA,MAAGJ,IAAIK,OAAJ,CAAYC,MAAf;AACCH,UAAM,IAAII,GAAJ,CAAQP,IAAIK,OAAJ,CAAYC,MAApB,CAAN;AADD,SAEK,IAAGN,IAAIK,OAAJ,CAAYG,OAAf;AACJL,UAAM,IAAII,GAAJ,CAAQP,IAAIK,OAAJ,CAAYG,OAApB,CAAN;ACEC;;ADAFN,UAAQE,GAAR,CAAY,WAAZ,EAAyB,EAAzB,EACC;AAAAK,YAAAN,OAAA,OAAQA,IAAKM,MAAL,EAAR,GAAQ,MAAR;AACAC,eAAW;AADX,GADD;AAGAR,UAAQE,GAAR,CAAY,cAAZ,EAA4B,EAA5B,EACC;AAAAK,YAAAN,OAAA,OAAQA,IAAKM,MAAL,EAAR,GAAQ,MAAR;AACAC,eAAW;AADX,GADD;AAGAR,UAAQE,GAAR,CAAY,YAAZ,EAA0B,EAA1B,EACC;AAAAK,YAAAN,OAAA,OAAQA,IAAKM,MAAL,EAAR,GAAQ,MAAR;AACAC,eAAW;AADX,GADD;ACOC,SDJDR,QAAQE,GAAR,CAAY,eAAZ,EAA6B,EAA7B,EACC;AAAAK,YAAAN,OAAA,OAAQA,IAAKM,MAAL,EAAR,GAAQ,MAAR;AACAC,eAAW;AADX,GADD,CCIC;AD1BuB,CAAzB;;AA0BAd,MAAMe,cAAN,GAAuB,UAACX,GAAD,EAAMC,GAAN,EAAWW,MAAX,EAAmBC,SAAnB;AACtB,MAAAX,OAAA;AAAAA,YAAU,IAAIP,OAAJ,CAAaK,GAAb,EAAkBC,GAAlB,CAAV;AAIAC,UAAQE,GAAR,CAAY,WAAZ,EAAyBQ,MAAzB,EAEC;AAAAE,YAAQ,KAAG,EAAH,GAAM,EAAN,GAAS,EAAT,GAAY,IAApB;AACAC,cAAU,KADV;AAEAL,eAAW;AAFX,GAFD;ACSC,SDJDR,QAAQE,GAAR,CAAY,cAAZ,EAA4BS,SAA5B,EAEC;AAAAC,YAAQ,KAAG,EAAH,GAAM,EAAN,GAAS,EAAT,GAAY,IAApB;AACAC,cAAU,KADV;AAEAL,eAAW;AAFX,GAFD,CCIC;ADdqB,CAAvB;;AAgBAM,WAAWC,UAAX,CAAsBC,GAAtB,CACC,aADD,EAECC,aAAaC,WAAb,CAAyBC,SAAzB,EAFD;AAKAL,WAAWM,GAAX,CAAe,KAAf,EAAsB,aAAtB,EAAqC,UAACtB,GAAD,EAAMC,GAAN,EAAWsB,IAAX;AAEpC,MAAAC,WAAA,EAAAC,cAAA,EAAAZ,SAAA,EAAAX,OAAA,EAAAwB,WAAA,EAAAC,WAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAnB,MAAA;AAAAe,gBAAA,CAAA3B,OAAA,QAAA4B,MAAA5B,IAAAgC,MAAA,YAAAJ,IAA2BK,YAA3B,GAA2B,MAA3B,GAA2B,MAA3B,MAAcjC,OAAA,QAAA6B,OAAA7B,IAAAkC,KAAA,YAAAL,KAAyCI,YAAzC,GAAyC,MAAzC,GAAyC,MAAvD,KAAuE,GAAvE;AAEAR,mBAAA,CAAAzB,OAAA,QAAA8B,OAAA9B,IAAAgC,MAAA,YAAAF,KAA8BK,YAA9B,GAA8B,MAA9B,GAA8B,MAA9B,MAAiBnC,OAAA,QAAA+B,OAAA/B,IAAAkC,KAAA,YAAAH,KAAyCI,YAAzC,GAAyC,MAAzC,GAAyC,MAA1D;AAEAX,gBAAcL,aAAaiB,WAAb,CAAyBZ,WAAzB,CAAqCa,OAArC,CACb;AAACb,iBAAaC;AAAd,GADa,CAAd;AAIAvB,YAAU,IAAIP,OAAJ,CAAaK,GAAb,EAAkBC,GAAlB,CAAV;AACAW,WAASV,QAAQoC,GAAR,CAAY,WAAZ,CAAT;AACAzB,cAAYX,QAAQoC,GAAR,CAAY,cAAZ,CAAZ;;AAGA,MAAG1B,UAAWC,SAAd;AAEC,QAAGW,YAAYZ,MAAZ,KAAoBA,MAAvB;AAEChB,YAAMG,gBAAN,CAAuBC,GAAvB,EAA4BC,GAA5B;AACAyB,oBAAca,SAASC,eAAT,CAAyB3B,SAAzB,CAAd;AACA0B,eAASE,YAAT,CAAsB7B,MAAtB,EAA8Bc,WAA9B;AAJD;AAMCzB,UAAIyC,SAAJ,CAAc,GAAd,EAAmB;AAAC,oBAAYf;AAAb,OAAnB;AACA,aAAO1B,IAAI0C,GAAJ,CAAQ,EAAR,CAAP;AATF;ACQE;;ADGF9B,cAAY0B,SAASK,0BAAT,EAAZ;AACAlB,gBAAca,SAASM,iBAAT,CAA2BhC,SAA3B,CAAd;;AACA0B,WAASO,uBAAT,CAAiCtB,YAAYZ,MAA7C,EAAoDc,WAApD;;AACA9B,QAAMe,cAAN,CAAqBX,GAArB,EAAyBC,GAAzB,EAA6BuB,YAAYZ,MAAzC,EAAgDC,UAAUkC,KAA1D;AACA9C,MAAIyC,SAAJ,CAAc,GAAd,EAAmB;AAAC,gBAAYf;AAAb,GAAnB;AACA,SAAO1B,IAAI0C,GAAJ,CAAQ,EAAR,CAAP;AA/BD,G;;;;;;;;;;;;;;;;;;;AEnDA1D,OAAO+D,OAAP,CAAe,eAAf,EAAgC,UAACC,QAAD;AAC/B,MAAAC,UAAA;AAAAA,eAAa/B,aAAaiB,WAAb,CAAyBe,MAAtC;AACA,SAAOD,WAAWE,IAAX,CAAgB;AAAC,gBAAYH;AAAb,GAAhB,EAAwC;AAACI,YAAO;AAACC,kBAAW;AAAZ;AAAR,GAAxC,CAAP;AAFD,G;;;;;;;;;;;;;;;;;;;ACAArE,OAAOsE,OAAP,CACC;AAAAC,gBAAc,UAAC5C,MAAD,EAAQqC,QAAR;AACP,QAAAQ,KAAA;AAAAA,YAAQC,oBAAoBN,IAApB,CAAyB;AAAC,gBAASxC,MAAV;AAAiB,kBAAWqC;AAA5B,KAAzB,EAAgEQ,KAAhE,EAAR;;AACA,QAAGA,QAAQ,CAAX;AACI,aAAO,IAAP;AADJ;AAGI,aAAO,KAAP;ACKP;ADVJ;AAAA,CADD,E","file":"/packages/steedos_oauth2-server.js","sourcesContent":["subClients = new SubsManager()\n\nMeteor.startup ->\n\tTracker.autorun (c)->\n        if subClients.ready()\n            client_id = FlowRouter.getQueryParam(\"client_id\")\n            if client_id\n                subClients.subscribe \"OAuth2Clients\",client_id","var subClients;\n\nsubClients = new SubsManager();\n\nMeteor.startup(function() {\n  return Tracker.autorun(function(c) {\n    var client_id;\n    if (subClients.ready()) {\n      client_id = FlowRouter.getQueryParam(\"client_id\");\n      if (client_id) {\n        return subClients.subscribe(\"OAuth2Clients\", client_id);\n      }\n    }\n  });\n});\n","Cookies = Npm.require(\"cookies\")\n\nSetup = {}\n\nSetup.clearAuthCookies = (req, res) ->\n\tcookies = new Cookies( req, res )\n\tcookies.set(\"X-User-Id\")\n\tcookies.set(\"X-Auth-Token\")\n\tcookies.set(\"X-Space-Id\")\n\tcookies.set(\"X-Space-Token\")\n\n\t# 额外清除老的domain下的cookie\n\tif req.headers.origin\n\t\turi = new URI(req.headers.origin)\n\telse if req.headers.referer\n\t\turi = new URI(req.headers.referer)\n\n\tcookies.set \"X-User-Id\", \"\",\n\t\tdomain: uri?.domain(),\n\t\toverwrite: true\n\tcookies.set \"X-Auth-Token\", \"\",\n\t\tdomain: uri?.domain(),\n\t\toverwrite: true\n\tcookies.set \"X-Space-Id\", \"\",\n\t\tdomain: uri?.domain(),\n\t\toverwrite: true\n\tcookies.set \"X-Space-Token\", \"\",\n\t\tdomain: uri?.domain(),\n\t\toverwrite: true\n\nSetup.setAuthCookies = (req, res, userId, authToken) ->\n\tcookies = new Cookies( req, res )\n\t# set cookie to response\n\t# maxAge 3 month\n\t# uri = new URI(req.headers.origin);\n\tcookies.set \"X-User-Id\", userId,\n\t\t# domain: uri.domain(),\n\t\tmaxAge: 90*60*60*24*1000,\n\t\thttpOnly: false\n\t\toverwrite: true\n\tcookies.set \"X-Auth-Token\", authToken,\n\t\t# domain: uri.domain(),\n\t\tmaxAge: 90*60*60*24*1000,\n\t\thttpOnly: false\n\t\toverwrite: true\n\nJsonRoutes.Middleware.use(\n\t'/oauth2/sso',\n\toAuth2Server.oauthserver.authorise()\n)\n\nJsonRoutes.add 'get', '/oauth2/sso', (req, res, next)->\n\n\tredirectUrl = req?.params?.redirect_url || req?.query?.redirect_url || '/'\n\t\n\taccessTokenStr = req?.params?.access_token || req?.query?.access_token\n\t\n\taccessToken = oAuth2Server.collections.accessToken.findOne(\n\t\t{accessToken: accessTokenStr}\n\t)\n\t\n\tcookies = new Cookies( req, res );\n\tuserId = cookies.get(\"X-User-Id\")\n\tauthToken = cookies.get(\"X-Auth-Token\")\n\n\t# 如果本地已经有cookies\n\tif userId and authToken\n\t\t# 比较本地数据和当前用户是否一致\n\t\tif accessToken.userId!=userId\n\t\t\t# 不一致，清除信息\n\t\t\tSetup.clearAuthCookies(req, res)\n\t\t\thashedToken = Accounts._hashLoginToken(authToken)\n\t\t\tAccounts.destroyToken(userId, hashedToken)\n\t\telse\n\t\t\tres.writeHead 301, {'Location': redirectUrl }\n\t\t\treturn res.end ''\n\t# 验证成功，登录\n\tauthToken = Accounts._generateStampedLoginToken()\n\thashedToken = Accounts._hashStampedToken authToken\n\tAccounts._insertHashedLoginToken accessToken.userId,hashedToken\n\tSetup.setAuthCookies req,res,accessToken.userId,authToken.token\n\tres.writeHead 301, {'Location': redirectUrl }\n\treturn res.end ''\n\n\n\n","var Cookies, Setup;\n\nCookies = Npm.require(\"cookies\");\n\nSetup = {};\n\nSetup.clearAuthCookies = function(req, res) {\n  var cookies, uri;\n  cookies = new Cookies(req, res);\n  cookies.set(\"X-User-Id\");\n  cookies.set(\"X-Auth-Token\");\n  cookies.set(\"X-Space-Id\");\n  cookies.set(\"X-Space-Token\");\n  if (req.headers.origin) {\n    uri = new URI(req.headers.origin);\n  } else if (req.headers.referer) {\n    uri = new URI(req.headers.referer);\n  }\n  cookies.set(\"X-User-Id\", \"\", {\n    domain: uri != null ? uri.domain() : void 0,\n    overwrite: true\n  });\n  cookies.set(\"X-Auth-Token\", \"\", {\n    domain: uri != null ? uri.domain() : void 0,\n    overwrite: true\n  });\n  cookies.set(\"X-Space-Id\", \"\", {\n    domain: uri != null ? uri.domain() : void 0,\n    overwrite: true\n  });\n  return cookies.set(\"X-Space-Token\", \"\", {\n    domain: uri != null ? uri.domain() : void 0,\n    overwrite: true\n  });\n};\n\nSetup.setAuthCookies = function(req, res, userId, authToken) {\n  var cookies;\n  cookies = new Cookies(req, res);\n  cookies.set(\"X-User-Id\", userId, {\n    maxAge: 90 * 60 * 60 * 24 * 1000,\n    httpOnly: false,\n    overwrite: true\n  });\n  return cookies.set(\"X-Auth-Token\", authToken, {\n    maxAge: 90 * 60 * 60 * 24 * 1000,\n    httpOnly: false,\n    overwrite: true\n  });\n};\n\nJsonRoutes.Middleware.use('/oauth2/sso', oAuth2Server.oauthserver.authorise());\n\nJsonRoutes.add('get', '/oauth2/sso', function(req, res, next) {\n  var accessToken, accessTokenStr, authToken, cookies, hashedToken, redirectUrl, ref, ref1, ref2, ref3, userId;\n  redirectUrl = (req != null ? (ref = req.params) != null ? ref.redirect_url : void 0 : void 0) || (req != null ? (ref1 = req.query) != null ? ref1.redirect_url : void 0 : void 0) || '/';\n  accessTokenStr = (req != null ? (ref2 = req.params) != null ? ref2.access_token : void 0 : void 0) || (req != null ? (ref3 = req.query) != null ? ref3.access_token : void 0 : void 0);\n  accessToken = oAuth2Server.collections.accessToken.findOne({\n    accessToken: accessTokenStr\n  });\n  cookies = new Cookies(req, res);\n  userId = cookies.get(\"X-User-Id\");\n  authToken = cookies.get(\"X-Auth-Token\");\n  if (userId && authToken) {\n    if (accessToken.userId !== userId) {\n      Setup.clearAuthCookies(req, res);\n      hashedToken = Accounts._hashLoginToken(authToken);\n      Accounts.destroyToken(userId, hashedToken);\n    } else {\n      res.writeHead(301, {\n        'Location': redirectUrl\n      });\n      return res.end('');\n    }\n  }\n  authToken = Accounts._generateStampedLoginToken();\n  hashedToken = Accounts._hashStampedToken(authToken);\n  Accounts._insertHashedLoginToken(accessToken.userId, hashedToken);\n  Setup.setAuthCookies(req, res, accessToken.userId, authToken.token);\n  res.writeHead(301, {\n    'Location': redirectUrl\n  });\n  return res.end('');\n});\n","Meteor.publish \"OAuth2Clients\", (clientId)->\n\tcollection = oAuth2Server.collections.client\n\treturn collection.find({'clientId': clientId}, {fields:{clientName:1}})","Meteor.methods\n\tisAuthorized: (userId,clientId) ->\n        count = authCodesCollection.find({'userId':userId,'clientId':clientId}).count()\n        if count > 0\n            return true\n        else\n            return false","Meteor.methods({\n  isAuthorized: function(userId, clientId) {\n    var count;\n    count = authCodesCollection.find({\n      'userId': userId,\n      'clientId': clientId\n    }).count();\n    if (count > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n});\n"]}