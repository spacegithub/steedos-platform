{"version":3,"sources":["meteor://ðŸ’»app/packages/steedos:cfs-base-package/base-common.js","meteor://ðŸ’»app/packages/steedos:cfs-base-package/base-server.js"],"names":["FS","Store","GridFS","Error","FileSystem","S3","WABS","Dropbox","AccessPoint","Utility","config","_collections","_Utility","defaultZero","val","cloneFileRecord","rec","options","result","omit","full","prop","hasOwnProperty","_","contains","defaultCallback","err","Meteor","console","error","message","handleError","f","callback","noop","validateAction","validators","fileObj","userId","denyValidators","deny","allowValidators","allow","Package","insecure","length","isMounted","getFileRecord","any","validator","all","getFileName","utilGetFileName","name","split","lastSlash","lastIndexOf","slice","getFileExtension","utilGetFileExtension","found","toLowerCase","setFileExtension","utilSetFileExtension","ext","currentExt","encodeParams","params","buf","each","value","key","push","encodeString","join","replace","str","encodeURIComponent","escape","_btoa","_fsUtility_btoa","buffer","Buffer","toString","btoa","fsUtility_btoa","_atob","_fsUtility_atob","atob","fsUtility_atob","extend","isEmpty","indexOf","isArray","map","once","include","size","binaryToBuffer","data","len","i","bufferToBinary","binary","EJSON","newBinary","safeCallback","bindEnvironment","safeStream","nodestream","on","safeOn","safeOnce","eachFileFromPath","p","fs","require","path","files","readdirSync","file","filter","filePath","statSync","isFile","basename","forEach"],"mappings":"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","file":"/packages/steedos_cfs-base-package.js","sourcesContent":["// Exported namespace\r\nFS = {};\r\n\r\n// namespace for adapters; XXX should this be added by cfs-storage-adapter pkg instead?\r\nFS.Store = {\r\n  GridFS: function () {\r\n    throw new Error('To use FS.Store.GridFS, you must add the \"steedos:cfs-gridfs\" package.');\r\n  },\r\n  FileSystem: function () {\r\n    throw new Error('To use FS.Store.FileSystem, you must add the \"steedos:cfs-filesystem\" package.');\r\n  },\r\n  S3: function () {\r\n    throw new Error('To use FS.Store.S3, you must add the \"steedos:cfs-s3\" package.');\r\n  },\r\n  WABS: function () {\r\n    throw new Error('To use FS.Store.WABS, you must add the \"steedos:cfs-wabs\" package.');\r\n  },\r\n  Dropbox: function () {\r\n    throw new Error('To use FS.Store.Dropbox, you must add the \"steedos:cfs-dropbox\" package.');\r\n  }\r\n};\r\n\r\n// namespace for access points\r\nFS.AccessPoint = {};\r\n\r\n// namespace for utillities\r\nFS.Utility = {};\r\n\r\n// A general place for any package to store global config settings\r\nFS.config = {};\r\n\r\n// An internal collection reference\r\nFS._collections = {};\r\n\r\n// Test scope\r\n_Utility = {};\r\n\r\n// #############################################################################\r\n//\r\n// HELPERS\r\n//\r\n// #############################################################################\r\n\r\n/** @method _Utility.defaultZero\r\n * @private\r\n  * @param {Any} val Returns number or 0 if value is a falsy\r\n  */\r\n_Utility.defaultZero = function(val) {\r\n  return +(val || 0);\r\n};\r\n\r\n/**\r\n * @method FS.Utility.cloneFileRecord\r\n * @public\r\n * @param {FS.File|FS.Collection filerecord} rec\r\n * @param {Object} [options]\r\n * @param {Boolean} [options.full=false] Set `true` to prevent certain properties from being omitted from the clone.\r\n * @returns {Object} Cloned filerecord\r\n *\r\n * Makes a shallow clone of `rec`, filtering out some properties that might be present if\r\n * it's an FS.File instance, but which we never want to be part of the stored\r\n * filerecord.\r\n *\r\n * This is a blacklist clone rather than a whitelist because we want the user to be able\r\n * to specify whatever additional properties they wish.\r\n *\r\n * In general, we expect the following whitelist properties used by the internal and\r\n * external APIs:\r\n *\r\n * _id, name, size, type, chunkCount, chunkSize, chunkSum, copies, createdAt, updatedAt, uploadedAt\r\n *\r\n * Those properties, and any additional properties added by the user, should be present\r\n * in the returned object, which is suitable for inserting into the backing collection or\r\n * extending an FS.File instance.\r\n *\r\n */\r\nFS.Utility.cloneFileRecord = function(rec, options) {\r\n  options = options || {};\r\n  var result = {};\r\n  // We use this method for two purposes. If using it to clone one FS.File into another, then\r\n  // we want a full clone. But if using it to get a filerecord object for inserting into the\r\n  // internal collection, then there are certain properties we want to omit so that they aren't\r\n  // stored in the collection.\r\n  var omit = options.full ? [] : ['collectionName', 'collection', 'data', 'createdByTransform'];\r\n  for (var prop in rec) {\r\n    if (rec.hasOwnProperty(prop) && !_.contains(omit, prop)) {\r\n      result[prop] = rec[prop];\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * @method FS.Utility.defaultCallback\r\n * @public\r\n * @param {Error} [err]\r\n * @returns {undefined}\r\n *\r\n * Can be used as a default callback for client methods that need a callback.\r\n * Simply throws the provided error if there is one.\r\n */\r\nFS.Utility.defaultCallback = function defaultCallback(err) {\r\n  if (err) {\r\n    // Show gentle error if Meteor error\r\n    if (err instanceof Meteor.Error) {\r\n      console.error(err.message);\r\n    } else {\r\n      // Normal error, just throw error\r\n      throw err;\r\n    }\r\n\r\n  }\r\n};\r\n\r\n/**\r\n * @method FS.Utility.defaultCallback\r\n * @public\r\n * @param {Function} [f] A callback function, if you have one. Can be undefined or null.\r\n * @param {Meteor.Error | Error | String} [err] Error or error message (string)\r\n * @returns {Any} the callback result if any\r\n *\r\n * Handle Error, creates an Error instance with the given text. If callback is\r\n * a function, passes the error to that function. Otherwise throws it. Useful\r\n * for dealing with errors in methods that optionally accept a callback.\r\n */\r\nFS.Utility.handleError = function(f, err, result) {\r\n  // Set callback\r\n  var callback = (typeof f === 'function')? f : FS.Utility.defaultCallback;\r\n  // Set the err\r\n  var error = (err === ''+err)? new Error(err) : err;\r\n  // callback\r\n  return callback(error, result);\r\n}\r\n\r\n/**\r\n * @method FS.Utility.noop\r\n * @public\r\n * Use this to hand a no operation / empty function\r\n */\r\nFS.Utility.noop = function() {};\r\n\r\n/**\r\n * @method validateAction\r\n * @private\r\n * @param {Object} validators - The validators object to use, with `deny` and `allow` properties.\r\n * @param {FS.File} fileObj - Mounted or mountable file object to be passed to validators.\r\n * @param {String} userId - The ID of the user who is attempting the action.\r\n * @returns {undefined}\r\n *\r\n * Throws a \"400-Bad Request\" Meteor error if the file is not mounted or\r\n * a \"400-Access denied\" Meteor error if the action is not allowed.\r\n */\r\nFS.Utility.validateAction = function validateAction(validators, fileObj, userId) {\r\n  var denyValidators = validators.deny;\r\n  var allowValidators = validators.allow;\r\n\r\n  // If insecure package is used and there are no validators defined,\r\n  // allow the action.\r\n  if (typeof Package === 'object'\r\n          && Package.insecure\r\n          && denyValidators.length + allowValidators.length === 0) {\r\n    return;\r\n  }\r\n\r\n  // If already mounted, validators should receive a fileObj\r\n  // that is fully populated\r\n  if (fileObj.isMounted()) {\r\n    fileObj.getFileRecord();\r\n  }\r\n\r\n  // Any deny returns true means denied.\r\n  if (_.any(denyValidators, function(validator) {\r\n    return validator(userId, fileObj);\r\n  })) {\r\n    throw new Meteor.Error(403, \"Access denied\");\r\n  }\r\n  // Any allow returns true means proceed. Throw error if they all fail.\r\n  if (_.all(allowValidators, function(validator) {\r\n    return !validator(userId, fileObj);\r\n  })) {\r\n    throw new Meteor.Error(403, \"Access denied\");\r\n  }\r\n};\r\n\r\n/**\r\n * @method FS.Utility.getFileName\r\n * @private\r\n * @param {String} name - A filename, filepath, or URL\r\n * @returns {String} The filename without the URL, filepath, or query string\r\n */\r\nFS.Utility.getFileName = function utilGetFileName(name) {\r\n  // in case it's a URL, strip off potential query string\r\n  // should have no effect on filepath\r\n  name = name.split('?')[0];\r\n  // strip off beginning path or url\r\n  var lastSlash = name.lastIndexOf('/');\r\n  if (lastSlash !== -1) {\r\n    name = name.slice(lastSlash + 1);\r\n  }\r\n  return name;\r\n};\r\n\r\n/**\r\n * @method FS.Utility.getFileExtension\r\n * @public\r\n * @param {String} name - A filename, filepath, or URL that may or may not have an extension.\r\n * @returns {String} The extension or an empty string if no extension found.\r\n */\r\nFS.Utility.getFileExtension = function utilGetFileExtension(name) {\r\n  name = FS.Utility.getFileName(name);\r\n  // Seekout the last '.' if found\r\n  var found = name.lastIndexOf('.');\r\n  // Return the extension if found else ''\r\n  // If found is -1, we return '' because there is no extension\r\n  // If found is 0, we return '' because it's a hidden file\r\n  return (found > 0 ? name.slice(found + 1).toLowerCase() : '');\r\n};\r\n\r\n/**\r\n * @method FS.Utility.setFileExtension\r\n * @public\r\n * @param {String} name - A filename that may or may not already have an extension.\r\n * @param {String} ext - An extension without leading period, which you want to be the new extension on `name`.\r\n * @returns {String} The filename with changed extension.\r\n */\r\nFS.Utility.setFileExtension = function utilSetFileExtension(name, ext) {\r\n  if (!name || !name.length) {\r\n    return name;\r\n  }\r\n  var currentExt = FS.Utility.getFileExtension(name);\r\n  if (currentExt.length) {\r\n    name = name.slice(0, currentExt.length * -1) + ext;\r\n  } else {\r\n    name = name + '.' + ext;\r\n  }\r\n  return name;\r\n};\r\n\r\n/*\r\n * Borrowed these from http package\r\n */\r\nFS.Utility.encodeParams = function encodeParams(params) {\r\n  var buf = [];\r\n  _.each(params, function(value, key) {\r\n    if (buf.length)\r\n      buf.push('&');\r\n    buf.push(FS.Utility.encodeString(key), '=', FS.Utility.encodeString(value));\r\n  });\r\n  return buf.join('').replace(/%20/g, '+');\r\n};\r\n\r\nFS.Utility.encodeString = function encodeString(str) {\r\n  return encodeURIComponent(str).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\r\n};\r\n\r\n/*\r\n * btoa and atob shims for client and server\r\n */\r\n\r\nFS.Utility._btoa = function _fsUtility_btoa(str) {\r\n  var buffer;\r\n\r\n  if (str instanceof Buffer) {\r\n    buffer = str;\r\n  } else {\r\n    buffer = new Buffer(str.toString(), 'binary');\r\n  }\r\n\r\n  return buffer.toString('base64');\r\n};\r\n\r\nFS.Utility.btoa = function fsUtility_btoa(str) {\r\n  if (typeof btoa === 'function') {\r\n    // Client\r\n    return btoa(str);\r\n  } else if (typeof Buffer !== 'undefined') {\r\n    // Server\r\n    return FS.Utility._btoa(str);\r\n  } else {\r\n    throw new Error('FS.Utility.btoa: Cannot base64 encode on your system');\r\n  }\r\n};\r\n\r\nFS.Utility._atob = function _fsUtility_atob(str) {\r\n  return new Buffer(str, 'base64').toString('binary');\r\n};\r\n\r\nFS.Utility.atob = function fsUtility_atob(str) {\r\n  if (typeof atob === 'function') {\r\n    // Client\r\n    return atob(str);\r\n  } else if (typeof Buffer !== 'undefined') {\r\n    // Server\r\n    return FS.Utility._atob(str);\r\n  } else {\r\n    throw new Error('FS.Utility.atob: Cannot base64 encode on your system');\r\n  }\r\n};\r\n\r\n// Api wrap for 3party libs like underscore\r\nFS.Utility.extend = _.extend;\r\n\r\nFS.Utility.each = _.each;\r\n\r\nFS.Utility.isEmpty = _.isEmpty;\r\n\r\nFS.Utility.indexOf = _.indexOf;\r\n\r\nFS.Utility.isArray = _.isArray;\r\n\r\nFS.Utility.map = _.map;\r\n\r\nFS.Utility.once = _.once;\r\n\r\nFS.Utility.include = _.include;\r\n\r\nFS.Utility.size = _.size;\r\n","/**\r\n * @method FS.Utility.binaryToBuffer\r\n * @public\r\n * @param {Uint8Array} data\r\n * @returns {Buffer}\r\n *\r\n * Converts a Uint8Array instance to a Node Buffer instance\r\n */\r\nFS.Utility.binaryToBuffer = function(data) {\r\n  var len = data.length;\r\n  var buffer = new Buffer(len);\r\n  for (var i = 0; i < len; i++) {\r\n    buffer[i] = data[i];\r\n  }\r\n  return buffer;\r\n};\r\n\r\n/**\r\n * @method FS.Utility.bufferToBinary\r\n * @public\r\n * @param {Buffer} data\r\n * @returns {Uint8Array}\r\n *\r\n * Converts a Node Buffer instance to a Uint8Array instance\r\n */\r\nFS.Utility.bufferToBinary = function(data) {\r\n  var len = data.length;\r\n  var binary = EJSON.newBinary(len);\r\n  for (var i = 0; i < len; i++) {\r\n    binary[i] = data[i];\r\n  }\r\n  return binary;\r\n};\r\n\r\n/**\r\n * @method FS.Utility.safeCallback\r\n * @public\r\n * @param {Function} callback\r\n * @returns {Function}\r\n *\r\n * Makes a callback safe for Meteor code\r\n */\r\nFS.Utility.safeCallback = function (callback) {\r\n  return Meteor.bindEnvironment(callback, function(err) { throw err; });\r\n};\r\n\r\n/**\r\n * @method FS.Utility.safeStream\r\n * @public\r\n * @param {Stream} nodestream\r\n * @returns {Stream}\r\n *\r\n * Adds `safeOn` and `safeOnce` methods to a NodeJS Stream\r\n * object. These are the same as `on` and `once`, except\r\n * that the callback is wrapped for use in Meteor.\r\n */\r\nFS.Utility.safeStream = function(nodestream) {\r\n  if (!nodestream || typeof nodestream.on !== 'function')\r\n    throw new Error('FS.Utility.safeStream requires a NodeJS Stream');\r\n\r\n  // Create Meteor safe events\r\n  nodestream.safeOn = function(name, callback) {\r\n    return nodestream.on(name, FS.Utility.safeCallback(callback));\r\n  };\r\n\r\n  // Create Meteor safe events\r\n  nodestream.safeOnce = function(name, callback) {\r\n    return nodestream.once(name, FS.Utility.safeCallback(callback));\r\n  };\r\n\r\n  // Return the modified stream - modified anyway\r\n  return nodestream;\r\n};\r\n\r\n/**\r\n * @method FS.Utility.eachFileFromPath\r\n * @public\r\n * @param {String} p - Server path\r\n * @param {Function} f - Function to run for each file found in the path.\r\n * @returns {undefined}\r\n *\r\n * Utility for iteration over files from path on server\r\n */\r\nFS.Utility.eachFileFromPath = function(p, f) {\r\n  var fs = require('fs');\r\n  var path = require('path');\r\n  var files = fs.readdirSync(p);\r\n  files.map(function (file) {\r\n    return path.join(p, file);\r\n  }).filter(function (filePath) {\r\n    return fs.statSync(filePath).isFile() && path.basename(filePath)[0] !== '.';\r\n  }).forEach(function (filePath) {\r\n    f(filePath);\r\n  });\r\n};\r\n"]}