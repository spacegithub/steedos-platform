{"version":3,"sources":["meteor://ðŸ’»app/packages/simple:json-routes/checkNpm.js","meteor://ðŸ’»app/packages/simple:json-routes/json-routes.js","meteor://ðŸ’»app/packages/simple:json-routes/middleware.js"],"names":["checkNpmVersions","module","link","v","Fiber","require","connect","connectRoute","qs","url","bodyParser","JsonRoutes","qsMiddleware","options","request","response","next","query","parse","WebApp","connectHandlers","use","urlencoded","limit","extended","json","Middleware","middleWare","routes","connectRouter","Meteor","bindEnvironment","router","errorMiddlewares","ErrorMiddleware","push","arguments","startup","_","each","errorMiddleware","map","maybeFn","isFunction","a","b","c","d","apply","add","method","path","handler","toLowerCase","req","res","setHeaders","responseHeaders","error","run","Pragma","setResponseHeaders","headers","sendResult","statusCode","code","writeJsonToBody","data","end","value","key","setHeader","undefined","shouldPrettyPrint","process","env","NODE_ENV","spacer","write","JSON","stringify","RestMiddleware"],"mappings":"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","file":"/packages/simple_json-routes.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\ncheckNpmVersions({\n\t\"connect\": \"^3.6.6\",\n\t\"connect-route\": \"^0.1.5\",\n\t\"qs\": \"^6.6.0\",\n\t\"body-parser\": \"^1.18.3\"\n}, 'simple:json-routes');\n","/* global JsonRoutes:true */\n\nvar Fiber = require('fibers');\nvar connect = require('connect');\nvar connectRoute = require('connect-route');\n\nvar qs = require(\"qs\");\nvar url = require(\"url\");\nvar bodyParser = require('body-parser');\n\nJsonRoutes = {};\n\nfunction qsMiddleware(options) {\n  return function (request, response, next) {\n    if (!request.query)\n      request.query = qs.parse(url.parse(request.url).query, options);\n    next();\n  };\n}\n\nWebApp.connectHandlers.use(qsMiddleware());\nWebApp.connectHandlers.use(bodyParser.urlencoded({ limit: '50mb', extended: true })); //Override default request size\nWebApp.connectHandlers.use(bodyParser.json({ limit: '50mb' })); //Override default request size\n\n// Handler for adding middleware before an endpoint (JsonRoutes.middleWare\n// is just for legacy reasons). Also serves as a namespace for middleware\n// packages to declare their middleware functions.\nJsonRoutes.Middleware = JsonRoutes.middleWare = connect();\nWebApp.connectHandlers.use(JsonRoutes.Middleware);\n\n// List of all defined JSON API endpoints\nJsonRoutes.routes = [];\n\n// Save reference to router for later\nvar connectRouter;\n\n// Register as a middleware\nWebApp.connectHandlers.use(Meteor.bindEnvironment(connectRoute(function (router) {\n  connectRouter = router;\n})));\n\n// Error middleware must be added last, to catch errors from prior middleware.\n// That's why we cache them and then add after startup.\nvar errorMiddlewares = [];\nJsonRoutes.ErrorMiddleware = {\n  use: function () {\n    errorMiddlewares.push(arguments);\n  },\n};\n\nMeteor.startup(function () {\n  _.each(errorMiddlewares, function (errorMiddleware) {\n    errorMiddleware = _.map(errorMiddleware, function (maybeFn) {\n      if (_.isFunction(maybeFn)) {\n        // A connect error middleware needs exactly 4 arguments because they use fn.length === 4 to\n        // decide if something is an error middleware.\n        return function (a, b, c, d) {\n          Meteor.bindEnvironment(maybeFn)(a, b, c, d);\n        }\n      }\n\n      return maybeFn;\n    });\n\n    WebApp.connectHandlers.use.apply(WebApp.connectHandlers, errorMiddleware);\n  });\n\n  errorMiddlewares = [];\n});\n\nJsonRoutes.add = function (method, path, handler) {\n  // Make sure path starts with a slash\n  if (path[0] !== '/') {\n    path = '/' + path;\n  }\n\n  // Add to list of known endpoints\n  JsonRoutes.routes.push({\n    method: method,\n    path: path,\n  });\n\n  connectRouter[method.toLowerCase()](path, function (req, res, next) {\n    // Set headers on response\n    setHeaders(res, responseHeaders);\n    Fiber(function () {\n      try {\n        handler(req, res, next);\n      } catch (error) {\n        next(error);\n      }\n    }).run();\n  });\n};\n\nvar responseHeaders = {\n  'Cache-Control': 'no-store',\n  Pragma: 'no-cache',\n};\n\nJsonRoutes.setResponseHeaders = function (headers) {\n  responseHeaders = headers;\n};\n\n/**\n * Sets the response headers, status code, and body, and ends it.\n * The JSON response will be pretty printed if NODE_ENV is `development`.\n *\n * @param {Object} res Response object\n * @param {Object} [options]\n * @param {Number} [options.code] HTTP status code. Default is 200.\n * @param {Object} [options.headers] Dictionary of headers.\n * @param {Object|Array|null|undefined} [options.data] The object to\n *   stringify as the response. If `null`, the response will be \"null\".\n *   If `undefined`, there will be no response body.\n */\nJsonRoutes.sendResult = function (res, options) {\n  options = options || {};\n\n  // We've already set global headers on response, but if they\n  // pass in more here, we set those.\n  if (options.headers) setHeaders(res, options.headers);\n\n  // Set status code on response\n  res.statusCode = options.code || 200;\n\n  // Set response body\n  writeJsonToBody(res, options.data);\n\n  // Send the response\n  res.end();\n};\n\nfunction setHeaders(res, headers) {\n  _.each(headers, function (value, key) {\n    res.setHeader(key, value);\n  });\n}\n\nfunction writeJsonToBody(res, json) {\n  if (json !== undefined) {\n    var shouldPrettyPrint = (process.env.NODE_ENV === 'development');\n    var spacer = shouldPrettyPrint ? 2 : null;\n    res.setHeader('Content-type', 'application/json');\n    res.write(JSON.stringify(json, null, spacer));\n  }\n}\n","/* global RestMiddleware:true */\n\nRestMiddleware = {};\n"]}