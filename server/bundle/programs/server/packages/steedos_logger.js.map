{"version":3,"sources":["meteor://💻app/packages/steedos:logger/checkNpm.js","meteor://💻app/packages/steedos_logger/server.coffee","meteor://💻app/server.coffee"],"names":["checkNpmVersions","module","link","v","require","StdOut","chalk","processString","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","slice","enabled","LoggerManager","superClass","_Class","loggers","queue","showPackage","showFileAndLine","logLevel","register","logger","Logger","name","emit","addToQueue","args","push","dispatchQueue","i","item","len1","ref","length","_log","apply","clearQueue","disable","enable","EventEmitter","defaultTypes","debug","color","level","log","info","success","warn","error","name1","config","fn","fn1","fn2","method","ref1","ref2","section","self","type","typeConfig","_","arguments","__section","box","methods","sections","fn3","ref3","ref4","results","_this","getPrefix","options","detailParts","details","prefix","_getCallerDetails","file","line","join","getStack","index","lines","match","packageMatch","stack","err","Error","split","exec","makeABox","message","title","j","len","len2","separator","topLine","isArray","Math","max","s","pad","lrpad","rpad","subPrefix","isString","console","unshift","SystemLogger","startup","string","date","Log","format","EJSON","parse","time","write","process","stdout","encoding","fd","viewLimit","Date","id","Random","ts","Meteor","settings","shift","publish","user","userId","ready","db","users","findOne","fields","is_cloudadmin","added","on","ref5","ref6","ref7"],"mappings":"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","file":"/packages/steedos_logger.js","sourcesContent":["// fix warning: xxx not installed\nrequire(\"chalk/package.json\");\n\nimport { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\ncheckNpmVersions({\n\t'chalk': '^2.4.2'\n}, 'steedos:logger');","chalk = require(\"chalk\")\nchalk.enabled = true;\n\n@LoggerManager = new class extends EventEmitter\n\tconstructor: ->\n\t\t@enabled = false\n\t\t@loggers = {}\n\t\t@queue = []\n\n\t\t@showPackage = false\n\t\t@showFileAndLine = false\n\t\t@logLevel = 0\n\n\tregister: (logger) ->\n\t\tif not logger instanceof Logger\n\t\t\treturn\n\n\t\t@loggers[logger.name] = logger\n\n\t\t@emit 'register', logger\n\n\taddToQueue: (logger, args)->\n\t\t@queue.push\n\t\t\tlogger: logger\n\t\t\targs: args\n\n\tdispatchQueue: ->\n\t\tfor item in @queue\n\t\t\titem.logger._log.apply item.logger, item.args\n\n\t\t@clearQueue()\n\n\tclearQueue: ->\n\t\t@queue = []\n\n\tdisable: ->\n\t\t@enabled = false\n\n\tenable: (dispatchQueue=false) ->\n\t\t@enabled = true\n\t\tif dispatchQueue is true\n\t\t\t@dispatchQueue()\n\t\telse\n\t\t\t@clearQueue()\n\n\n# @LoggerManager.on 'register', ->\n# \tconsole.log('on register', arguments)\n\n\n@Logger = class Logger\n\tdefaultTypes:\n\t\tdebug:\n\t\t\tname: 'debug'\n\t\t\tcolor: 'blue'\n\t\t\tlevel: 2\n\t\tlog:\n\t\t\tname: 'info'\n\t\t\tcolor: 'blue'\n\t\t\tlevel: 1\n\t\tinfo:\n\t\t\tname: 'info'\n\t\t\tcolor: 'blue'\n\t\t\tlevel: 1\n\t\tsuccess:\n\t\t\tname: 'info'\n\t\t\tcolor: 'green'\n\t\t\tlevel: 1\n\t\twarn:\n\t\t\tname: 'warn'\n\t\t\tcolor: 'magenta'\n\t\t\tlevel: 1\n\t\terror:\n\t\t\tname: 'error'\n\t\t\tcolor: 'red'\n\t\t\tlevel: 0\n\n\tconstructor: (@name, config={}) ->\n\t\tself = @\n\t\t@config = {}\n\n\t\t_.extend @config, config\n\n\t\tif LoggerManager.loggers[@name]?\n\t\t\tLoggerManager.loggers[@name].warn 'Duplicated instance'\n\t\t\treturn LoggerManager.loggers[@name]\n\n\t\tfor type, typeConfig of @defaultTypes\n\t\t\tdo (type, typeConfig) ->\n\t\t\t\tself[type] = (args...) ->\n\t\t\t\t\tself._log.call self,\n\t\t\t\t\t\tsection: this.__section\n\t\t\t\t\t\ttype: type\n\t\t\t\t\t\tlevel: typeConfig.level\n\t\t\t\t\t\tmethod: typeConfig.name\n\t\t\t\t\t\targuments: args\n\n\t\t\t\tself[type+\"_box\"] = (args...) ->\n\t\t\t\t\tself._log.call self,\n\t\t\t\t\t\tsection: this.__section\n\t\t\t\t\t\ttype: type\n\t\t\t\t\t\tbox: true\n\t\t\t\t\t\tlevel: typeConfig.level\n\t\t\t\t\t\tmethod: typeConfig.name\n\t\t\t\t\t\targuments: args\n\n\t\tif @config.methods?\n\t\t\tfor method, typeConfig of @config.methods\n\t\t\t\tdo (method, typeConfig) ->\n\t\t\t\t\tif self[method]?\n\t\t\t\t\t\tself.warn \"Method\", method, \"already exists\"\n\n\t\t\t\t\tif not self.defaultTypes[typeConfig.type]?\n\t\t\t\t\t\tself.warn \"Method type\", typeConfig.type, \"does not exist\"\n\n\t\t\t\t\tself[method] = (args...) ->\n\t\t\t\t\t\tself._log.call self,\n\t\t\t\t\t\t\tsection: this.__section\n\t\t\t\t\t\t\ttype: typeConfig.type\n\t\t\t\t\t\t\tlevel: if typeConfig.level? then typeConfig.level else self.defaultTypes[typeConfig.type]?.level\n\t\t\t\t\t\t\tmethod: method\n\t\t\t\t\t\t\targuments: args\n\n\t\t\t\t\tself[method+\"_box\"] = (args...) ->\n\t\t\t\t\t\tself._log.call self,\n\t\t\t\t\t\t\tsection: this.__section\n\t\t\t\t\t\t\ttype: typeConfig.type\n\t\t\t\t\t\t\tbox: true\n\t\t\t\t\t\t\tlevel: if typeConfig.level? then typeConfig.level else self.defaultTypes[typeConfig.type]?.level\n\t\t\t\t\t\t\tmethod: method\n\t\t\t\t\t\t\targuments: args\n\n\t\tif @config.sections?\n\t\t\tfor section, name of @config.sections\n\t\t\t\tdo (section, name) ->\n\t\t\t\t\tself[section] = {}\n\t\t\t\t\tfor type, typeConfig of self.defaultTypes\n\t\t\t\t\t\tdo (type, typeConfig) =>\n\t\t\t\t\t\t\tself[section][type] = =>\n\t\t\t\t\t\t\t\tself[type].apply {__section: name}, arguments\n\n\t\t\t\t\t\t\tself[section][type+\"_box\"] = =>\n\t\t\t\t\t\t\t\tself[type+\"_box\"].apply {__section: name}, arguments\n\n\t\t\t\t\tfor method, typeConfig of self.config.methods\n\t\t\t\t\t\tdo (method, typeConfig) =>\n\t\t\t\t\t\t\tself[section][method] = =>\n\t\t\t\t\t\t\t\tself[method].apply {__section: name}, arguments\n\n\t\t\t\t\t\t\tself[section][method+\"_box\"] = =>\n\t\t\t\t\t\t\t\tself[method+\"_box\"].apply {__section: name}, arguments\n\n\t\tLoggerManager.register @\n\t\treturn @\n\n\tgetPrefix: (options) ->\n\t\tif options.section?\n\t\t\tprefix = \"#{@name} ➔ #{options.section}.#{options.method}\"\n\t\telse\n\t\t\tprefix = \"#{@name} ➔ #{options.method}\"\n\n\t\tdetails = @_getCallerDetails()\n\n\t\tdetailParts = []\n\t\tif details.package? and (LoggerManager.showPackage is true or options.type is 'error')\n\t\t\tdetailParts.push details.package\n\n\t\tif LoggerManager.showFileAndLine is true or options.type is 'error'\n\t\t\tif details.file? and details.line?\n\t\t\t\tdetailParts.push \"#{details.file}:#{details.line}\"\n\t\t\telse\n\t\t\t\tif details.file?\n\t\t\t\t\tdetailParts.push details.file\n\t\t\t\tif details.line?\n\t\t\t\t\tdetailParts.push details.line\n\n\t\tif @defaultTypes[options.type]?\n#\t\t\tprefix = prefix[@defaultTypes[options.type].color] 由于colors 包的问题，服务端暂时不支持log color 显示\n\t\t\tprefix = chalk[@defaultTypes[options.type].color](prefix)\n\n\t\tif detailParts.length > 0\n\t\t\tprefix = \"#{detailParts.join(' ')} #{prefix}\"\n\n\t\treturn prefix\n\n\t# @returns {Object: { line: Number, file: String }}\n\t_getCallerDetails: ->\n\t\tgetStack = () ->\n\t\t\t# We do NOT use Error.prepareStackTrace here (a V8 extension that gets us a\n\t\t\t# pre-parsed stack) since it's impossible to compose it with the use of\n\t\t\t# Error.prepareStackTrace used on the server for source maps.\n\t\t\terr = new Error\n\t\t\tstack = err.stack\n\t\t\treturn stack\n\n\t\tstack = getStack()\n\n\t\tif not stack\n\t\t\treturn {}\n\n\t\tlines = stack.split('\\n')\n\n\t\t# looking for the first line outside the logging package (or an\n\t\t# eval if we find that first)\n\t\tline = undefined\n\t\tfor item, index in lines when index > 0\n\t\t\tline = item\n\t\t\tif line.match(/^\\s*at eval \\(eval/)\n\t\t\t\treturn {file: \"eval\"}\n\n\t\t\tif not line.match(/packages\\/rocketchat_logger(?:\\/|\\.js)/)\n\t\t\t\tbreak\n\n\t\tdetails = {}\n\n\t\t# The format for FF is 'functionName@filePath:lineNumber'\n\t\t# The format for V8 is 'functionName (packages/logging/logging.js:81)' or\n\t\t#                      'packages/logging/logging.js:81'\n\t\tmatch = /(?:[@(]| at )([^(]+?):([0-9:]+)(?:\\)|$)/.exec(line)\n\t\tif not match\n\t\t\treturn details\n\t\t# in case the matched block here is line:column\n\t\tdetails.line = match[2].split(':')[0]\n\n\t\t# Possible format: https://foo.bar.com/scripts/file.js?random=foobar\n\t\t# XXX: if you can write the following in better way, please do it\n\t\t# XXX: what about evals?\n\t\tdetails.file = match[1].split('/').slice(-1)[0].split('?')[0]\n\n\t\tpackageMatch = match[1].match(/packages\\/([^\\.\\/]+)(?:\\/|\\.)/)\n\t\tif packageMatch?\n\t\t\tdetails.package = packageMatch[1]\n\n\t\treturn details\n\n\tmakeABox: (message, title) ->\n\t\tif not _.isArray(message)\n\t\t\tmessage = message.split(\"\\n\")\n\n\t\tlen = 0\n\t\tfor line in message\n\t\t\tlen = Math.max(len, line.length)\n\n\t\ttopLine = \"+--\" + s.pad('', len, '-') + \"--+\"\n\t\tseparator = \"|  \" + s.pad('', len, '') + \"  |\"\n\t\tlines = []\n\n\t\tlines.push topLine\n\t\tif title?\n\t\t\tlines.push \"|  \" + s.lrpad(title, len) + \"  |\"\n\t\t\tlines.push topLine\n\n\t\tlines.push separator\n\n\t\tfor line in message\n\t\t\tlines.push \"|  \" + s.rpad(line, len) + \"  |\"\n\n\t\tlines.push separator\n\t\tlines.push topLine\n\t\treturn lines\n\n\n\t_log: (options) ->\n\t\tif LoggerManager.enabled is false\n\t\t\tLoggerManager.addToQueue @, arguments\n\t\t\treturn\n\n\t\toptions.level ?= 1\n\n\t\tif LoggerManager.logLevel < options.level\n\t\t\treturn\n\n\t\tprefix = @getPrefix(options)\n\n\t\tif options.box is true and _.isString(options.arguments[0])\n\t\t\tcolor = undefined\n\t\t\tif @defaultTypes[options.type]?\n\t\t\t\tcolor = @defaultTypes[options.type].color\n\n\t\t\tbox = @makeABox options.arguments[0], options.arguments[1]\n\t\t\tsubPrefix = '➔'\n\t\t\tif color?\n\t\t\t\tsubPrefix = subPrefix[color]\n\n\t\t\tconsole.log subPrefix, prefix\n\t\t\tfor line in box\n\t\t\t\tif color?\n\t\t\t\t\tconsole.log subPrefix, line[color]\n\t\t\t\telse\n\t\t\t\t\tconsole.log subPrefix, line\n\t\telse\n\t\t\toptions.arguments.unshift prefix\n\t\t\tconsole.log.apply console, options.arguments\n\n\t\treturn\n\n\n@SystemLogger = new Logger 'System',\n\tmethods:\n\t\tstartup:\n\t\t\ttype: 'success'\n\t\t\tlevel: 0\n\nprocessString = (string, date) ->\n\tif string[0] is '{'\n\t\ttry\n\t\t\treturn Log.format EJSON.parse(string), {color: true}\n\n\ttry\n\t\treturn Log.format {message: string, time: date, level: 'info'}, {color: true}\n\n\treturn string\n\nStdOut = new class extends EventEmitter\n\tconstructor: ->\n\t\t@queue = []\n\t\twrite = process.stdout.write\n\t\tprocess.stdout.write = (string, encoding, fd) =>\n\t\t\twrite.apply(process.stdout, arguments)\n\t\t\tdate = new Date\n\t\t\tstring = processString string, date\n\n\t\t\titem =\n\t\t\t\tid: Random.id()\n\t\t\t\tstring: string\n\t\t\t\tts: date\n\n\t\t\t@queue.push item\n\n\t\t\t# if RocketChat?.settings?.get('Log_View_Limit')? and @queue.length > RocketChat.settings.get('Log_View_Limit')\n\t\t\t# \t@queue.shift()\n\n\t\t\tviewLimit = Meteor.settings?.logger?.viewLimit\n\t\t\tunless viewLimit\n\t\t\t\tviewLimit = 1000\n\t\t\tif @queue.length > viewLimit\n\t\t\t\t@queue.shift()\n\n\t\t\t@emit 'write', string, item\n\n\nMeteor.publish 'stdout', ->\n\tunless @userId\n\t\treturn @ready()\n\n\t# if RocketChat.authz.hasPermission(@userId, 'view-logs') isnt true\n\t# \treturn @ready()\n\n\tunless @userId\n\t\treturn @ready()\n\t\n\tuser = db.users.findOne(@userId, {fields: {is_cloudadmin: 1}})\n\n\tunless user\n\t\treturn @ready()\n\n\tfor item in StdOut.queue\n\t\t@added 'stdout', item.id,\n\t\t\tstring: item.string\n\t\t\tts: item.ts\n\n\t@ready()\n\n\tStdOut.on 'write', (string, item) =>\n\t\t@added 'stdout', item.id,\n\t\t\tstring: item.string\n\t\t\tts: item.ts\n\n\treturn\n\nMeteor.startup ->\n\tif Meteor.settings?.logger?.enabled\n\t\tif Meteor.settings?.logger?.showPackage\n\t\t\tLoggerManager.showPackage = true;\n\t\tif Meteor.settings?.logger?.showFileAndLine\n\t\t\tLoggerManager.showFileAndLine = true;\n\t\tif Meteor.settings?.logger?.logLevel\n\t\t\tLoggerManager.logLevel = Meteor.settings.logger.logLevel;\n\n\t\tLoggerManager.enable(true);\n\n","var StdOut, chalk, processString,        \n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty,\n  slice = [].slice;\n\nchalk = require(\"chalk\");\n\nchalk.enabled = true;\n\nthis.LoggerManager = new ((function(superClass) {\n  extend(_Class, superClass);\n\n  function _Class() {\n    this.enabled = false;\n    this.loggers = {};\n    this.queue = [];\n    this.showPackage = false;\n    this.showFileAndLine = false;\n    this.logLevel = 0;\n  }\n\n  _Class.prototype.register = function(logger) {\n    if (!logger instanceof Logger) {\n      return;\n    }\n    this.loggers[logger.name] = logger;\n    return this.emit('register', logger);\n  };\n\n  _Class.prototype.addToQueue = function(logger, args) {\n    return this.queue.push({\n      logger: logger,\n      args: args\n    });\n  };\n\n  _Class.prototype.dispatchQueue = function() {\n    var i, item, len1, ref;\n    ref = this.queue;\n    for (i = 0, len1 = ref.length; i < len1; i++) {\n      item = ref[i];\n      item.logger._log.apply(item.logger, item.args);\n    }\n    return this.clearQueue();\n  };\n\n  _Class.prototype.clearQueue = function() {\n    return this.queue = [];\n  };\n\n  _Class.prototype.disable = function() {\n    return this.enabled = false;\n  };\n\n  _Class.prototype.enable = function(dispatchQueue) {\n    if (dispatchQueue == null) {\n      dispatchQueue = false;\n    }\n    this.enabled = true;\n    if (dispatchQueue === true) {\n      return this.dispatchQueue();\n    } else {\n      return this.clearQueue();\n    }\n  };\n\n  return _Class;\n\n})(EventEmitter));\n\nthis.Logger = Logger = (function() {\n  Logger.prototype.defaultTypes = {\n    debug: {\n      name: 'debug',\n      color: 'blue',\n      level: 2\n    },\n    log: {\n      name: 'info',\n      color: 'blue',\n      level: 1\n    },\n    info: {\n      name: 'info',\n      color: 'blue',\n      level: 1\n    },\n    success: {\n      name: 'info',\n      color: 'green',\n      level: 1\n    },\n    warn: {\n      name: 'warn',\n      color: 'magenta',\n      level: 1\n    },\n    error: {\n      name: 'error',\n      color: 'red',\n      level: 0\n    }\n  };\n\n  function Logger(name1, config) {\n    var fn, fn1, fn2, method, name, ref, ref1, ref2, section, self, type, typeConfig;\n    this.name = name1;\n    if (config == null) {\n      config = {};\n    }\n    self = this;\n    this.config = {};\n    _.extend(this.config, config);\n    if (LoggerManager.loggers[this.name] != null) {\n      LoggerManager.loggers[this.name].warn('Duplicated instance');\n      return LoggerManager.loggers[this.name];\n    }\n    ref = this.defaultTypes;\n    fn = function(type, typeConfig) {\n      self[type] = function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return self._log.call(self, {\n          section: this.__section,\n          type: type,\n          level: typeConfig.level,\n          method: typeConfig.name,\n          \"arguments\": args\n        });\n      };\n      return self[type + \"_box\"] = function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return self._log.call(self, {\n          section: this.__section,\n          type: type,\n          box: true,\n          level: typeConfig.level,\n          method: typeConfig.name,\n          \"arguments\": args\n        });\n      };\n    };\n    for (type in ref) {\n      typeConfig = ref[type];\n      fn(type, typeConfig);\n    }\n    if (this.config.methods != null) {\n      ref1 = this.config.methods;\n      fn1 = function(method, typeConfig) {\n        if (self[method] != null) {\n          self.warn(\"Method\", method, \"already exists\");\n        }\n        if (self.defaultTypes[typeConfig.type] == null) {\n          self.warn(\"Method type\", typeConfig.type, \"does not exist\");\n        }\n        self[method] = function() {\n          var args, ref2;\n          args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return self._log.call(self, {\n            section: this.__section,\n            type: typeConfig.type,\n            level: typeConfig.level != null ? typeConfig.level : (ref2 = self.defaultTypes[typeConfig.type]) != null ? ref2.level : void 0,\n            method: method,\n            \"arguments\": args\n          });\n        };\n        return self[method + \"_box\"] = function() {\n          var args, ref2;\n          args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return self._log.call(self, {\n            section: this.__section,\n            type: typeConfig.type,\n            box: true,\n            level: typeConfig.level != null ? typeConfig.level : (ref2 = self.defaultTypes[typeConfig.type]) != null ? ref2.level : void 0,\n            method: method,\n            \"arguments\": args\n          });\n        };\n      };\n      for (method in ref1) {\n        typeConfig = ref1[method];\n        fn1(method, typeConfig);\n      }\n    }\n    if (this.config.sections != null) {\n      ref2 = this.config.sections;\n      fn2 = function(section, name) {\n        var fn3, ref3, ref4, results;\n        self[section] = {};\n        ref3 = self.defaultTypes;\n        fn3 = (function(_this) {\n          return function(type, typeConfig) {\n            self[section][type] = function() {\n              return self[type].apply({\n                __section: name\n              }, arguments);\n            };\n            return self[section][type + \"_box\"] = function() {\n              return self[type + \"_box\"].apply({\n                __section: name\n              }, arguments);\n            };\n          };\n        })(this);\n        for (type in ref3) {\n          typeConfig = ref3[type];\n          fn3(type, typeConfig);\n        }\n        ref4 = self.config.methods;\n        results = [];\n        for (method in ref4) {\n          typeConfig = ref4[method];\n          results.push((function(_this) {\n            return function(method, typeConfig) {\n              self[section][method] = function() {\n                return self[method].apply({\n                  __section: name\n                }, arguments);\n              };\n              return self[section][method + \"_box\"] = function() {\n                return self[method + \"_box\"].apply({\n                  __section: name\n                }, arguments);\n              };\n            };\n          })(this)(method, typeConfig));\n        }\n        return results;\n      };\n      for (section in ref2) {\n        name = ref2[section];\n        fn2(section, name);\n      }\n    }\n    LoggerManager.register(this);\n    return this;\n  }\n\n  Logger.prototype.getPrefix = function(options) {\n    var detailParts, details, prefix;\n    if (options.section != null) {\n      prefix = this.name + \" ➔ \" + options.section + \".\" + options.method;\n    } else {\n      prefix = this.name + \" ➔ \" + options.method;\n    }\n    details = this._getCallerDetails();\n    detailParts = [];\n    if ((details[\"package\"] != null) && (LoggerManager.showPackage === true || options.type === 'error')) {\n      detailParts.push(details[\"package\"]);\n    }\n    if (LoggerManager.showFileAndLine === true || options.type === 'error') {\n      if ((details.file != null) && (details.line != null)) {\n        detailParts.push(details.file + \":\" + details.line);\n      } else {\n        if (details.file != null) {\n          detailParts.push(details.file);\n        }\n        if (details.line != null) {\n          detailParts.push(details.line);\n        }\n      }\n    }\n    if (this.defaultTypes[options.type] != null) {\n      prefix = chalk[this.defaultTypes[options.type].color](prefix);\n    }\n    if (detailParts.length > 0) {\n      prefix = (detailParts.join(' ')) + \" \" + prefix;\n    }\n    return prefix;\n  };\n\n  Logger.prototype._getCallerDetails = function() {\n    var details, getStack, i, index, item, len1, line, lines, match, packageMatch, stack;\n    getStack = function() {\n      var err, stack;\n      err = new Error;\n      stack = err.stack;\n      return stack;\n    };\n    stack = getStack();\n    if (!stack) {\n      return {};\n    }\n    lines = stack.split('\\n');\n    line = void 0;\n    for (index = i = 0, len1 = lines.length; i < len1; index = ++i) {\n      item = lines[index];\n      if (!(index > 0)) {\n        continue;\n      }\n      line = item;\n      if (line.match(/^\\s*at eval \\(eval/)) {\n        return {\n          file: \"eval\"\n        };\n      }\n      if (!line.match(/packages\\/rocketchat_logger(?:\\/|\\.js)/)) {\n        break;\n      }\n    }\n    details = {};\n    match = /(?:[@(]| at )([^(]+?):([0-9:]+)(?:\\)|$)/.exec(line);\n    if (!match) {\n      return details;\n    }\n    details.line = match[2].split(':')[0];\n    details.file = match[1].split('/').slice(-1)[0].split('?')[0];\n    packageMatch = match[1].match(/packages\\/([^\\.\\/]+)(?:\\/|\\.)/);\n    if (packageMatch != null) {\n      details[\"package\"] = packageMatch[1];\n    }\n    return details;\n  };\n\n  Logger.prototype.makeABox = function(message, title) {\n    var i, j, len, len1, len2, line, lines, separator, topLine;\n    if (!_.isArray(message)) {\n      message = message.split(\"\\n\");\n    }\n    len = 0;\n    for (i = 0, len1 = message.length; i < len1; i++) {\n      line = message[i];\n      len = Math.max(len, line.length);\n    }\n    topLine = \"+--\" + s.pad('', len, '-') + \"--+\";\n    separator = \"|  \" + s.pad('', len, '') + \"  |\";\n    lines = [];\n    lines.push(topLine);\n    if (title != null) {\n      lines.push(\"|  \" + s.lrpad(title, len) + \"  |\");\n      lines.push(topLine);\n    }\n    lines.push(separator);\n    for (j = 0, len2 = message.length; j < len2; j++) {\n      line = message[j];\n      lines.push(\"|  \" + s.rpad(line, len) + \"  |\");\n    }\n    lines.push(separator);\n    lines.push(topLine);\n    return lines;\n  };\n\n  Logger.prototype._log = function(options) {\n    var box, color, i, len1, line, prefix, subPrefix;\n    if (LoggerManager.enabled === false) {\n      LoggerManager.addToQueue(this, arguments);\n      return;\n    }\n    if (options.level == null) {\n      options.level = 1;\n    }\n    if (LoggerManager.logLevel < options.level) {\n      return;\n    }\n    prefix = this.getPrefix(options);\n    if (options.box === true && _.isString(options[\"arguments\"][0])) {\n      color = void 0;\n      if (this.defaultTypes[options.type] != null) {\n        color = this.defaultTypes[options.type].color;\n      }\n      box = this.makeABox(options[\"arguments\"][0], options[\"arguments\"][1]);\n      subPrefix = '➔';\n      if (color != null) {\n        subPrefix = subPrefix[color];\n      }\n      console.log(subPrefix, prefix);\n      for (i = 0, len1 = box.length; i < len1; i++) {\n        line = box[i];\n        if (color != null) {\n          console.log(subPrefix, line[color]);\n        } else {\n          console.log(subPrefix, line);\n        }\n      }\n    } else {\n      options[\"arguments\"].unshift(prefix);\n      console.log.apply(console, options[\"arguments\"]);\n    }\n  };\n\n  return Logger;\n\n})();\n\nthis.SystemLogger = new Logger('System', {\n  methods: {\n    startup: {\n      type: 'success',\n      level: 0\n    }\n  }\n});\n\nprocessString = function(string, date) {\n  if (string[0] === '{') {\n    try {\n      return Log.format(EJSON.parse(string), {\n        color: true\n      });\n    } catch (error) {}\n  }\n  try {\n    return Log.format({\n      message: string,\n      time: date,\n      level: 'info'\n    }, {\n      color: true\n    });\n  } catch (error) {}\n  return string;\n};\n\nStdOut = new ((function(superClass) {\n  extend(_Class, superClass);\n\n  function _Class() {\n    var write;\n    this.queue = [];\n    write = process.stdout.write;\n    process.stdout.write = (function(_this) {\n      return function(string, encoding, fd) {\n        var date, item, ref, ref1, viewLimit;\n        write.apply(process.stdout, arguments);\n        date = new Date;\n        string = processString(string, date);\n        item = {\n          id: Random.id(),\n          string: string,\n          ts: date\n        };\n        _this.queue.push(item);\n        viewLimit = (ref = Meteor.settings) != null ? (ref1 = ref.logger) != null ? ref1.viewLimit : void 0 : void 0;\n        if (!viewLimit) {\n          viewLimit = 1000;\n        }\n        if (_this.queue.length > viewLimit) {\n          _this.queue.shift();\n        }\n        return _this.emit('write', string, item);\n      };\n    })(this);\n  }\n\n  return _Class;\n\n})(EventEmitter));\n\nMeteor.publish('stdout', function() {\n  var i, item, len1, ref, user;\n  if (!this.userId) {\n    return this.ready();\n  }\n  if (!this.userId) {\n    return this.ready();\n  }\n  user = db.users.findOne(this.userId, {\n    fields: {\n      is_cloudadmin: 1\n    }\n  });\n  if (!user) {\n    return this.ready();\n  }\n  ref = StdOut.queue;\n  for (i = 0, len1 = ref.length; i < len1; i++) {\n    item = ref[i];\n    this.added('stdout', item.id, {\n      string: item.string,\n      ts: item.ts\n    });\n  }\n  this.ready();\n  StdOut.on('write', (function(_this) {\n    return function(string, item) {\n      return _this.added('stdout', item.id, {\n        string: item.string,\n        ts: item.ts\n      });\n    };\n  })(this));\n});\n\nMeteor.startup(function() {\n  var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7;\n  if ((ref = Meteor.settings) != null ? (ref1 = ref.logger) != null ? ref1.enabled : void 0 : void 0) {\n    if ((ref2 = Meteor.settings) != null ? (ref3 = ref2.logger) != null ? ref3.showPackage : void 0 : void 0) {\n      LoggerManager.showPackage = true;\n    }\n    if ((ref4 = Meteor.settings) != null ? (ref5 = ref4.logger) != null ? ref5.showFileAndLine : void 0 : void 0) {\n      LoggerManager.showFileAndLine = true;\n    }\n    if ((ref6 = Meteor.settings) != null ? (ref7 = ref6.logger) != null ? ref7.logLevel : void 0 : void 0) {\n      LoggerManager.logLevel = Meteor.settings.logger.logLevel;\n    }\n    return LoggerManager.enable(true);\n  }\n});\n"]}