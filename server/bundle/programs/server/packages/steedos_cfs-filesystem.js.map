{"version":3,"sources":["meteor://ðŸ’»app/packages/steedos:cfs-filesystem/checkNpm.js","meteor://ðŸ’»app/packages/steedos:cfs-filesystem/filesystem.server.js"],"names":["checkNpmVersions","module","link","v","mkdirp","fs","require","path","FS","Store","FileSystem","name","options","self","Error","pathname","__meteor_bootstrap__","serverDir","join","split","sep","homepath","process","env","HOME","HOMEPATH","USERPROFILE","replace","absolutePath","resolve","sync","debug","console","log","StorageAdapter","typeName","fileKey","fileObj","store","_getInfo","key","filename","filenameInStore","collectionName","_id","createReadStream","filepath","exists","existsSync","Meteor","createWriteStream","writeStream","on","stats","statSync","emit","size","storedAt","mtime","err","remove","callback","is_exists","unlink","error","result","errno","warn","stat"],"mappings":"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","file":"/packages/steedos_cfs-filesystem.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\r\ncheckNpmVersions({\r\n\tmkdirp: \"0.3.5\"\r\n}, 'steedos:cfs-filesystem');","var fs = require('fs');\r\nvar path = require('path');\r\nvar mkdirp = require('mkdirp');\r\n//var chokidar = require('chokidar');\r\n\r\nFS.Store.FileSystem = function(name, options) {\r\n  var self = this;\r\n  if (!(self instanceof FS.Store.FileSystem))\r\n    throw new Error('FS.Store.FileSystem missing keyword \"new\"');\r\n\r\n  // We allow options to be string/path empty or options.path\r\n  options = (options !== '' + options) ? options || {} : {\r\n    path: options\r\n  };\r\n\r\n  // Provide a default FS directory one level up from the build/bundle directory\r\n  var pathname = options.path;\r\n  if (!pathname && __meteor_bootstrap__ && __meteor_bootstrap__.serverDir) {\r\n    pathname = path.join(__meteor_bootstrap__.serverDir, '../../../cfs/files/' + name);\r\n  }\r\n\r\n  if (!pathname)\r\n    throw new Error('FS.Store.FileSystem unable to determine path');\r\n\r\n  // Check if we have '~/foo/bar'\r\n  if (pathname.split(path.sep)[0] === '~') {\r\n    var homepath = process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE;\r\n    if (homepath) {\r\n      pathname = pathname.replace('~', homepath);\r\n    } else {\r\n      throw new Error('FS.Store.FileSystem unable to resolve \"~\" in path');\r\n    }\r\n  }\r\n\r\n  // Set absolute path\r\n  var absolutePath = path.resolve(pathname);\r\n\r\n  // Ensure the path exists\r\n  mkdirp.sync(absolutePath);\r\n  FS.debug && console.log(name + ' FileSystem mounted on: ' + absolutePath);\r\n\r\n  return new FS.StorageAdapter(name, options, {\r\n    typeName: 'storage.filesystem',\r\n    fileKey: function(fileObj) {\r\n      // Lookup the copy\r\n      var store = fileObj && fileObj._getInfo(name);\r\n      // If the store and key is found return the key\r\n      if (store && store.key) return store.key;\r\n\r\n      var filename = fileObj.name();\r\n      var filenameInStore = fileObj.name({\r\n        store: name\r\n      });\r\n\r\n      // If no store key found we resolve / generate a key\r\n      return fileObj.collectionName + '-' + fileObj._id + '-' + (filenameInStore || filename);\r\n    },\r\n    createReadStream: function(fileKey, options) {\r\n      // this is the Storage adapter scope\r\n      var filepath = path.join(absolutePath, fileKey);\r\n\r\n      exists = fs.existsSync(filepath);\r\n      if (!exists)\r\n        throw new Meteor.Error(404, \"Not Found\", 'No file found');\r\n\r\n      // return the read stream - Options allow { start, end }\r\n      return fs.createReadStream(filepath, options);\r\n    },\r\n    createWriteStream: function(fileKey, options) {\r\n      options = options || {};\r\n\r\n      // this is the Storage adapter scope\r\n      var filepath = path.join(absolutePath, fileKey);\r\n\r\n      // Return the stream handle\r\n      var writeStream = fs.createWriteStream(filepath, options);\r\n\r\n      // The filesystem does not emit the \"end\" event only close - so we\r\n      // manually send the end event\r\n      writeStream.on('close', function() {\r\n        if (FS.debug) console.log('SA FileSystem - DONE!! fileKey: \"' + fileKey + '\"');\r\n\r\n        // Get the exact size of the stored file, so that we can pass it to onEnd/onStored.\r\n        // Since stream transforms might have altered the size, this is the best way to\r\n        // ensure we update the fileObj.copies with the correct size.\r\n        try {\r\n          // Get the stats of the file\r\n          var stats = fs.statSync(filepath);\r\n\r\n          // Emit end and return the fileKey, size, and updated date\r\n          writeStream.emit('stored', {\r\n            fileKey: fileKey,\r\n            size: stats.size,\r\n            storedAt: stats.mtime\r\n          });\r\n\r\n        } catch (err) {\r\n          // On error we emit the error on\r\n          writeStream.emit('error', err);\r\n        }\r\n      });\r\n\r\n      return writeStream;\r\n    },\r\n    remove: function(fileKey, callback) {\r\n      // this is the Storage adapter scope\r\n      var filepath = path.join(absolutePath, fileKey);\r\n      var is_exists = fs.existsSync(filepath);\r\n      if (is_exists) {\r\n        // Call node unlink file\r\n        fs.unlink(filepath, function(error, result) {\r\n          if (error && error.errno === 34) {\r\n            console.warn(\"SA FileSystem: Could not delete \" + filepath + \" because the file was not found.\");\r\n            callback && callback(null);\r\n          } else {\r\n            callback && callback(error, result);\r\n          }\r\n        });\r\n      } else {\r\n        callback && callback(null);\r\n      }\r\n    },\r\n    stats: function(fileKey, callback) {\r\n        // this is the Storage adapter scope\r\n        var filepath = path.join(absolutePath, fileKey);\r\n        if (typeof callback === 'function') {\r\n          fs.stat(filepath, callback);\r\n        } else {\r\n          return fs.statSync(filepath);\r\n        }\r\n      }\r\n      // Add this back and add the chokidar dependency back when we make this work eventually\r\n      // watch: function(callback) {\r\n      //   function fileKey(filePath) {\r\n      //     return filePath.replace(absolutePath, \"\");\r\n      //   }\r\n\r\n    //   FS.debug && console.log('Watching ' + absolutePath);\r\n\r\n    //   // chokidar seems to be most widely used and production ready watcher\r\n    //   var watcher = chokidar.watch(absolutePath, {ignored: /\\/\\./, ignoreInitial: true});\r\n    //   watcher.on('add', Meteor.bindEnvironment(function(filePath, stats) {\r\n    //     callback(\"change\", fileKey(filePath), {\r\n    //       name: path.basename(filePath),\r\n    //       type: null,\r\n    //       size: stats.size,\r\n    //       utime: stats.mtime\r\n    //     });\r\n    //   }, function(err) {\r\n    //     throw err;\r\n    //   }));\r\n    //   watcher.on('change', Meteor.bindEnvironment(function(filePath, stats) {\r\n    //     callback(\"change\", fileKey(filePath), {\r\n    //       name: path.basename(filePath),\r\n    //       type: null,\r\n    //       size: stats.size,\r\n    //       utime: stats.mtime\r\n    //     });\r\n    //   }, function(err) {\r\n    //     throw err;\r\n    //   }));\r\n    //   watcher.on('unlink', Meteor.bindEnvironment(function(filePath) {\r\n    //     callback(\"remove\", fileKey(filePath));\r\n    //   }, function(err) {\r\n    //     throw err;\r\n    //   }));\r\n    // }\r\n  });\r\n};"]}