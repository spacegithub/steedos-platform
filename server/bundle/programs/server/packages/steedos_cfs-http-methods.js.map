{"version":3,"sources":["meteor://ðŸ’»app/packages/steedos:cfs-http-methods/http.methods.server.api.js"],"names":["HTTP","Package","http","_methodHTTP","methodHandlers","methodTree","methodsMaxDataLength","nameFollowsConventions","name","getNameList","replace","split","createObject","keys","values","result","i","length","decodeURIComponent","addToMethodTree","methodName","list","params","currentMethodTree","key","push","slice","_","isEmpty","getMethod","reference","handle","getUserId","self","userToken","query","token","check","String","err","Meteor","Error","stack","message","user","users","findOne","$or","Accounts","_hashLoginToken","_id","defaultAuth","defaultOptionsHandler","methodObject","allowMethods","each","f","description","parameters","setStatusCode","addHeader","join","JSON","stringify","methods","newMethods","func","method","uniObj","stream","auth","post","put","get","delete","head","options","sendError","res","code","writeHead","end","requestHandler","req","callback","bufferData","dataLen","on","data","connection","destroy","finished","Buffer","ln","pos","copy","EJSON","parse","toString","streamHandler","setCordovaHeaders","request","response","origin","headers","test","setHeader","WebApp","connectHandlers","use","next","_parsedUrl","pathname","dataHandle","fiberScope","statusCode","_streamsWaiting","Fiber","require","runServerMethod","resultBuffer","thisScope","userId","userAgent","requestHeaders","setUserId","id","isSimulation","unblock","setContentType","type","value","createReadStream","createWriteStream","error","sendResponseIfDone","done","_responseSent","methodCall","apply","run"],"mappings":"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","file":"/packages/steedos_cfs-http-methods.js","sourcesContent":["/*\r\n\r\nGET /note\r\nGET /note/:id\r\nPOST /note\r\nPUT /note/:id\r\nDELETE /note/:id\r\n\r\n*/\r\nHTTP = Package.http && Package.http.HTTP || {};\r\n\r\n// Primary local test scope\r\n_methodHTTP = {};\r\n\r\n\r\n_methodHTTP.methodHandlers = {};\r\n_methodHTTP.methodTree = {};\r\n\r\n// This could be changed eg. could allow larger data chunks than 1.000.000\r\n// 5mb = 5 * 1024 * 1024 = 5242880;\r\nHTTP.methodsMaxDataLength = 5242880; //1e6;\r\n\r\n_methodHTTP.nameFollowsConventions = function(name) {\r\n  // Check that name is string, not a falsy or empty\r\n  return name && name === '' + name && name !== '';\r\n};\r\n\r\n\r\n_methodHTTP.getNameList = function(name) {\r\n  // Remove leading and trailing slashes and make command array\r\n  name = name && name.replace(/^\\//g, '') || ''; // /^\\/|\\/$/g\r\n  // TODO: Get the format from the url - eg.: \"/list/45.json\" format should be\r\n  // set in this function by splitting the last list item by . and have format\r\n  // as the last item. How should we toggle:\r\n  // \"/list/45/item.name.json\" and \"/list/45/item.name\"?\r\n  // We would either have to check all known formats or allways determin the \".\"\r\n  // as an extension. Resolving in \"json\" and \"name\" as handed format - the user\r\n  // Could simply just add the format as a parametre? or be explicit about\r\n  // naming\r\n  return name && name.split('/') || [];\r\n};\r\n\r\n// Merge two arrays one containing keys and one values\r\n_methodHTTP.createObject = function(keys, values) {\r\n  var result = {};\r\n  if (keys && values) {\r\n    for (var i = 0; i < keys.length; i++) {\r\n      result[keys[i]] = values[i] && decodeURIComponent(values[i]) || '';\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n_methodHTTP.addToMethodTree = function(methodName) {\r\n  var list = _methodHTTP.getNameList(methodName);\r\n  var name = '/';\r\n  // Contains the list of params names\r\n  var params = [];\r\n  var currentMethodTree = _methodHTTP.methodTree;\r\n\r\n  for (var i = 0; i < list.length; i++) {\r\n\r\n    // get the key name\r\n    var key = list[i];\r\n    // Check if it expects a value\r\n    if (key[0] === ':') {\r\n      // This is a value\r\n      params.push(key.slice(1));\r\n      key = ':value';\r\n    }\r\n    name += key + '/';\r\n\r\n    // Set the key into the method tree\r\n    if (typeof currentMethodTree[key] === 'undefined') {\r\n      currentMethodTree[key] = {};\r\n    }\r\n\r\n    // Dig deeper\r\n    currentMethodTree = currentMethodTree[key];\r\n\r\n  }\r\n\r\n  if (_.isEmpty(currentMethodTree[':ref'])) {\r\n    currentMethodTree[':ref'] = {\r\n      name: name,\r\n      params: params\r\n    };\r\n  }\r\n\r\n  return currentMethodTree[':ref'];\r\n};\r\n\r\n// This method should be optimized for speed since its called on allmost every\r\n// http call to the server so we return null as soon as we know its not a method\r\n_methodHTTP.getMethod = function(name) {\r\n  // Check if the\r\n  if (!_methodHTTP.nameFollowsConventions(name)) {\r\n    return null;\r\n  }\r\n  var list = _methodHTTP.getNameList(name);\r\n  // Check if we got a correct list\r\n  if (!list || !list.length) {\r\n    return null;\r\n  }\r\n  // Set current refernce in the _methodHTTP.methodTree\r\n  var currentMethodTree = _methodHTTP.methodTree;\r\n  // Buffer for values to hand on later\r\n  var values = [];\r\n  // Iterate over the method name and check if its found in the method tree\r\n  for (var i = 0; i < list.length; i++) {\r\n    // get the key name\r\n    var key = list[i];\r\n    // We expect to find the key or :value if not we break\r\n    if (typeof currentMethodTree[key] !== 'undefined' ||\r\n            typeof currentMethodTree[':value'] !== 'undefined') {\r\n      // We got a result now check if its a value\r\n      if (typeof currentMethodTree[key] === 'undefined') {\r\n        // Push the value\r\n        values.push(key);\r\n        // Set the key to :value to dig deeper\r\n        key = ':value';\r\n      }\r\n\r\n    } else {\r\n      // Break - method call not found\r\n      return null;\r\n    }\r\n\r\n    // Dig deeper\r\n    currentMethodTree = currentMethodTree[key];\r\n  }\r\n\r\n  // Extract reference pointer\r\n  var reference = currentMethodTree && currentMethodTree[':ref'];\r\n  if (typeof reference !== 'undefined') {\r\n    return {\r\n      name: reference.name,\r\n      params: _methodHTTP.createObject(reference.params, values),\r\n      handle: _methodHTTP.methodHandlers[reference.name]\r\n    };\r\n  } else {\r\n    // Did not get any reference to the method\r\n    return null;\r\n  }\r\n};\r\n\r\n// This method retrieves the userId from the token and makes sure that the token\r\n// is valid and not expired\r\n_methodHTTP.getUserId = function() {\r\n  var self = this;\r\n\r\n  // // Get ip, x-forwarded-for can be comma seperated ips where the first is the\r\n  // // client ip\r\n  // var ip = self.req.headers['x-forwarded-for'] &&\r\n  //         // Return the first item in ip list\r\n  //         self.req.headers['x-forwarded-for'].split(',')[0] ||\r\n  //         // or return the remoteAddress\r\n  //         self.req.connection.remoteAddress;\r\n\r\n  // Check authentication\r\n  var userToken = self.query.token;\r\n\r\n  // Check if we are handed strings\r\n  try {\r\n    userToken && check(userToken, String);\r\n  } catch(err) {\r\n    throw new Meteor.Error(404, 'Error user token and id not of type strings, Error: ' + (err.stack || err.message));\r\n  }\r\n\r\n  // Set the this.userId\r\n  if (userToken) {\r\n    // Look up user to check if user exists and is loggedin via token\r\n    var user = Meteor.users.findOne({\r\n        $or: [\r\n          {'services.resume.loginTokens.hashedToken': Accounts._hashLoginToken(userToken)},\r\n          {'services.resume.loginTokens.token': userToken}\r\n        ]\r\n      });\r\n    // TODO: check 'services.resume.loginTokens.when' to have the token expire\r\n\r\n    // Set the userId in the scope\r\n    return user && user._id;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n// Expose the default auth for calling from custom authentication handlers.\r\nHTTP.defaultAuth = _methodHTTP.getUserId;\r\n\r\n/*\r\n\r\nAdd default support for options\r\n\r\n*/\r\n_methodHTTP.defaultOptionsHandler = function(methodObject) {\r\n  // List of supported methods\r\n  var allowMethods = [];\r\n  // The final result object\r\n  var result = {};\r\n\r\n  // Iterate over the methods\r\n  // XXX: We should have a way to extend this - We should have some schema model\r\n  // for our methods...\r\n  _.each(methodObject, function(f, methodName) {\r\n    // Skip the stream and auth functions - they are not public / accessible\r\n    if (methodName !== 'stream' && methodName !== 'auth') {\r\n\r\n      // Create an empty description\r\n      result[methodName] = { description: '', parameters: {} };\r\n      // Add method name to headers\r\n      allowMethods.push(methodName);\r\n\r\n    }\r\n  });\r\n\r\n  // Lets play nice\r\n  this.setStatusCode(200);\r\n\r\n  // We have to set some allow headers here\r\n  this.addHeader('Allow', allowMethods.join(','));\r\n\r\n  // Return json result - Pretty print\r\n  return JSON.stringify(result, null, '\\t');\r\n};\r\n\r\n// Public interface for adding server-side http methods - if setting a method to\r\n// 'false' it would actually remove the method (can be used to unpublish a method)\r\nHTTP.methods = function(newMethods) {\r\n  _.each(newMethods, function(func, name) {\r\n    if (_methodHTTP.nameFollowsConventions(name)) {\r\n      // Check if we got a function\r\n      //if (typeof func === 'function') {\r\n        var method = _methodHTTP.addToMethodTree(name);\r\n        // The func is good\r\n        if (typeof _methodHTTP.methodHandlers[method.name] !== 'undefined') {\r\n          if (func === false) {\r\n            // If the method is set to false then unpublish\r\n            delete _methodHTTP.methodHandlers[method.name];\r\n            // Delete the reference in the _methodHTTP.methodTree\r\n            delete method.name;\r\n            delete method.params;\r\n          } else {\r\n            // We should not allow overwriting - following Meteor.methods\r\n            throw new Error('HTTP method \"' + name + '\" is already registered');\r\n          }\r\n        } else {\r\n          // We could have a function or a object\r\n          // The object could have:\r\n          // '/test/': {\r\n          //   auth: function() ... returning the userId using over default\r\n          //\r\n          //   method: function() ...\r\n          //   or\r\n          //   post: function() ...\r\n          //   put:\r\n          //   get:\r\n          //   delete:\r\n          //   head:\r\n          // }\r\n\r\n          /*\r\n          We conform to the object format:\r\n          {\r\n            auth:\r\n            post:\r\n            put:\r\n            get:\r\n            delete:\r\n            head:\r\n          }\r\n          This way we have a uniform reference\r\n          */\r\n\r\n          var uniObj = {};\r\n          if (typeof func === 'function') {\r\n            uniObj = {\r\n              'auth': _methodHTTP.getUserId,\r\n              'stream': false,\r\n              'POST': func,\r\n              'PUT': func,\r\n              'GET': func,\r\n              'DELETE': func,\r\n              'HEAD': func,\r\n              'OPTIONS': _methodHTTP.defaultOptionsHandler\r\n            };\r\n          } else {\r\n            uniObj = {\r\n              'stream': func.stream || false,\r\n              'auth': func.auth || _methodHTTP.getUserId,\r\n              'POST': func.post || func.method,\r\n              'PUT': func.put || func.method,\r\n              'GET': func.get || func.method,\r\n              'DELETE': func.delete || func.method,\r\n              'HEAD': func.head || func.get || func.method,\r\n              'OPTIONS': func.options || _methodHTTP.defaultOptionsHandler\r\n            };\r\n          }\r\n\r\n          // Registre the method\r\n          _methodHTTP.methodHandlers[method.name] = uniObj; // func;\r\n\r\n        }\r\n      // } else {\r\n      //   // We do require a function as a function to execute later\r\n      //   throw new Error('HTTP.methods failed: ' + name + ' is not a function');\r\n      // }\r\n    } else {\r\n      // We have to follow the naming spec defined in nameFollowsConventions\r\n      throw new Error('HTTP.method \"' + name + '\" invalid naming of method');\r\n    }\r\n  });\r\n};\r\n\r\nvar sendError = function(res, code, message) {\r\n  if (code) {\r\n    res.writeHead(code);\r\n  } else {\r\n    res.writeHead(500);\r\n  }\r\n  res.end(message);\r\n};\r\n\r\n// This handler collects the header data into either an object (if json) or the\r\n// raw data. The data is passed to the callback\r\nvar requestHandler = function(req, res, callback) {\r\n  if (typeof callback !== 'function') {\r\n    return null;\r\n  }\r\n\r\n  // Container for buffers and a sum of the length\r\n  var bufferData = [], dataLen = 0;\r\n\r\n  // Extract the body\r\n  req.on('data', function(data) {\r\n    bufferData.push(data);\r\n    dataLen += data.length;\r\n\r\n    // We have to check the data length in order to spare the server\r\n    if (dataLen > HTTP.methodsMaxDataLength) {\r\n      dataLen = 0;\r\n      bufferData = [];\r\n      // Flood attack or faulty client\r\n      sendError(res, 413, 'Flood attack or faulty client');\r\n      req.connection.destroy();\r\n    }\r\n  });\r\n\r\n  // When message is ready to be passed on\r\n  req.on('end', function() {\r\n    if (res.finished) {\r\n      return;\r\n    }\r\n\r\n    // Allow the result to be undefined if so\r\n    var result;\r\n\r\n    // If data found the work it - either buffer or json\r\n    if (dataLen > 0) {\r\n      result = new Buffer(dataLen);\r\n      // Merge the chunks into one buffer\r\n      for (var i = 0, ln = bufferData.length, pos = 0; i < ln; i++) {\r\n        bufferData[i].copy(result, pos);\r\n        pos += bufferData[i].length;\r\n        delete bufferData[i];\r\n      }\r\n      // Check if we could be dealing with json\r\n      if (result[0] == 0x7b && result[1] === 0x22) {\r\n        try {\r\n          // Convert the body into json and extract the data object\r\n          result = EJSON.parse(result.toString());\r\n        } catch(err) {\r\n          // Could not parse so we return the raw data\r\n        }\r\n      }\r\n    } // Else result will be undefined\r\n\r\n    try {\r\n      callback(result);\r\n    } catch(err) {\r\n      sendError(res, 500, 'Error in requestHandler callback, Error: ' + (err.stack || err.message) );\r\n    }\r\n  });\r\n\r\n};\r\n\r\n// This is the simplest handler - it simply passes req stream as data to the\r\n// method\r\nvar streamHandler = function(req, res, callback) {\r\n  try {\r\n    callback();\r\n  } catch(err) {\r\n    sendError(res, 500, 'Error in requestHandler callback, Error: ' + (err.stack || err.message) );\r\n  }\r\n};\r\n\r\n/*\r\n  Allow file uploads in cordova cfs\r\n*/\r\nvar setCordovaHeaders = function(request, response) {\r\n  var origin = request.headers.origin;\r\n  // Match http://localhost:<port> for Cordova clients in Meteor 1.3\r\n  // and http://meteor.local for earlier versions\r\n  if (origin && (origin === 'http://meteor.local' || /^http:\\/\\/localhost/.test(origin))) {\r\n    // We need to echo the origin provided in the request\r\n    response.setHeader(\"Access-Control-Allow-Origin\", origin);\r\n\r\n    response.setHeader(\"Access-Control-Allow-Methods\", \"PUT\");\r\n    response.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\r\n  }\r\n};\r\n\r\n// Handle the actual connection\r\nWebApp.connectHandlers.use(function(req, res, next) {\r\n\r\n  // Check to se if this is a http method call\r\n  var method = _methodHTTP.getMethod(req._parsedUrl.pathname);\r\n\r\n  // If method is null then it wasn't and we pass the request along\r\n  if (method === null) {\r\n    return next();\r\n  }\r\n\r\n  var dataHandle = (method.handle && method.handle.stream)?streamHandler:requestHandler;\r\n\r\n  dataHandle(req, res, function(data) {\r\n    // If methodsHandler not found or somehow the methodshandler is not a\r\n    // function then return a 404\r\n    if (typeof method.handle === 'undefined') {\r\n      sendError(res, 404, 'Error HTTP method handler \"' + method.name + '\" is not found');\r\n      return;\r\n    }\r\n\r\n    // Set CORS headers for Meteor Cordova clients\r\n    setCordovaHeaders(req, res);\r\n\r\n    // Set fiber scope\r\n    var fiberScope = {\r\n      // Pointers to Request / Response\r\n      req: req,\r\n      res: res,\r\n      // Request / Response helpers\r\n      statusCode: 200,\r\n      method: req.method,\r\n      // Headers for response\r\n      headers: {\r\n        'Content-Type': 'text/html'  // Set default type\r\n      },\r\n      // Arguments\r\n      data: data,\r\n      query: req.query,\r\n      params: method.params,\r\n      // Method reference\r\n      reference: method.name,\r\n      methodObject: method.handle,\r\n      _streamsWaiting: 0\r\n    };\r\n\r\n    // Helper functions this scope\r\n    Fiber = require('fibers');\r\n    runServerMethod = Fiber(function(self) {\r\n      var result, resultBuffer;\r\n\r\n      // We fetch methods data from methodsHandler, the handler uses the this.addItem()\r\n      // function to populate the methods, this way we have better check control and\r\n      // better error handling + messages\r\n\r\n      // The scope for the user methodObject callbacks\r\n      var thisScope = {\r\n        // The user whos id and token was used to run this method, if set/found\r\n        userId: null,\r\n        // The id of the data\r\n        _id: null,\r\n        // Set the query params ?token=1&id=2 -> { token: 1, id: 2 }\r\n        query: self.query,\r\n        // Set params /foo/:name/test/:id -> { name: '', id: '' }\r\n        params: self.params,\r\n        // Method GET, PUT, POST, DELETE, HEAD\r\n        method: self.method,\r\n        // User agent\r\n        userAgent: req.headers['user-agent'],\r\n        // All request headers\r\n        requestHeaders: req.headers,\r\n        // Add the request object it self\r\n        request: req,\r\n        // Set the userId\r\n        setUserId: function(id) {\r\n          this.userId = id;\r\n        },\r\n        // We dont simulate / run this on the client at the moment\r\n        isSimulation: false,\r\n        // Run the next method in a new fiber - This is default at the moment\r\n        unblock: function() {},\r\n        // Set the content type in header, defaults to text/html?\r\n        setContentType: function(type) {\r\n          self.headers['Content-Type'] = type;\r\n        },\r\n        setStatusCode: function(code) {\r\n          self.statusCode = code;\r\n        },\r\n        addHeader: function(key, value) {\r\n          self.headers[key] = value;\r\n        },\r\n        createReadStream: function() {\r\n          self._streamsWaiting++;\r\n          return req;\r\n        },\r\n        createWriteStream: function() {\r\n          self._streamsWaiting++;\r\n          return res;\r\n        },\r\n        Error: function(err) {\r\n\r\n          if (err instanceof Meteor.Error) {\r\n            // Return controlled error\r\n            sendError(res, err.error, err.message);\r\n          } else if (err instanceof Error) {\r\n            // Return error trace - this is not intented\r\n            sendError(res, 503, 'Error in method \"' + self.reference + '\", Error: ' + (err.stack || err.message) );\r\n          } else {\r\n            sendError(res, 503, 'Error in method \"' + self.reference + '\"' );\r\n          }\r\n\r\n        },\r\n        // getData: function() {\r\n        //   // XXX: TODO if we could run the request handler stuff eg.\r\n        //   // in here in a fiber sync it could be cool - and the user did\r\n        //   // not have to specify the stream=true flag?\r\n        // }\r\n      };\r\n\r\n      // This function sends the final response. Depending on the\r\n      // timing of the streaming, we might have to wait for all\r\n      // streaming to end, or we might have to wait for this function\r\n      // to finish after streaming ends. The checks in this function\r\n      // and the fact that we call it twice ensure that we will always\r\n      // send the response if we haven't sent an error response, but\r\n      // we will not send it too early.\r\n      function sendResponseIfDone() {\r\n        res.statusCode = self.statusCode;\r\n        // If no streams are waiting\r\n        if (self._streamsWaiting === 0 &&\r\n            (self.statusCode === 200 || self.statusCode === 206) &&\r\n            self.done &&\r\n            !self._responseSent &&\r\n            !res.finished) {\r\n          self._responseSent = true;\r\n          res.end(resultBuffer);\r\n        }\r\n      }\r\n\r\n      var methodCall = self.methodObject[self.method];\r\n\r\n      // If the method call is set for the POST/PUT/GET or DELETE then run the\r\n      // respective methodCall if its a function\r\n      if (typeof methodCall === 'function') {\r\n\r\n        // Get the userId - This is either set as a method specific handler and\r\n        // will allways default back to the builtin getUserId handler\r\n        try {\r\n          // Try to set the userId\r\n          thisScope.userId = self.methodObject.auth.apply(self);\r\n        } catch(err) {\r\n          sendError(res, err.error, (err.message || err.stack));\r\n          return;\r\n        }\r\n\r\n        // This must be attached before there's any chance of `createReadStream`\r\n        // or `createWriteStream` being called, which means before we do\r\n        // `methodCall.apply` below.\r\n        req.on('end', function() {\r\n          self._streamsWaiting--;\r\n          sendResponseIfDone();\r\n        });\r\n\r\n        // Get the result of the methodCall\r\n        try {\r\n          if (self.method === 'OPTIONS') {\r\n            result = methodCall.apply(thisScope, [self.methodObject]) || '';\r\n          } else {\r\n            result = methodCall.apply(thisScope, [self.data]) || '';\r\n          }\r\n        } catch(err) {\r\n          if (err instanceof Meteor.Error) {\r\n            // Return controlled error\r\n            sendError(res, err.error, err.message);\r\n          } else {\r\n            // Return error trace - this is not intented\r\n            sendError(res, 503, 'Error in method \"' + self.reference + '\", Error: ' + (err.stack || err.message) );\r\n          }\r\n          return;\r\n        }\r\n\r\n        // Set headers\r\n        _.each(self.headers, function(value, key) {\r\n          // If value is defined then set the header, this allows for unsetting\r\n          // the default content-type\r\n          if (typeof value !== 'undefined')\r\n            res.setHeader(key, value);\r\n        });\r\n\r\n        // If OK / 200 then Return the result\r\n        if (self.statusCode === 200 || self.statusCode === 206) {\r\n\r\n          if (self.method !== \"HEAD\") {\r\n            // Return result\r\n            if (typeof result === 'string') {\r\n              resultBuffer = new Buffer(result);\r\n            } else {\r\n              resultBuffer = new Buffer(JSON.stringify(result));\r\n            }\r\n\r\n            // Check if user wants to overwrite content length for some reason?\r\n            if (typeof self.headers['Content-Length'] === 'undefined') {\r\n              self.headers['Content-Length'] = resultBuffer.length;\r\n            }\r\n\r\n          }\r\n\r\n          self.done = true;\r\n          sendResponseIfDone();\r\n\r\n        } else {\r\n          // Allow user to alter the status code and send a message\r\n          sendError(res, self.statusCode, result);\r\n        }\r\n\r\n      } else {\r\n        sendError(res, 404, 'Service not found');\r\n      }\r\n\r\n\r\n    });\r\n    // Run http methods handler\r\n    try {\r\n      runServerMethod.run(fiberScope);\r\n    } catch(err) {\r\n      sendError(res, 500, 'Error running the server http method handler, Error: ' + (err.stack || err.message));\r\n    }\r\n\r\n  }); // EO Request handler\r\n\r\n\r\n});\r\n"]}