{"version":3,"sources":["meteor://ðŸ’»app/packages/steedos:smsqueue/checkNpm.js","meteor://ðŸ’»app/packages/steedos:smsqueue/lib/common/main.js","meteor://ðŸ’»app/packages/steedos:smsqueue/lib/common/sms.js","meteor://ðŸ’»app/packages/steedos:smsqueue/lib/server/api.js","meteor://ðŸ’»app/packages/steedos:smsqueue/lib/server/webservice.js","meteor://ðŸ’»app/packages/steedos_smsqueue/server/startup.coffee","meteor://ðŸ’»app/server/startup.coffee"],"names":["checkNpmVersions","module","link","v","Meteor","settings","sms","aliyun","SMSQueue","EventState","WebServiceSMSQueue","collection","Collection","_validateDocument","check","Object","sent","Match","Optional","Boolean","sending","Integer","createdAt","Date","createdBy","OneOf","String","send","options","spaceId","currentUser","isClient","userId","isServer","_","extend","test","pick","owner","space","insert","isConfigured","sendWorker","task","interval","debug","console","log","setInterval","error","message","Configure","self","sendTimeout","Error","SMS","require","smsSender","AccessKeyId","accessKeyId","AccessKeySecret","accessKeySecret","sendSMS","catch","err","_querySend","_id","serverSend","isSending","sendInterval","_ensureIndex","now","timeoutAt","reserved","update","$lt","$set","result","keepSMS","remove","sentAt","emit","batchSize","sendBatchSize","pendingSMS","find","$and","sort","limit","forEach","request","sendToWebService","doc","url","spaceToken","signname","clone","post","set","end","res","startup","ref","ref1","ref2","ref3","ref4","ref5","ref6","ref7","ref8","ref9","webservice","smsqueue_interval","qcloud","space_token"],"mappings":"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","file":"/packages/steedos_smsqueue.js","sourcesContent":["import {\n\tcheckNpmVersions\n} from 'meteor/tmeasday:check-npm-versions';\n\nif (Meteor.settings && Meteor.settings.sms && Meteor.settings.sms.aliyun) {\n\tcheckNpmVersions({\n\t\t\"aliyun-sms-node\": \"^1.1.2\"\n\t}, 'steedos:smsqueue');\n}","SMSQueue = new EventState();\nWebServiceSMSQueue = new EventState();","SMSQueue.collection = new Meteor.Collection('_sms_queue');\nWebServiceSMSQueue.collection = SMSQueue.collection;\nvar _validateDocument = function(sms) {\n\n\tcheck(sms, {\n\t\tsms: Object,\n\t\tsent: Match.Optional(Boolean),\n\t\tsending: Match.Optional(Match.Integer),\n\t\tcreatedAt: Date,\n\t\tcreatedBy: Match.OneOf(String, null)\n\t});\n\n};\n\nSMSQueue.send = function(options, spaceId) {\n\tvar currentUser = Meteor.isClient && Meteor.userId && Meteor.userId() || Meteor.isServer && (options.createdBy || '<SERVER>') || null\n\tvar sms = _.extend({\n\t\tcreatedAt: new Date(),\n\t\tcreatedBy: currentUser\n\t});\n\n\tif (Match.test(options, Object)) {\n\t\tsms.sms = _.pick(options, 'Format', 'Action', 'ParamString', 'RecNum', 'SignName', 'TemplateCode', 'msg');\n\t}\n\n\tsms.sent = false;\n\tsms.sending = 0;\n\n\t_validateDocument(sms);\n\n\tif(options.createdBy){\n\t\tsms.owner = options.createdBy\n\t}\n\n\tif(spaceId){\n\t\tsms.space = spaceId\n\t}\n\n\treturn SMSQueue.collection.insert(sms);\n};","var isConfigured = false;\nvar sendWorker = function(task, interval) {\n\n\tif (SMSQueue.debug) {\n\t\tconsole.log('SMSQueue: Send worker started, using interval: ' + interval);\n\t}\n\n\treturn Meteor.setInterval(function() {\n\t\ttry {\n\t\t\ttask();\n\t\t} catch (error) {\n\t\t\tif (SMSQueue.debug) {\n\t\t\t\tconsole.log('SMSQueue: Error while sending: ' + error.message);\n\t\t\t}\n\t\t}\n\t}, interval);\n};\n\n\n\n/*\n\toptions: {\n\t\t// Controls the sending interval\n\t\tsendInterval: Match.Optional(Number),\n\t\t// Controls the sending batch size per interval\n\t\tsendBatchSize: Match.Optional(Number),\n\t\t// Allow optional keeping notifications in collection\n\t\tkeepSMS: Match.Optional(Boolean)\n\t}\n*/\nSMSQueue.Configure = function(options) {\n\tvar self = this;\n\toptions = _.extend({\n\t\tsendTimeout: 60000, // Timeout period for sms send\n\t}, options);\n\n\t// Block multiple calls\n\tif (isConfigured) {\n\t\tthrow new Error('SMSQueue.Configure should not be called more than once!');\n\t}\n\n\tisConfigured = true;\n\n\t// Add debug info\n\tif (SMSQueue.debug) {\n\t\tconsole.log('SMSQueue.Configure', options);\n\t}\n\n\tvar SMS = require('aliyun-sms-node'),\n\tsmsSender;\n\n\tsmsSender = new SMS({\n\t\tAccessKeyId: options.accessKeyId,\n\t\tAccessKeySecret: options.accessKeySecret\n\t});\n\n\tself.sendSMS = function(sms) {\n\t\tif (SMSQueue.debug) {\n\t\t\tconsole.log(\"sendSMS\");\n\t\t\tconsole.log(sms);\n\t\t}\n\n\t\tsmsSender.send(sms.sms).catch(err => {\n\t\t\tconsole.error(err)\n\t\t});\n\t}\n\n\t// Universal send function\n\tvar _querySend = function(options) {\n\n\t\tif (self.sendSMS) {\n\t\t\tself.sendSMS(options);\n\t\t}\n\n\t\treturn {\n\t\t\tsms: [options._id]\n\t\t};\n\t};\n\n\tself.serverSend = function(options) {\n\t\toptions = options || {};\n\t\treturn _querySend(options);\n\t};\n\n\n\t// This interval will allow only one sms to be sent at a time, it\n\t// will check for new sms at every `options.sendInterval`\n\t// (default interval is 15000 ms)\n\t//\n\t// It looks in sms collection to see if theres any pending\n\t// sms, if so it will try to reserve the pending sms.\n\t// If successfully reserved the send is started.\n\t//\n\t// If sms.query is type string, it's assumed to be a json string\n\t// version of the query selector. Making it able to carry `$` properties in\n\t// the mongo collection.\n\t//\n\t// Pr. default sms are removed from the collection after send have\n\t// completed. Setting `options.keepSMS` will update and keep the\n\t// sms eg. if needed for historical reasons.\n\t//\n\t// After the send have completed a \"send\" event will be emitted with a\n\t// status object containing sms id and the send result object.\n\t//\n\tvar isSending = false;\n\n\tif (options.sendInterval !== null) {\n\n\t\t// This will require index since we sort sms by createdAt\n\t\tSMSQueue.collection._ensureIndex({\n\t\t\tcreatedAt: 1\n\t\t});\n\t\tSMSQueue.collection._ensureIndex({\n\t\t\tsent: 1\n\t\t});\n\t\tSMSQueue.collection._ensureIndex({\n\t\t\tsending: 1\n\t\t});\n\n\n\t\tvar sendSMS = function(sms) {\n\t\t\t// Reserve sms\n\t\t\tvar now = +new Date();\n\t\t\tvar timeoutAt = now + options.sendTimeout;\n\t\t\tvar reserved = SMSQueue.collection.update({\n\t\t\t\t_id: sms._id,\n\t\t\t\tsent: false, // xxx: need to make sure this is set on create\n\t\t\t\tsending: {\n\t\t\t\t\t$lt: now\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t$set: {\n\t\t\t\t\tsending: timeoutAt,\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Make sure we only handle sms reserved by this\n\t\t\t// instance\n\t\t\tif (reserved) {\n\n\t\t\t\t// Send the sms\n\t\t\t\tvar result = SMSQueue.serverSend(sms);\n\n\t\t\t\tif (!options.keepSMS) {\n\t\t\t\t\t// Pr. Default we will remove sms\n\t\t\t\t\tSMSQueue.collection.remove({\n\t\t\t\t\t\t_id: sms._id\n\t\t\t\t\t});\n\t\t\t\t} else {\n\n\t\t\t\t\t// Update the sms\n\t\t\t\t\tSMSQueue.collection.update({\n\t\t\t\t\t\t_id: sms._id\n\t\t\t\t\t}, {\n\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t// Mark as sent\n\t\t\t\t\t\t\tsent: true,\n\t\t\t\t\t\t\t// Set the sent date\n\t\t\t\t\t\t\tsentAt: new Date(),\n\t\t\t\t\t\t\t// Not being sent anymore\n\t\t\t\t\t\t\tsending: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\t// Emit the send\n\t\t\t\tself.emit('send', {\n\t\t\t\t\tsms: sms._id,\n\t\t\t\t\tresult: result\n\t\t\t\t});\n\n\t\t\t} // Else could not reserve\n\t\t}; // EO sendSMS\n\n\t\tsendWorker(function() {\n\n\t\t\tif (isSending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Set send fence\n\t\t\tisSending = true;\n\n\t\t\tvar batchSize = options.sendBatchSize || 1;\n\n\t\t\tvar now = +new Date();\n\n\t\t\t// Find sms that are not being or already sent\n\t\t\tvar pendingSMS = SMSQueue.collection.find({\n\t\t\t\t$and: [\n\t\t\t\t\t// Message is not sent\n\t\t\t\t\t{\n\t\t\t\t\t\tsent: false\n\t\t\t\t\t},\n\t\t\t\t\t// And not being sent by other instances\n\t\t\t\t\t{\n\t\t\t\t\t\tsending: {\n\t\t\t\t\t\t\t$lt: now\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}, {\n\t\t\t\t// Sort by created date\n\t\t\t\tsort: {\n\t\t\t\t\tcreatedAt: 1\n\t\t\t\t},\n\t\t\t\tlimit: batchSize\n\t\t\t});\n\n\t\t\tpendingSMS.forEach(function(sms) {\n\t\t\t\ttry {\n\t\t\t\t\tsendSMS(sms);\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\tif (SMSQueue.debug) {\n\t\t\t\t\t\tconsole.log('SMSQueue: Could not send sms id: \"' + sms._id + '\", Error: ' + error.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}); // EO forEach\n\n\t\t\t// Remove the send fence\n\t\t\tisSending = false;\n\t\t}, options.sendInterval || 15000); // Default every 15th sec\n\n\t} else {\n\t\tif (SMSQueue.debug) {\n\t\t\tconsole.log('SMSQueue: Send server is disabled');\n\t\t}\n\t}\n\n};","var isConfigured = false;\nvar request = require('superagent');\n\nvar sendWorker = function(task, interval) {\n\n\tif (WebServiceSMSQueue.debug) {\n\t\tconsole.log('WebServiceSMSQueue: Send worker started, using interval: ' + interval);\n\t}\n\n\treturn Meteor.setInterval(function() {\n\t\ttry {\n\t\t\ttask();\n\t\t} catch (error) {\n\t\t\tif (WebServiceSMSQueue.debug) {\n\t\t\t\tconsole.log('WebServiceSMSQueue: Error while sending: ' + error.message);\n\t\t\t}\n\t\t}\n\t}, interval);\n};\n\n\nvar sendToWebService = function(doc, url, spaceToken, signname){\n\tvar message = _.clone(doc);\n\tmessage.signname = signname;\n\tdelete message._id;\n\trequest\n\t\t.post(url)\n\t\t.send(message)\n\t\t.set('Authorization', 'Bearer ' + spaceToken)\n\t\t.end(function(err, res) {\n\t\t\tif (err) {\n\t\t\t\treturn console.error(err);\n\t\t\t}\n\t\t});\n}\n\n/*\n\toptions: {\n\t\t// Controls the sending interval\n\t\tsendInterval: Match.Optional(Number),\n\t\t// Controls the sending batch size per interval\n\t\tsendBatchSize: Match.Optional(Number),\n\t\t// Allow optional keeping notifications in collection\n\t\tkeepSMS: Match.Optional(Boolean)\n\t}\n*/\nWebServiceSMSQueue.Configure = function(options) {\n\tvar self = this;\n\toptions = _.extend({\n\t\tsendTimeout: 60000, // Timeout period for sms send\n\t}, options);\n\n\t// Block multiple calls\n\tif (isConfigured) {\n\t\tthrow new Error('WebServiceSMSQueue.Configure should not be called more than once!');\n\t}\n\n\tisConfigured = true;\n\n\t// Add debug info\n\tif (WebServiceSMSQueue.debug) {\n\t\tconsole.log('WebServiceSMSQueue.Configure', options);\n\t}\n\n\tvar url = options.url;\n\tvar spaceToken = options.spaceToken;\n\tvar signname = options.signname;\n\n\tself.sendSMS = function(sms) {\n\t\tif (WebServiceSMSQueue.debug) {\n\t\t\tconsole.log(\"sendSMS\");\n\t\t\tconsole.log(sms);\n\t\t}\n\t\tsendToWebService(sms, url, spaceToken, signname)\n\t}\n\n\t// Universal send function\n\tvar _querySend = function(options) {\n\n\t\tif (self.sendSMS) {\n\t\t\tself.sendSMS(options);\n\t\t}\n\n\t\treturn {\n\t\t\tsms: [options._id]\n\t\t};\n\t};\n\n\tself.serverSend = function(options) {\n\t\toptions = options || {};\n\t\treturn _querySend(options);\n\t};\n\n\n\t// This interval will allow only one sms to be sent at a time, it\n\t// will check for new sms at every `options.sendInterval`\n\t// (default interval is 15000 ms)\n\t//\n\t// It looks in sms collection to see if theres any pending\n\t// sms, if so it will try to reserve the pending sms.\n\t// If successfully reserved the send is started.\n\t//\n\t// If sms.query is type string, it's assumed to be a json string\n\t// version of the query selector. Making it able to carry `$` properties in\n\t// the mongo collection.\n\t//\n\t// Pr. default sms are removed from the collection after send have\n\t// completed. Setting `options.keepSMS` will update and keep the\n\t// sms eg. if needed for historical reasons.\n\t//\n\t// After the send have completed a \"send\" event will be emitted with a\n\t// status object containing sms id and the send result object.\n\t//\n\tvar isSending = false;\n\n\tif (options.sendInterval !== null) {\n\n\t\t// This will require index since we sort sms by createdAt\n\t\tWebServiceSMSQueue.collection._ensureIndex({\n\t\t\tcreatedAt: 1\n\t\t});\n\t\tWebServiceSMSQueue.collection._ensureIndex({\n\t\t\tsent: 1\n\t\t});\n\t\tWebServiceSMSQueue.collection._ensureIndex({\n\t\t\tsending: 1\n\t\t});\n\n\n\t\tvar sendSMS = function(sms) {\n\t\t\t// Reserve sms\n\t\t\tvar now = +new Date();\n\t\t\tvar timeoutAt = now + options.sendTimeout;\n\t\t\tvar reserved = WebServiceSMSQueue.collection.update({\n\t\t\t\t_id: sms._id,\n\t\t\t\tsent: false, // xxx: need to make sure this is set on create\n\t\t\t\tsending: {\n\t\t\t\t\t$lt: now\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t$set: {\n\t\t\t\t\tsending: timeoutAt,\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Make sure we only handle sms reserved by this\n\t\t\t// instance\n\t\t\tif (reserved) {\n\n\t\t\t\t// Send the sms\n\t\t\t\tvar result = WebServiceSMSQueue.serverSend(sms);\n\n\t\t\t\tif (!options.keepSMS) {\n\t\t\t\t\t// Pr. Default we will remove sms\n\t\t\t\t\tWebServiceSMSQueue.collection.remove({\n\t\t\t\t\t\t_id: sms._id\n\t\t\t\t\t});\n\t\t\t\t} else {\n\n\t\t\t\t\t// Update the sms\n\t\t\t\t\tWebServiceSMSQueue.collection.update({\n\t\t\t\t\t\t_id: sms._id\n\t\t\t\t\t}, {\n\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t// Mark as sent\n\t\t\t\t\t\t\tsent: true,\n\t\t\t\t\t\t\t// Set the sent date\n\t\t\t\t\t\t\tsentAt: new Date(),\n\t\t\t\t\t\t\t// Not being sent anymore\n\t\t\t\t\t\t\tsending: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\t// Emit the send\n\t\t\t\tself.emit('send', {\n\t\t\t\t\tsms: sms._id,\n\t\t\t\t\tresult: result\n\t\t\t\t});\n\n\t\t\t} // Else could not reserve\n\t\t}; // EO sendSMS\n\n\t\tsendWorker(function() {\n\n\t\t\tif (isSending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Set send fence\n\t\t\tisSending = true;\n\n\t\t\tvar batchSize = options.sendBatchSize || 1;\n\n\t\t\tvar now = +new Date();\n\n\t\t\t// Find sms that are not being or already sent\n\t\t\tvar pendingSMS = WebServiceSMSQueue.collection.find({\n\t\t\t\t$and: [\n\t\t\t\t\t// Message is not sent\n\t\t\t\t\t{\n\t\t\t\t\t\tsent: false\n\t\t\t\t\t},\n\t\t\t\t\t// And not being sent by other instances\n\t\t\t\t\t{\n\t\t\t\t\t\tsending: {\n\t\t\t\t\t\t\t$lt: now\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}, {\n\t\t\t\t// Sort by created date\n\t\t\t\tsort: {\n\t\t\t\t\tcreatedAt: 1\n\t\t\t\t},\n\t\t\t\tlimit: batchSize\n\t\t\t});\n\n\t\t\tpendingSMS.forEach(function(sms) {\n\t\t\t\ttry {\n\t\t\t\t\tsendSMS(sms);\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\tif (WebServiceSMSQueue.debug) {\n\t\t\t\t\t\tconsole.log('WebServiceSMSQueue: Could not send sms id: \"' + sms._id + '\", Error: ' + error.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}); // EO forEach\n\n\t\t\t// Remove the send fence\n\t\t\tisSending = false;\n\t\t}, options.sendInterval || 15000); // Default every 15th sec\n\n\t} else {\n\t\tif (WebServiceSMSQueue.debug) {\n\t\t\tconsole.log('WebServiceSMSQueue: Send server is disabled');\n\t\t}\n\t}\n\n};","Meteor.startup ->\n\tif Meteor.settings.sms?.webservice?.smsqueue_interval && (Meteor.settings.sms?.aliyun?.smsqueue_interval || Meteor.settings.sms?.qcloud?.smsqueue_interval)\n\t\tthrow new Meteor.Error('sms.webservice cannot be configured with sms.aliyun or sms.qcloud');\n\n\tif Meteor.settings.sms?.aliyun?.smsqueue_interval\n\t\tSMSQueue.Configure\n\t\t\tsendInterval: Meteor.settings.sms.aliyun.smsqueue_interval\n\t\t\tsendBatchSize: 10\n\t\t\tkeepSMS: true\n\t\t\taccessKeyId: Meteor.settings.sms.aliyun.accessKeyId\n\t\t\taccessKeySecret: Meteor.settings.sms.aliyun.accessKeySecret\n\n\tif Meteor.settings.sms?.webservice?.smsqueue_interval\n\t\tWebServiceSMSQueue.Configure\n\t\t\tsendInterval: Meteor.settings.sms.webservice.smsqueue_interval\n\t\t\turl: Meteor.settings.sms.webservice.url\n\t\t\tspaceToken: Meteor.settings.sms.webservice.space_token\n\t\t\tsignname: Meteor.settings.sms.webservice.signname\n\t\t\tsendBatchSize: 10\n\t\t\tkeepSMS: true\n\n\n\n","Meteor.startup(function() {\n  var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9;\n  if (((ref = Meteor.settings.sms) != null ? (ref1 = ref.webservice) != null ? ref1.smsqueue_interval : void 0 : void 0) && (((ref2 = Meteor.settings.sms) != null ? (ref3 = ref2.aliyun) != null ? ref3.smsqueue_interval : void 0 : void 0) || ((ref4 = Meteor.settings.sms) != null ? (ref5 = ref4.qcloud) != null ? ref5.smsqueue_interval : void 0 : void 0))) {\n    throw new Meteor.Error('sms.webservice cannot be configured with sms.aliyun or sms.qcloud');\n  }\n  if ((ref6 = Meteor.settings.sms) != null ? (ref7 = ref6.aliyun) != null ? ref7.smsqueue_interval : void 0 : void 0) {\n    SMSQueue.Configure({\n      sendInterval: Meteor.settings.sms.aliyun.smsqueue_interval,\n      sendBatchSize: 10,\n      keepSMS: true,\n      accessKeyId: Meteor.settings.sms.aliyun.accessKeyId,\n      accessKeySecret: Meteor.settings.sms.aliyun.accessKeySecret\n    });\n  }\n  if ((ref8 = Meteor.settings.sms) != null ? (ref9 = ref8.webservice) != null ? ref9.smsqueue_interval : void 0 : void 0) {\n    return WebServiceSMSQueue.Configure({\n      sendInterval: Meteor.settings.sms.webservice.smsqueue_interval,\n      url: Meteor.settings.sms.webservice.url,\n      spaceToken: Meteor.settings.sms.webservice.space_token,\n      signname: Meteor.settings.sms.webservice.signname,\n      sendBatchSize: 10,\n      keepSMS: true\n    });\n  }\n});\n"]}