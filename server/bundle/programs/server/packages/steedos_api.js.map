{"version":3,"sources":["meteor://💻app/packages/steedos:api/checkNpm.js","meteor://💻app/packages/steedos_api/parse_files.coffee","meteor://💻app/parse_files.coffee","meteor://💻app/packages/steedos_api/lib/restivus/auth.coffee","meteor://💻app/lib/restivus/auth.coffee","meteor://💻app/packages/steedos:api/lib/restivus/iron-router-error-to-response.js","meteor://💻app/packages/steedos_api/lib/restivus/route.coffee","meteor://💻app/lib/restivus/route.coffee","meteor://💻app/packages/steedos_api/lib/restivus/restivus.coffee","meteor://💻app/lib/restivus/restivus.coffee","meteor://💻app/packages/steedos_api/core.coffee","meteor://💻app/core.coffee","meteor://💻app/packages/steedos_api/steedos/space_users.coffee","meteor://💻app/steedos/space_users.coffee","meteor://💻app/packages/steedos_api/steedos/organizations.coffee","meteor://💻app/steedos/organizations.coffee","meteor://💻app/packages/steedos_api/routes/s3.coffee","meteor://💻app/routes/s3.coffee","meteor://💻app/packages/steedos_api/routes/push.coffee","meteor://💻app/routes/push.coffee","meteor://💻app/packages/steedos_api/routes/aliyun_push.coffee","meteor://💻app/routes/aliyun_push.coffee"],"names":["checkNpmVersions","module","link","v","busboy","cookies","Busboy","Fiber","require","JsonRoutes","parseFiles","req","res","next","files","method","headers","on","fieldname","file","filename","encoding","mimetype","buffers","image","mimeType","data","push","Buffer","concat","value","body","run","pipe","getUserQuerySelector","userValidator","Auth","Match","Where","user","check","id","Optional","String","username","email","_","keys","length","Error","loginWithPassword","password","authToken","authenticatingUser","authenticatingUserSelector","hashedToken","passwordVerification","ref","space_users","spaces","Meteor","users","findOne","services","Accounts","_checkPassword","error","_generateStampedLoginToken","_hashStampedToken","_insertHashedLoginToken","_id","db","find","fetch","each","su","space","Steedos","hasFeature","indexOf","admins","name","token","userId","adminSpaces","env","process","NODE_ENV","ironRouterSendErrorToResponse","err","statusCode","status","msg","stack","toString","console","headersSent","socket","destroy","setHeader","byteLength","end","share","Route","api","path","options","endpoints1","endpoints","prototype","addToApi","availableMethods","allowedMethods","fullPath","rejectedMethods","self","contains","_config","paths","extend","defaultOptionsEndpoint","_resolveEndpoints","_configureEndpoints","filter","reject","apiPath","endpoint","add","doneFunc","endpointContext","responseData","responseInitiated","urlParams","params","queryParams","query","bodyParams","request","response","done","_callEndpoint","error1","_respond","message","join","toUpperCase","isFunction","action","ref1","ref2","roleRequired","union","isEmpty","authRequired","spaceRequired","invocation","_authAccepted","_roleAccepted","_spaceAccepted","DDPCommon","MethodInvocation","isSimulation","connection","randomSeed","makeRpcSeed","DDP","_CurrentInvocation","withValue","call","_authenticate","auth","userSelector","space_users_count","spaceId","count","intersection","roles","defaultHeaders","delayInMilliseconds","minimumDelayInMilliseconds","randomMultiplierBetweenOneAndTwo","sendResponse","_lowerCaseKeys","match","prettyJson","JSON","stringify","writeHead","write","Math","random","setTimeout","object","chain","pairs","map","attr","toLowerCase","Restivus","item","i","l","corsHeaders","_routes","useDefaultAuth","version","_user","_hashLoginToken","enableCors","slice","last","_initAuth","useAuth","warn","addRoute","route","addCollection","collection","collectionEndpoints","collectionRouteEndpoints","endpointsAwaitingConfiguration","entityRouteEndpoints","excludedEndpoints","methods","methodsOnCollection","routeOptions","_userCollectionEndpoints","_collectionEndpoints","_name","configuredEndpoint","endpointOptions","methodType","clone","get","entity","selector","put","entityIsUpdated","update","$set","remove","post","entityId","insert","getAll","entities","fields","profile","createUser","logout","e","extraData","searchQuery","reason","onLoggedIn","extra","index","tokenFieldName","tokenLocation","tokenPath","tokenRemovalQuery","tokenToRemove","lastIndexOf","substring","$pull","onLoggedOut","isServer","API","startup","organizations","cfs","instances","newFile","FS","File","attachData","type","fileObj","metadata","parent","r","includes","moment","Date","format","split","pop","decodeURIComponent","replace","owner","owner_name","instance","approve","current","toLocaleLowerCase","is_private","main","$unset","locked_by","locked_by_name","$ne","once","storeName","resp","size","original","version_id","absoluteUrl","pushTopic","userIds","from","appName","alertTitle","alert","badge","sound","Push","send","pushSend","text","title","Aliyun_push","sendMessage","userTokens","notification","callback","ALY","ALYPUSH","MiPush","Xinge","XingeApp","aliyunTokens","androidMessage","huaweiTokens","miTokens","noti","package_name","ref3","tokenDataList","xingeTokens","debug","log","Array","forEach","userToken","arr","settings","aliyun","PUSH","accessKeyId","secretAccessKey","apiVersion","AppKey","appKey","Target","TargetValue","Title","Summary","pushNoticeToAndroid","xinge","accessId","secretKey","AndroidMessage","MESSAGE_TYPE_NOTIFICATION","content","style","Style","ClickAction","t","pushToSingleDevice","huawei","appPkgName","payload","HuaweiPush","config","appId","appSecret","sendMany","mi","Message","description","Notification","production","regid","ref4","ref5","ref6","cron","push_interval","keepNotifications","sendInterval","sendBatchSize","apn","keyData","certData","gcm","projectNumber","apiKey","Configure","sendGCM","old_sendGCM","sendAliyun","test","Object","result","canonical_ids","oldToken","newToken","results","registration_id","_replaceToken","failure","_removeToken","gcmTokens","old_sendAPN","sendAPN"],"mappings":"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","file":"/packages/steedos_api.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\ncheckNpmVersions({\n\t'aliyun-sdk': '>=1.9.2',\n\tbusboy: \">=0.2.13\",\n\tcookies: \">=0.6.2\",\n\t'csv': \">=5.1.2\",\n\t'url': '>=0.10.0',\n\t'request': '>=2.81.0',\n\t'xinge': '>=1.1.3',\n\t'xiaomi-push': '>=0.4.5'\n}, 'steedos:api');","Busboy = require('busboy');\nFiber = require('fibers');\n\nJsonRoutes.parseFiles = (req, res, next) ->\n\tfiles = []; # Store files in an array and then pass them to request.\n\n\tif (req.method == \"POST\")\n\t\tbusboy = new Busboy({ headers: req.headers });\n\t\tbusboy.on \"file\",  (fieldname, file, filename, encoding, mimetype) ->\n\t\t\timage = {}; # crate an image object\n\t\t\timage.mimeType = mimetype;\n\t\t\timage.encoding = encoding;\n\t\t\timage.filename = filename;\n\n\t\t\t# buffer the read chunks\n\t\t\tbuffers = [];\n\n\t\t\tfile.on 'data', (data) ->\n\t\t\t\tbuffers.push(data);\n\n\t\t\tfile.on 'end', () ->\n\t\t\t\t# concat the chunks\n\t\t\t\timage.data = Buffer.concat(buffers);\n\t\t\t\t# push the image object to the file array\n\t\t\t\tfiles.push(image);\n\n\n\t\tbusboy.on \"field\", (fieldname, value) ->\n\t\t\treq.body[fieldname] = value;\n\n\t\tbusboy.on \"finish\",  () ->\n\t\t\t# Pass the file array together with the request\n\t\t\treq.files = files;\n\n\t\t\tFiber ()->\n\t\t\t\tnext();\n\t\t\t.run();\n\n\t\t# Pass request to busboy\n\t\treq.pipe(busboy);\n\n\telse\n\t\tnext();\n\n\n#JsonRoutes.Middleware.use(JsonRoutes.parseFiles);","var Busboy, Fiber;\n\nBusboy = require('busboy');\n\nFiber = require('fibers');\n\nJsonRoutes.parseFiles = function(req, res, next) {\n  var busboy, files;\n  files = [];\n  if (req.method === \"POST\") {\n    busboy = new Busboy({\n      headers: req.headers\n    });\n    busboy.on(\"file\", function(fieldname, file, filename, encoding, mimetype) {\n      var buffers, image;\n      image = {};\n      image.mimeType = mimetype;\n      image.encoding = encoding;\n      image.filename = filename;\n      buffers = [];\n      file.on('data', function(data) {\n        return buffers.push(data);\n      });\n      return file.on('end', function() {\n        image.data = Buffer.concat(buffers);\n        return files.push(image);\n      });\n    });\n    busboy.on(\"field\", function(fieldname, value) {\n      return req.body[fieldname] = value;\n    });\n    busboy.on(\"finish\", function() {\n      req.files = files;\n      return Fiber(function() {\n        return next();\n      }).run();\n    });\n    return req.pipe(busboy);\n  } else {\n    return next();\n  }\n};\n","@Auth or= {}\n\n###\n  A valid user will have exactly one of the following identification fields: id, username, or email\n###\nuserValidator = Match.Where (user) ->\n  check user,\n    id: Match.Optional String\n    username: Match.Optional String\n    email: Match.Optional String\n\n  if _.keys(user).length is not 1\n    throw new Match.Error 'User must have exactly one identifier field'\n\n  return true\n\n\n###\n  Return a MongoDB query selector for finding the given user\n###\ngetUserQuerySelector = (user) ->\n  if user.id\n    return {'_id': user.id}\n  else if user.username\n    return {'username': user.username}\n  else if user.email\n    return {'emails.address': user.email}\n\n  # We shouldn't be here if the user object was properly validated\n  throw new Error 'Cannot create selector from invalid user'\n\n\n###\n  Log a user in with their password\n###\n@Auth.loginWithPassword = (user, password) ->\n  if not user or not password\n    throw new Meteor.Error 401, 'Unauthorized'\n\n  # Validate the login input types\n  check user, userValidator\n  check password, String\n\n  # Retrieve the user from the database\n  authenticatingUserSelector = getUserQuerySelector(user)\n  authenticatingUser = Meteor.users.findOne(authenticatingUserSelector)\n\n  if not authenticatingUser\n    throw new Meteor.Error 401, 'Unauthorized'\n  if not authenticatingUser.services?.password\n    throw new Meteor.Error 401, 'Unauthorized'\n\n  # Authenticate the user's password\n  passwordVerification = Accounts._checkPassword authenticatingUser, password\n  if passwordVerification.error\n    throw new Meteor.Error 401, 'Unauthorized'\n\n  # Add a new auth token to the user's account\n  authToken = Accounts._generateStampedLoginToken()\n  hashedToken = Accounts._hashStampedToken authToken\n  Accounts._insertHashedLoginToken authenticatingUser._id, hashedToken\n\n  space_users = db.space_users.find({user: authenticatingUser._id}).fetch()\n  spaces = []\n  _.each space_users, (su)->\n    space = db.spaces.findOne(su.space)\n    # space must be paid, and user must be admins\n    if space && Steedos.hasFeature('paid', su.space) and _.indexOf(space.admins, su.user)>=0\n      spaces.push\n        _id: space._id\n        name: space.name\n  return {authToken: authToken.token, userId: authenticatingUser._id, adminSpaces: spaces}\n","var getUserQuerySelector, userValidator;\n\nthis.Auth || (this.Auth = {});\n\n\n/*\n  A valid user will have exactly one of the following identification fields: id, username, or email\n */\n\nuserValidator = Match.Where(function(user) {\n  check(user, {\n    id: Match.Optional(String),\n    username: Match.Optional(String),\n    email: Match.Optional(String)\n  });\n  if (_.keys(user).length === !1) {\n    throw new Match.Error('User must have exactly one identifier field');\n  }\n  return true;\n});\n\n\n/*\n  Return a MongoDB query selector for finding the given user\n */\n\ngetUserQuerySelector = function(user) {\n  if (user.id) {\n    return {\n      '_id': user.id\n    };\n  } else if (user.username) {\n    return {\n      'username': user.username\n    };\n  } else if (user.email) {\n    return {\n      'emails.address': user.email\n    };\n  }\n  throw new Error('Cannot create selector from invalid user');\n};\n\n\n/*\n  Log a user in with their password\n */\n\nthis.Auth.loginWithPassword = function(user, password) {\n  var authToken, authenticatingUser, authenticatingUserSelector, hashedToken, passwordVerification, ref, space_users, spaces;\n  if (!user || !password) {\n    throw new Meteor.Error(401, 'Unauthorized');\n  }\n  check(user, userValidator);\n  check(password, String);\n  authenticatingUserSelector = getUserQuerySelector(user);\n  authenticatingUser = Meteor.users.findOne(authenticatingUserSelector);\n  if (!authenticatingUser) {\n    throw new Meteor.Error(401, 'Unauthorized');\n  }\n  if (!((ref = authenticatingUser.services) != null ? ref.password : void 0)) {\n    throw new Meteor.Error(401, 'Unauthorized');\n  }\n  passwordVerification = Accounts._checkPassword(authenticatingUser, password);\n  if (passwordVerification.error) {\n    throw new Meteor.Error(401, 'Unauthorized');\n  }\n  authToken = Accounts._generateStampedLoginToken();\n  hashedToken = Accounts._hashStampedToken(authToken);\n  Accounts._insertHashedLoginToken(authenticatingUser._id, hashedToken);\n  space_users = db.space_users.find({\n    user: authenticatingUser._id\n  }).fetch();\n  spaces = [];\n  _.each(space_users, function(su) {\n    var space;\n    space = db.spaces.findOne(su.space);\n    if (space && Steedos.hasFeature('paid', su.space) && _.indexOf(space.admins, su.user) >= 0) {\n      return spaces.push({\n        _id: space._id,\n        name: space.name\n      });\n    }\n  });\n  return {\n    authToken: authToken.token,\n    userId: authenticatingUser._id,\n    adminSpaces: spaces\n  };\n};\n","// We need a function that treats thrown errors exactly like Iron Router would.\n// This file is written in JavaScript to enable copy-pasting Iron Router code.\n\n// Taken from: https://github.com/iron-meteor/iron-router/blob/9c369499c98af9fd12ef9e68338dee3b1b1276aa/lib/router_server.js#L3\nvar env = process.env.NODE_ENV || 'development';\n\n// Taken from: https://github.com/iron-meteor/iron-router/blob/9c369499c98af9fd12ef9e68338dee3b1b1276aa/lib/router_server.js#L47\nironRouterSendErrorToResponse = function (err, req, res) {\n  if (res.statusCode < 400)\n    res.statusCode = 500;\n\n  if (err.status)\n    res.statusCode = err.status;\n\n  if (env === 'development')\n    msg = (err.stack || err.toString()) + '\\n';\n  else\n    //XXX get this from standard dict of error messages?\n    msg = 'Server error.';\n\n  console.error(err.stack || err.toString());\n\n  if (res.headersSent)\n    return req.socket.destroy();\n\n  res.setHeader('Content-Type', 'text/html');\n  res.setHeader('Content-Length', Buffer.byteLength(msg));\n  if (req.method === 'HEAD')\n    return res.end();\n  res.end(msg);\n  return;\n}\n","class share.Route\n\n  constructor: (@api, @path, @options, @endpoints) ->\n    # Check if options were provided\n    if not @endpoints\n      @endpoints = @options\n      @options = {}\n\n\n  addToApi: do ->\n    availableMethods = ['get', 'post', 'put', 'patch', 'delete', 'options']\n\n    return ->\n      self = this\n\n      # Throw an error if a route has already been added at this path\n      # TODO: Check for collisions with paths that follow same pattern with different parameter names\n      if _.contains @api._config.paths, @path\n        throw new Error \"Cannot add a route at an existing path: #{@path}\"\n\n      # Override the default OPTIONS endpoint with our own\n      @endpoints = _.extend options: @api._config.defaultOptionsEndpoint, @endpoints\n\n      # Configure each endpoint on this route\n      @_resolveEndpoints()\n      @_configureEndpoints()\n\n      # Add to our list of existing paths\n      @api._config.paths.push @path\n\n      allowedMethods = _.filter availableMethods, (method) ->\n        _.contains(_.keys(self.endpoints), method)\n      rejectedMethods = _.reject availableMethods, (method) ->\n        _.contains(_.keys(self.endpoints), method)\n\n      # Setup endpoints on route\n      fullPath = @api._config.apiPath + @path\n      _.each allowedMethods, (method) ->\n        endpoint = self.endpoints[method]\n        JsonRoutes.add method, fullPath, (req, res) ->\n          # Add function to endpoint context for indicating a response has been initiated manually\n          responseInitiated = false\n          doneFunc = ->\n            responseInitiated = true\n\n          endpointContext =\n            urlParams: req.params\n            queryParams: req.query\n            bodyParams: req.body\n            request: req\n            response: res\n            done: doneFunc\n          # Add endpoint config options to context\n          _.extend endpointContext, endpoint\n\n          # Run the requested endpoint\n          responseData = null\n          try\n            responseData = self._callEndpoint endpointContext, endpoint\n          catch error\n            # Do exactly what Iron Router would have done, to avoid changing the API\n            ironRouterSendErrorToResponse(error, req, res);\n            return\n\n          if responseInitiated\n            # Ensure the response is properly completed\n            res.end()\n            return\n          else\n            if res.headersSent\n              throw new Error \"Must call this.done() after handling endpoint response manually: #{method} #{fullPath}\"\n            else if responseData is null or responseData is undefined\n              throw new Error \"Cannot return null or undefined from an endpoint: #{method} #{fullPath}\"\n\n          # Generate and return the http response, handling the different endpoint response types\n          if responseData.body and (responseData.statusCode or responseData.headers)\n            self._respond res, responseData.body, responseData.statusCode, responseData.headers\n          else\n            self._respond res, responseData\n\n      _.each rejectedMethods, (method) ->\n        JsonRoutes.add method, fullPath, (req, res) ->\n          responseData = status: 'error', message: 'API endpoint does not exist'\n          headers = 'Allow': allowedMethods.join(', ').toUpperCase()\n          self._respond res, responseData, 405, headers\n\n\n  ###\n    Convert all endpoints on the given route into our expected endpoint object if it is a bare\n    function\n\n    @param {Route} route The route the endpoints belong to\n  ###\n  _resolveEndpoints: ->\n    _.each @endpoints, (endpoint, method, endpoints) ->\n      if _.isFunction(endpoint)\n        endpoints[method] = {action: endpoint}\n    return\n\n\n  ###\n    Configure the authentication and role requirement on all endpoints (except OPTIONS, which must\n    be configured directly on the endpoint)\n\n    Authentication can be required on an entire route or individual endpoints. If required on an\n    entire route, that serves as the default. If required in any individual endpoints, that will\n    override the default.\n\n    After the endpoint is configured, all authentication and role requirements of an endpoint can be\n    accessed at <code>endpoint.authRequired</code> and <code>endpoint.roleRequired</code>,\n    respectively.\n\n    @param {Route} route The route the endpoints belong to\n    @param {Endpoint} endpoint The endpoint to configure\n  ###\n  _configureEndpoints: ->\n    _.each @endpoints, (endpoint, method) ->\n      if method isnt 'options'\n        # Configure acceptable roles\n        if not @options?.roleRequired\n          @options.roleRequired = []\n        if not endpoint.roleRequired\n          endpoint.roleRequired = []\n        endpoint.roleRequired = _.union endpoint.roleRequired, @options.roleRequired\n        # Make it easier to check if no roles are required\n        if _.isEmpty endpoint.roleRequired\n          endpoint.roleRequired = false\n\n        # Configure auth requirement\n        if endpoint.authRequired is undefined\n          if @options?.authRequired or endpoint.roleRequired\n            endpoint.authRequired = true\n          else\n            endpoint.authRequired = false\n\n        if @options?.spaceRequired\n          endpoint.spaceRequired = @options.spaceRequired\n        return\n    , this\n    return\n\n\n  ###\n    Authenticate an endpoint if required, and return the result of calling it\n\n    @returns The endpoint response or a 401 if authentication fails\n  ###\n  _callEndpoint: (endpointContext, endpoint) ->\n    # Call the endpoint if authentication doesn't fail\n    if @_authAccepted endpointContext, endpoint\n      if @_roleAccepted endpointContext, endpoint\n        if @_spaceAccepted endpointContext, endpoint\n          #endpoint.action.call endpointContext\n          invocation = new DDPCommon.MethodInvocation\n            isSimulation: true,\n            userId: endpointContext.userId,\n            connection: null,\n            randomSeed: DDPCommon.makeRpcSeed()\n       \n          return DDP._CurrentInvocation.withValue invocation, ->\n            return endpoint.action.call(endpointContext);\n        else\n          statusCode: 403\n          body: {status: 'error', message: 'Bad X-Space-Id, Only admins of paid space can call this api.'}\n      else\n        statusCode: 403\n        body: {status: 'error', message: 'You do not have permission to do this.'}\n    else\n      statusCode: 401\n      body: {status: 'error', message: 'You must be logged in to do this.'}\n\n\n  ###\n    Authenticate the given endpoint if required\n\n    Once it's globally configured in the API, authentication can be required on an entire route or\n    individual endpoints. If required on an entire endpoint, that serves as the default. If required\n    in any individual endpoints, that will override the default.\n\n    @returns False if authentication fails, and true otherwise\n  ###\n  _authAccepted: (endpointContext, endpoint) ->\n    if endpoint.authRequired\n      @_authenticate endpointContext\n    else true\n\n\n  ###\n    Verify the request is being made by an actively logged in user\n\n    If verified, attach the authenticated user to the context.\n\n    @returns {Boolean} True if the authentication was successful\n  ###\n  _authenticate: (endpointContext) ->\n    # Get auth info\n    auth = @api._config.auth.user.call(endpointContext)\n\n    # Get the user from the database\n    if auth?.userId and auth?.token and not auth?.user\n      userSelector = {}\n      userSelector._id = auth.userId\n      userSelector[@api._config.auth.token] = auth.token\n      auth.user = Meteor.users.findOne userSelector\n\n    # Attach the user and their ID to the context if the authentication was successful\n    if auth?.user\n      endpointContext.user = auth.user\n      endpointContext.userId = auth.user._id\n      true\n    else false\n\n  ###\n    Authenticate the user role if required\n\n    Must be called after _authAccepted().\n\n    @returns True if the authenticated user belongs to <i>any</i> of the acceptable roles on the\n             endpoint\n  ###\n  _spaceAccepted: (endpointContext, endpoint) ->\n    if endpoint.spaceRequired\n      auth = @api._config.auth.user.call(endpointContext)\n      if auth?.spaceId\n        space_users_count = db.space_users.find({user: auth.userId, space:auth.spaceId}).count()\n        if space_users_count\n          space = db.spaces.findOne(auth.spaceId)\n          # space must be paid, and user must be admins\n          if space && Steedos.hasFeature('paid', space._id) and _.indexOf(space.admins, auth.userId)>=0\n            endpointContext.spaceId = auth.spaceId\n            return true\n      endpointContext.spaceId = \"bad\"\n      return false\n    return true\n\n  ###\n    Authenticate the user role if required\n\n    Must be called after _authAccepted().\n\n    @returns True if the authenticated user belongs to <i>any</i> of the acceptable roles on the\n             endpoint\n  ###\n  _roleAccepted: (endpointContext, endpoint) ->\n    if endpoint.roleRequired\n      if _.isEmpty _.intersection(endpoint.roleRequired, endpointContext.user.roles)\n        return false\n    true\n\n\n  ###\n    Respond to an HTTP request\n  ###\n  _respond: (response, body, statusCode=200, headers={}) ->\n    # Override any default headers that have been provided (keys are normalized to be case insensitive)\n    # TODO: Consider only lowercasing the header keys we need normalized, like Content-Type\n    defaultHeaders = @_lowerCaseKeys @api._config.defaultHeaders\n    headers = @_lowerCaseKeys headers\n    headers = _.extend defaultHeaders, headers\n\n    # Prepare JSON body for response when Content-Type indicates JSON type\n    if headers['content-type'].match(/json|javascript/) isnt null\n      if @api._config.prettyJson\n        body = JSON.stringify body, undefined, 2\n      else\n        body = JSON.stringify body\n\n    # Send response\n    sendResponse = ->\n      response.writeHead statusCode, headers\n      response.write body\n      response.end()\n    if statusCode in [401, 403]\n      # Hackers can measure the response time to determine things like whether the 401 response was \n      # caused by bad user id vs bad password.\n      # In doing so, they can first scan for valid user ids regardless of valid passwords.\n      # Delay by a random amount to reduce the ability for a hacker to determine the response time.\n      # See https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks#Finding_Other_Countermeasures\n      # See https://en.wikipedia.org/wiki/Timing_attack\n      minimumDelayInMilliseconds = 500\n      randomMultiplierBetweenOneAndTwo = 1 + Math.random()\n      delayInMilliseconds = minimumDelayInMilliseconds * randomMultiplierBetweenOneAndTwo\n      Meteor.setTimeout sendResponse, delayInMilliseconds\n    else\n      sendResponse()\n\n  ###\n    Return the object with all of the keys converted to lowercase\n  ###\n  _lowerCaseKeys: (object) ->\n    _.chain object\n    .pairs()\n    .map (attr) ->\n      [attr[0].toLowerCase(), attr[1]]\n    .object()\n    .value()\n","share.Route = (function() {\n  function Route(api, path, options, endpoints1) {\n    this.api = api;\n    this.path = path;\n    this.options = options;\n    this.endpoints = endpoints1;\n    if (!this.endpoints) {\n      this.endpoints = this.options;\n      this.options = {};\n    }\n  }\n\n  Route.prototype.addToApi = (function() {\n    var availableMethods;\n    availableMethods = ['get', 'post', 'put', 'patch', 'delete', 'options'];\n    return function() {\n      var allowedMethods, fullPath, rejectedMethods, self;\n      self = this;\n      if (_.contains(this.api._config.paths, this.path)) {\n        throw new Error(\"Cannot add a route at an existing path: \" + this.path);\n      }\n      this.endpoints = _.extend({\n        options: this.api._config.defaultOptionsEndpoint\n      }, this.endpoints);\n      this._resolveEndpoints();\n      this._configureEndpoints();\n      this.api._config.paths.push(this.path);\n      allowedMethods = _.filter(availableMethods, function(method) {\n        return _.contains(_.keys(self.endpoints), method);\n      });\n      rejectedMethods = _.reject(availableMethods, function(method) {\n        return _.contains(_.keys(self.endpoints), method);\n      });\n      fullPath = this.api._config.apiPath + this.path;\n      _.each(allowedMethods, function(method) {\n        var endpoint;\n        endpoint = self.endpoints[method];\n        return JsonRoutes.add(method, fullPath, function(req, res) {\n          var doneFunc, endpointContext, error, responseData, responseInitiated;\n          responseInitiated = false;\n          doneFunc = function() {\n            return responseInitiated = true;\n          };\n          endpointContext = {\n            urlParams: req.params,\n            queryParams: req.query,\n            bodyParams: req.body,\n            request: req,\n            response: res,\n            done: doneFunc\n          };\n          _.extend(endpointContext, endpoint);\n          responseData = null;\n          try {\n            responseData = self._callEndpoint(endpointContext, endpoint);\n          } catch (error1) {\n            error = error1;\n            ironRouterSendErrorToResponse(error, req, res);\n            return;\n          }\n          if (responseInitiated) {\n            res.end();\n            return;\n          } else {\n            if (res.headersSent) {\n              throw new Error(\"Must call this.done() after handling endpoint response manually: \" + method + \" \" + fullPath);\n            } else if (responseData === null || responseData === void 0) {\n              throw new Error(\"Cannot return null or undefined from an endpoint: \" + method + \" \" + fullPath);\n            }\n          }\n          if (responseData.body && (responseData.statusCode || responseData.headers)) {\n            return self._respond(res, responseData.body, responseData.statusCode, responseData.headers);\n          } else {\n            return self._respond(res, responseData);\n          }\n        });\n      });\n      return _.each(rejectedMethods, function(method) {\n        return JsonRoutes.add(method, fullPath, function(req, res) {\n          var headers, responseData;\n          responseData = {\n            status: 'error',\n            message: 'API endpoint does not exist'\n          };\n          headers = {\n            'Allow': allowedMethods.join(', ').toUpperCase()\n          };\n          return self._respond(res, responseData, 405, headers);\n        });\n      });\n    };\n  })();\n\n\n  /*\n    Convert all endpoints on the given route into our expected endpoint object if it is a bare\n    function\n  \n    @param {Route} route The route the endpoints belong to\n   */\n\n  Route.prototype._resolveEndpoints = function() {\n    _.each(this.endpoints, function(endpoint, method, endpoints) {\n      if (_.isFunction(endpoint)) {\n        return endpoints[method] = {\n          action: endpoint\n        };\n      }\n    });\n  };\n\n\n  /*\n    Configure the authentication and role requirement on all endpoints (except OPTIONS, which must\n    be configured directly on the endpoint)\n  \n    Authentication can be required on an entire route or individual endpoints. If required on an\n    entire route, that serves as the default. If required in any individual endpoints, that will\n    override the default.\n  \n    After the endpoint is configured, all authentication and role requirements of an endpoint can be\n    accessed at <code>endpoint.authRequired</code> and <code>endpoint.roleRequired</code>,\n    respectively.\n  \n    @param {Route} route The route the endpoints belong to\n    @param {Endpoint} endpoint The endpoint to configure\n   */\n\n  Route.prototype._configureEndpoints = function() {\n    _.each(this.endpoints, function(endpoint, method) {\n      var ref, ref1, ref2;\n      if (method !== 'options') {\n        if (!((ref = this.options) != null ? ref.roleRequired : void 0)) {\n          this.options.roleRequired = [];\n        }\n        if (!endpoint.roleRequired) {\n          endpoint.roleRequired = [];\n        }\n        endpoint.roleRequired = _.union(endpoint.roleRequired, this.options.roleRequired);\n        if (_.isEmpty(endpoint.roleRequired)) {\n          endpoint.roleRequired = false;\n        }\n        if (endpoint.authRequired === void 0) {\n          if (((ref1 = this.options) != null ? ref1.authRequired : void 0) || endpoint.roleRequired) {\n            endpoint.authRequired = true;\n          } else {\n            endpoint.authRequired = false;\n          }\n        }\n        if ((ref2 = this.options) != null ? ref2.spaceRequired : void 0) {\n          endpoint.spaceRequired = this.options.spaceRequired;\n        }\n      }\n    }, this);\n  };\n\n\n  /*\n    Authenticate an endpoint if required, and return the result of calling it\n  \n    @returns The endpoint response or a 401 if authentication fails\n   */\n\n  Route.prototype._callEndpoint = function(endpointContext, endpoint) {\n    var invocation;\n    if (this._authAccepted(endpointContext, endpoint)) {\n      if (this._roleAccepted(endpointContext, endpoint)) {\n        if (this._spaceAccepted(endpointContext, endpoint)) {\n          invocation = new DDPCommon.MethodInvocation({\n            isSimulation: true,\n            userId: endpointContext.userId,\n            connection: null,\n            randomSeed: DDPCommon.makeRpcSeed()\n          });\n          return DDP._CurrentInvocation.withValue(invocation, function() {\n            return endpoint.action.call(endpointContext);\n          });\n        } else {\n          return {\n            statusCode: 403,\n            body: {\n              status: 'error',\n              message: 'Bad X-Space-Id, Only admins of paid space can call this api.'\n            }\n          };\n        }\n      } else {\n        return {\n          statusCode: 403,\n          body: {\n            status: 'error',\n            message: 'You do not have permission to do this.'\n          }\n        };\n      }\n    } else {\n      return {\n        statusCode: 401,\n        body: {\n          status: 'error',\n          message: 'You must be logged in to do this.'\n        }\n      };\n    }\n  };\n\n\n  /*\n    Authenticate the given endpoint if required\n  \n    Once it's globally configured in the API, authentication can be required on an entire route or\n    individual endpoints. If required on an entire endpoint, that serves as the default. If required\n    in any individual endpoints, that will override the default.\n  \n    @returns False if authentication fails, and true otherwise\n   */\n\n  Route.prototype._authAccepted = function(endpointContext, endpoint) {\n    if (endpoint.authRequired) {\n      return this._authenticate(endpointContext);\n    } else {\n      return true;\n    }\n  };\n\n\n  /*\n    Verify the request is being made by an actively logged in user\n  \n    If verified, attach the authenticated user to the context.\n  \n    @returns {Boolean} True if the authentication was successful\n   */\n\n  Route.prototype._authenticate = function(endpointContext) {\n    var auth, userSelector;\n    auth = this.api._config.auth.user.call(endpointContext);\n    if ((auth != null ? auth.userId : void 0) && (auth != null ? auth.token : void 0) && !(auth != null ? auth.user : void 0)) {\n      userSelector = {};\n      userSelector._id = auth.userId;\n      userSelector[this.api._config.auth.token] = auth.token;\n      auth.user = Meteor.users.findOne(userSelector);\n    }\n    if (auth != null ? auth.user : void 0) {\n      endpointContext.user = auth.user;\n      endpointContext.userId = auth.user._id;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /*\n    Authenticate the user role if required\n  \n    Must be called after _authAccepted().\n  \n    @returns True if the authenticated user belongs to <i>any</i> of the acceptable roles on the\n             endpoint\n   */\n\n  Route.prototype._spaceAccepted = function(endpointContext, endpoint) {\n    var auth, space, space_users_count;\n    if (endpoint.spaceRequired) {\n      auth = this.api._config.auth.user.call(endpointContext);\n      if (auth != null ? auth.spaceId : void 0) {\n        space_users_count = db.space_users.find({\n          user: auth.userId,\n          space: auth.spaceId\n        }).count();\n        if (space_users_count) {\n          space = db.spaces.findOne(auth.spaceId);\n          if (space && Steedos.hasFeature('paid', space._id) && _.indexOf(space.admins, auth.userId) >= 0) {\n            endpointContext.spaceId = auth.spaceId;\n            return true;\n          }\n        }\n      }\n      endpointContext.spaceId = \"bad\";\n      return false;\n    }\n    return true;\n  };\n\n\n  /*\n    Authenticate the user role if required\n  \n    Must be called after _authAccepted().\n  \n    @returns True if the authenticated user belongs to <i>any</i> of the acceptable roles on the\n             endpoint\n   */\n\n  Route.prototype._roleAccepted = function(endpointContext, endpoint) {\n    if (endpoint.roleRequired) {\n      if (_.isEmpty(_.intersection(endpoint.roleRequired, endpointContext.user.roles))) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n\n  /*\n    Respond to an HTTP request\n   */\n\n  Route.prototype._respond = function(response, body, statusCode, headers) {\n    var defaultHeaders, delayInMilliseconds, minimumDelayInMilliseconds, randomMultiplierBetweenOneAndTwo, sendResponse;\n    if (statusCode == null) {\n      statusCode = 200;\n    }\n    if (headers == null) {\n      headers = {};\n    }\n    defaultHeaders = this._lowerCaseKeys(this.api._config.defaultHeaders);\n    headers = this._lowerCaseKeys(headers);\n    headers = _.extend(defaultHeaders, headers);\n    if (headers['content-type'].match(/json|javascript/) !== null) {\n      if (this.api._config.prettyJson) {\n        body = JSON.stringify(body, void 0, 2);\n      } else {\n        body = JSON.stringify(body);\n      }\n    }\n    sendResponse = function() {\n      response.writeHead(statusCode, headers);\n      response.write(body);\n      return response.end();\n    };\n    if (statusCode === 401 || statusCode === 403) {\n      minimumDelayInMilliseconds = 500;\n      randomMultiplierBetweenOneAndTwo = 1 + Math.random();\n      delayInMilliseconds = minimumDelayInMilliseconds * randomMultiplierBetweenOneAndTwo;\n      return Meteor.setTimeout(sendResponse, delayInMilliseconds);\n    } else {\n      return sendResponse();\n    }\n  };\n\n\n  /*\n    Return the object with all of the keys converted to lowercase\n   */\n\n  Route.prototype._lowerCaseKeys = function(object) {\n    return _.chain(object).pairs().map(function(attr) {\n      return [attr[0].toLowerCase(), attr[1]];\n    }).object().value();\n  };\n\n  return Route;\n\n})();\n","class @Restivus\n\n  constructor: (options) ->\n    @_routes = []\n    @_config =\n      paths: []\n      useDefaultAuth: false\n      apiPath: 'api/'\n      version: null\n      prettyJson: false\n      auth:\n        token: 'services.resume.loginTokens.hashedToken'\n        user: ->\n          if @request.headers['x-auth-token']\n            token = Accounts._hashLoginToken @request.headers['x-auth-token']\n          if @request.userId\n            _user = db.users.findOne({_id: @request.userId})\n            user: _user\n            userId: @request.headers['x-user-id']\n            spaceId: @request.headers['x-space-id']\n            token: token\n          else\n            userId: @request.headers['x-user-id']\n            spaceId: @request.headers['x-space-id']\n            token: token\n      defaultHeaders:\n        'Content-Type': 'application/json'\n      enableCors: true\n\n    # Configure API with the given options\n    _.extend @_config, options\n\n    if @_config.enableCors\n      corsHeaders =\n        'Access-Control-Allow-Origin': '*'\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n\n      if @_config.useDefaultAuth\n        corsHeaders['Access-Control-Allow-Headers'] += ', X-User-Id, X-Auth-Token'\n\n      # Set default header to enable CORS if configured\n      _.extend @_config.defaultHeaders, corsHeaders\n\n      if not @_config.defaultOptionsEndpoint\n        @_config.defaultOptionsEndpoint = ->\n          @response.writeHead 200, corsHeaders\n          @done()\n\n    # Normalize the API path\n    if @_config.apiPath[0] is '/'\n      @_config.apiPath = @_config.apiPath.slice 1\n    if _.last(@_config.apiPath) isnt '/'\n      @_config.apiPath = @_config.apiPath + '/'\n\n    # URL path versioning is the only type of API versioning currently available, so if a version is\n    # provided, append it to the base path of the API\n    if @_config.version\n      @_config.apiPath += @_config.version + '/'\n\n    # Add default login and logout endpoints if auth is configured\n    if @_config.useDefaultAuth\n      @_initAuth()\n    else if @_config.useAuth\n      @_initAuth()\n      console.warn 'Warning: useAuth API config option will be removed in Restivus v1.0 ' +\n          '\\n    Use the useDefaultAuth option instead'\n\n    return this\n\n\n  ###*\n    Add endpoints for the given HTTP methods at the given path\n\n    @param path {String} The extended URL path (will be appended to base path of the API)\n    @param options {Object} Route configuration options\n    @param options.authRequired {Boolean} The default auth requirement for each endpoint on the route\n    @param options.roleRequired {String or String[]} The default role required for each endpoint on the route\n    @param endpoints {Object} A set of endpoints available on the new route (get, post, put, patch, delete, options)\n    @param endpoints.<method> {Function or Object} If a function is provided, all default route\n        configuration options will be applied to the endpoint. Otherwise an object with an `action`\n        and all other route config options available. An `action` must be provided with the object.\n  ###\n  addRoute: (path, options, endpoints) ->\n    # Create a new route and add it to our list of existing routes\n    route = new share.Route(this, path, options, endpoints)\n    @_routes.push(route)\n\n    route.addToApi()\n\n    return this\n\n\n  ###*\n    Generate routes for the Meteor Collection with the given name\n  ###\n  addCollection: (collection, options={}) ->\n    methods = ['get', 'post', 'put', 'delete', 'getAll']\n    methodsOnCollection = ['post', 'getAll']\n\n    # Grab the set of endpoints\n    if collection is Meteor.users\n      collectionEndpoints = @_userCollectionEndpoints\n    else\n      collectionEndpoints = @_collectionEndpoints\n\n    # Flatten the options and set defaults if necessary\n    endpointsAwaitingConfiguration = options.endpoints or {}\n    routeOptions = options.routeOptions or {}\n    excludedEndpoints = options.excludedEndpoints or []\n    # Use collection name as default path\n    path = options.path or collection._name\n\n    # Separate the requested endpoints by the route they belong to (one for operating on the entire\n    # collection and one for operating on a single entity within the collection)\n    collectionRouteEndpoints = {}\n    entityRouteEndpoints = {}\n    if _.isEmpty(endpointsAwaitingConfiguration) and _.isEmpty(excludedEndpoints)\n      # Generate all endpoints on this collection\n      _.each methods, (method) ->\n        # Partition the endpoints into their respective routes\n        if method in methodsOnCollection\n          _.extend collectionRouteEndpoints, collectionEndpoints[method].call(this, collection)\n        else _.extend entityRouteEndpoints, collectionEndpoints[method].call(this, collection)\n        return\n      , this\n    else\n      # Generate any endpoints that haven't been explicitly excluded\n      _.each methods, (method) ->\n        if method not in excludedEndpoints and endpointsAwaitingConfiguration[method] isnt false\n          # Configure endpoint and map to it's http method\n          # TODO: Consider predefining a map of methods to their http method type (e.g., getAll: get)\n          endpointOptions = endpointsAwaitingConfiguration[method]\n          configuredEndpoint = {}\n          _.each collectionEndpoints[method].call(this, collection), (action, methodType) ->\n            configuredEndpoint[methodType] =\n              _.chain action\n              .clone()\n              .extend endpointOptions\n              .value()\n          # Partition the endpoints into their respective routes\n          if method in methodsOnCollection\n            _.extend collectionRouteEndpoints, configuredEndpoint\n          else _.extend entityRouteEndpoints, configuredEndpoint\n          return\n      , this\n\n    # Add the routes to the API\n    @addRoute path, routeOptions, collectionRouteEndpoints\n    @addRoute \"#{path}/:id\", routeOptions, entityRouteEndpoints\n\n    return this\n\n\n  ###*\n    A set of endpoints that can be applied to a Collection Route\n  ###\n  _collectionEndpoints:\n    get: (collection) ->\n      get:\n        action: ->\n          selector = {_id: @urlParams.id}\n          if this.spaceId\n            selector.space = this.spaceId\n          entity = collection.findOne selector\n          if entity\n            {status: 'success', data: entity}\n          else\n            statusCode: 404\n            body: {status: 'fail', message: 'Item not found'}\n    put: (collection) ->\n      put:\n        action: ->\n          selector = {_id: @urlParams.id}\n          if this.spaceId\n            selector.space = this.spaceId\n          entityIsUpdated = collection.update selector, $set: @bodyParams\n          if entityIsUpdated\n            entity = collection.findOne @urlParams.id\n            {status: 'success', data: entity}\n          else\n            statusCode: 404\n            body: {status: 'fail', message: 'Item not found'}\n    delete: (collection) ->\n      delete:\n        action: ->\n          selector = {_id: @urlParams.id}\n          if this.spaceId\n            selector.space = this.spaceId\n          if collection.remove selector\n            {status: 'success', data: message: 'Item removed'}\n          else\n            statusCode: 404\n            body: {status: 'fail', message: 'Item not found'}\n    post: (collection) ->\n      post:\n        action: ->\n          if this.spaceId\n            @bodyParams.space = this.spaceId\n          entityId = collection.insert @bodyParams\n          entity = collection.findOne entityId\n          if entity\n            statusCode: 201\n            body: {status: 'success', data: entity}\n          else\n            statusCode: 400\n            body: {status: 'fail', message: 'No item added'}\n    getAll: (collection) ->\n      get:\n        action: ->\n          selector = {}\n          if this.spaceId\n            selector.space = this.spaceId\n          entities = collection.find(selector).fetch()\n          if entities\n            {status: 'success', data: entities}\n          else\n            statusCode: 404\n            body: {status: 'fail', message: 'Unable to retrieve items from collection'}\n\n\n  ###*\n    A set of endpoints that can be applied to a Meteor.users Collection Route\n  ###\n  _userCollectionEndpoints:\n    get: (collection) ->\n      get:\n        action: ->\n          entity = collection.findOne @urlParams.id, fields: profile: 1\n          if entity\n            {status: 'success', data: entity}\n          else\n            statusCode: 404\n            body: {status: 'fail', message: 'User not found'}\n    put: (collection) ->\n      put:\n        action: ->\n          entityIsUpdated = collection.update @urlParams.id, $set: profile: @bodyParams\n          if entityIsUpdated\n            entity = collection.findOne @urlParams.id, fields: profile: 1\n            {status: \"success\", data: entity}\n          else\n            statusCode: 404\n            body: {status: 'fail', message: 'User not found'}\n    delete: (collection) ->\n      delete:\n        action: ->\n          if collection.remove @urlParams.id\n            {status: 'success', data: message: 'User removed'}\n          else\n            statusCode: 404\n            body: {status: 'fail', message: 'User not found'}\n    post: (collection) ->\n      post:\n        action: ->\n          # Create a new user account\n          entityId = Accounts.createUser @bodyParams\n          entity = collection.findOne entityId, fields: profile: 1\n          if entity\n            statusCode: 201\n            body: {status: 'success', data: entity}\n          else\n            statusCode: 400\n            {status: 'fail', message: 'No user added'}\n    getAll: (collection) ->\n      get:\n        action: ->\n          entities = collection.find({}, fields: profile: 1).fetch()\n          if entities\n            {status: 'success', data: entities}\n          else\n            statusCode: 404\n            body: {status: 'fail', message: 'Unable to retrieve users'}\n\n\n  ###\n    Add /login and /logout endpoints to the API\n  ###\n  _initAuth: ->\n    self = this\n    ###\n      Add a login endpoint to the API\n\n      After the user is logged in, the onLoggedIn hook is called (see Restfully.configure() for\n      adding hook).\n    ###\n    @addRoute 'login', {authRequired: false},\n      post: ->\n        # Grab the username or email that the user is logging in with\n        user = {}\n        if @bodyParams.user\n          if @bodyParams.user.indexOf('@') is -1\n            user.username = @bodyParams.user\n          else\n            user.email = @bodyParams.user\n        else if @bodyParams.username\n          user.username = @bodyParams.username\n        else if @bodyParams.email\n          user.email = @bodyParams.email\n\n        # Try to log the user into the user's account (if successful we'll get an auth token back)\n        try\n          auth = Auth.loginWithPassword user, @bodyParams.password\n        catch e\n          console.error e\n          return {} =\n            statusCode: e.error\n            body: status: 'error', message: e.reason\n\n        # Get the authenticated user\n        # TODO: Consider returning the user in Auth.loginWithPassword(), instead of fetching it again here\n        if auth.userId and auth.authToken\n          searchQuery = {}\n          searchQuery[self._config.auth.token] = Accounts._hashLoginToken auth.authToken\n          @user = Meteor.users.findOne\n            '_id': auth.userId\n            searchQuery\n          @userId = @user?._id\n\n        response = {status: 'success', data: auth}\n\n        # Call the login hook with the authenticated user attached\n        extraData = self._config.onLoggedIn?.call(this)\n        if extraData?\n          _.extend(response.data, {extra: extraData})\n\n        response\n\n    logout = ->\n      # Remove the given auth token from the user's account\n      authToken = @request.headers['x-auth-token']\n      hashedToken = Accounts._hashLoginToken authToken\n      tokenLocation = self._config.auth.token\n      index = tokenLocation.lastIndexOf '.'\n      tokenPath = tokenLocation.substring 0, index\n      tokenFieldName = tokenLocation.substring index + 1\n      tokenToRemove = {}\n      tokenToRemove[tokenFieldName] = hashedToken\n      tokenRemovalQuery = {}\n      tokenRemovalQuery[tokenPath] = tokenToRemove\n      Meteor.users.update @user._id, {$pull: tokenRemovalQuery}\n\n      response = {status: 'success', data: {message: 'You\\'ve been logged out!'}}\n\n      # Call the logout hook with the authenticated user attached\n      extraData = self._config.onLoggedOut?.call(this)\n      if extraData?\n        _.extend(response.data, {extra: extraData})\n\n      response\n\n    ###\n      Add a logout endpoint to the API\n\n      After the user is logged out, the onLoggedOut hook is called (see Restfully.configure() for\n      adding hook).\n    ###\n    @addRoute 'logout', {authRequired: true},\n      get: ->\n        console.warn \"Warning: Default logout via GET will be removed in Restivus v1.0. Use POST instead.\"\n        console.warn \"    See https://github.com/kahmali/meteor-restivus/issues/100\"\n        return logout.call(this)\n      post: logout\n\nRestivus = @Restivus\n","var Restivus,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nthis.Restivus = (function() {\n  function Restivus(options) {\n    var corsHeaders;\n    this._routes = [];\n    this._config = {\n      paths: [],\n      useDefaultAuth: false,\n      apiPath: 'api/',\n      version: null,\n      prettyJson: false,\n      auth: {\n        token: 'services.resume.loginTokens.hashedToken',\n        user: function() {\n          var _user, token;\n          if (this.request.headers['x-auth-token']) {\n            token = Accounts._hashLoginToken(this.request.headers['x-auth-token']);\n          }\n          if (this.request.userId) {\n            _user = db.users.findOne({\n              _id: this.request.userId\n            });\n            return {\n              user: _user,\n              userId: this.request.headers['x-user-id'],\n              spaceId: this.request.headers['x-space-id'],\n              token: token\n            };\n          } else {\n            return {\n              userId: this.request.headers['x-user-id'],\n              spaceId: this.request.headers['x-space-id'],\n              token: token\n            };\n          }\n        }\n      },\n      defaultHeaders: {\n        'Content-Type': 'application/json'\n      },\n      enableCors: true\n    };\n    _.extend(this._config, options);\n    if (this._config.enableCors) {\n      corsHeaders = {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n      };\n      if (this._config.useDefaultAuth) {\n        corsHeaders['Access-Control-Allow-Headers'] += ', X-User-Id, X-Auth-Token';\n      }\n      _.extend(this._config.defaultHeaders, corsHeaders);\n      if (!this._config.defaultOptionsEndpoint) {\n        this._config.defaultOptionsEndpoint = function() {\n          this.response.writeHead(200, corsHeaders);\n          return this.done();\n        };\n      }\n    }\n    if (this._config.apiPath[0] === '/') {\n      this._config.apiPath = this._config.apiPath.slice(1);\n    }\n    if (_.last(this._config.apiPath) !== '/') {\n      this._config.apiPath = this._config.apiPath + '/';\n    }\n    if (this._config.version) {\n      this._config.apiPath += this._config.version + '/';\n    }\n    if (this._config.useDefaultAuth) {\n      this._initAuth();\n    } else if (this._config.useAuth) {\n      this._initAuth();\n      console.warn('Warning: useAuth API config option will be removed in Restivus v1.0 ' + '\\n    Use the useDefaultAuth option instead');\n    }\n    return this;\n  }\n\n\n  /**\n    Add endpoints for the given HTTP methods at the given path\n  \n    @param path {String} The extended URL path (will be appended to base path of the API)\n    @param options {Object} Route configuration options\n    @param options.authRequired {Boolean} The default auth requirement for each endpoint on the route\n    @param options.roleRequired {String or String[]} The default role required for each endpoint on the route\n    @param endpoints {Object} A set of endpoints available on the new route (get, post, put, patch, delete, options)\n    @param endpoints.<method> {Function or Object} If a function is provided, all default route\n        configuration options will be applied to the endpoint. Otherwise an object with an `action`\n        and all other route config options available. An `action` must be provided with the object.\n   */\n\n  Restivus.prototype.addRoute = function(path, options, endpoints) {\n    var route;\n    route = new share.Route(this, path, options, endpoints);\n    this._routes.push(route);\n    route.addToApi();\n    return this;\n  };\n\n\n  /**\n    Generate routes for the Meteor Collection with the given name\n   */\n\n  Restivus.prototype.addCollection = function(collection, options) {\n    var collectionEndpoints, collectionRouteEndpoints, endpointsAwaitingConfiguration, entityRouteEndpoints, excludedEndpoints, methods, methodsOnCollection, path, routeOptions;\n    if (options == null) {\n      options = {};\n    }\n    methods = ['get', 'post', 'put', 'delete', 'getAll'];\n    methodsOnCollection = ['post', 'getAll'];\n    if (collection === Meteor.users) {\n      collectionEndpoints = this._userCollectionEndpoints;\n    } else {\n      collectionEndpoints = this._collectionEndpoints;\n    }\n    endpointsAwaitingConfiguration = options.endpoints || {};\n    routeOptions = options.routeOptions || {};\n    excludedEndpoints = options.excludedEndpoints || [];\n    path = options.path || collection._name;\n    collectionRouteEndpoints = {};\n    entityRouteEndpoints = {};\n    if (_.isEmpty(endpointsAwaitingConfiguration) && _.isEmpty(excludedEndpoints)) {\n      _.each(methods, function(method) {\n        if (indexOf.call(methodsOnCollection, method) >= 0) {\n          _.extend(collectionRouteEndpoints, collectionEndpoints[method].call(this, collection));\n        } else {\n          _.extend(entityRouteEndpoints, collectionEndpoints[method].call(this, collection));\n        }\n      }, this);\n    } else {\n      _.each(methods, function(method) {\n        var configuredEndpoint, endpointOptions;\n        if (indexOf.call(excludedEndpoints, method) < 0 && endpointsAwaitingConfiguration[method] !== false) {\n          endpointOptions = endpointsAwaitingConfiguration[method];\n          configuredEndpoint = {};\n          _.each(collectionEndpoints[method].call(this, collection), function(action, methodType) {\n            return configuredEndpoint[methodType] = _.chain(action).clone().extend(endpointOptions).value();\n          });\n          if (indexOf.call(methodsOnCollection, method) >= 0) {\n            _.extend(collectionRouteEndpoints, configuredEndpoint);\n          } else {\n            _.extend(entityRouteEndpoints, configuredEndpoint);\n          }\n        }\n      }, this);\n    }\n    this.addRoute(path, routeOptions, collectionRouteEndpoints);\n    this.addRoute(path + \"/:id\", routeOptions, entityRouteEndpoints);\n    return this;\n  };\n\n\n  /**\n    A set of endpoints that can be applied to a Collection Route\n   */\n\n  Restivus.prototype._collectionEndpoints = {\n    get: function(collection) {\n      return {\n        get: {\n          action: function() {\n            var entity, selector;\n            selector = {\n              _id: this.urlParams.id\n            };\n            if (this.spaceId) {\n              selector.space = this.spaceId;\n            }\n            entity = collection.findOne(selector);\n            if (entity) {\n              return {\n                status: 'success',\n                data: entity\n              };\n            } else {\n              return {\n                statusCode: 404,\n                body: {\n                  status: 'fail',\n                  message: 'Item not found'\n                }\n              };\n            }\n          }\n        }\n      };\n    },\n    put: function(collection) {\n      return {\n        put: {\n          action: function() {\n            var entity, entityIsUpdated, selector;\n            selector = {\n              _id: this.urlParams.id\n            };\n            if (this.spaceId) {\n              selector.space = this.spaceId;\n            }\n            entityIsUpdated = collection.update(selector, {\n              $set: this.bodyParams\n            });\n            if (entityIsUpdated) {\n              entity = collection.findOne(this.urlParams.id);\n              return {\n                status: 'success',\n                data: entity\n              };\n            } else {\n              return {\n                statusCode: 404,\n                body: {\n                  status: 'fail',\n                  message: 'Item not found'\n                }\n              };\n            }\n          }\n        }\n      };\n    },\n    \"delete\": function(collection) {\n      return {\n        \"delete\": {\n          action: function() {\n            var selector;\n            selector = {\n              _id: this.urlParams.id\n            };\n            if (this.spaceId) {\n              selector.space = this.spaceId;\n            }\n            if (collection.remove(selector)) {\n              return {\n                status: 'success',\n                data: {\n                  message: 'Item removed'\n                }\n              };\n            } else {\n              return {\n                statusCode: 404,\n                body: {\n                  status: 'fail',\n                  message: 'Item not found'\n                }\n              };\n            }\n          }\n        }\n      };\n    },\n    post: function(collection) {\n      return {\n        post: {\n          action: function() {\n            var entity, entityId;\n            if (this.spaceId) {\n              this.bodyParams.space = this.spaceId;\n            }\n            entityId = collection.insert(this.bodyParams);\n            entity = collection.findOne(entityId);\n            if (entity) {\n              return {\n                statusCode: 201,\n                body: {\n                  status: 'success',\n                  data: entity\n                }\n              };\n            } else {\n              return {\n                statusCode: 400,\n                body: {\n                  status: 'fail',\n                  message: 'No item added'\n                }\n              };\n            }\n          }\n        }\n      };\n    },\n    getAll: function(collection) {\n      return {\n        get: {\n          action: function() {\n            var entities, selector;\n            selector = {};\n            if (this.spaceId) {\n              selector.space = this.spaceId;\n            }\n            entities = collection.find(selector).fetch();\n            if (entities) {\n              return {\n                status: 'success',\n                data: entities\n              };\n            } else {\n              return {\n                statusCode: 404,\n                body: {\n                  status: 'fail',\n                  message: 'Unable to retrieve items from collection'\n                }\n              };\n            }\n          }\n        }\n      };\n    }\n  };\n\n\n  /**\n    A set of endpoints that can be applied to a Meteor.users Collection Route\n   */\n\n  Restivus.prototype._userCollectionEndpoints = {\n    get: function(collection) {\n      return {\n        get: {\n          action: function() {\n            var entity;\n            entity = collection.findOne(this.urlParams.id, {\n              fields: {\n                profile: 1\n              }\n            });\n            if (entity) {\n              return {\n                status: 'success',\n                data: entity\n              };\n            } else {\n              return {\n                statusCode: 404,\n                body: {\n                  status: 'fail',\n                  message: 'User not found'\n                }\n              };\n            }\n          }\n        }\n      };\n    },\n    put: function(collection) {\n      return {\n        put: {\n          action: function() {\n            var entity, entityIsUpdated;\n            entityIsUpdated = collection.update(this.urlParams.id, {\n              $set: {\n                profile: this.bodyParams\n              }\n            });\n            if (entityIsUpdated) {\n              entity = collection.findOne(this.urlParams.id, {\n                fields: {\n                  profile: 1\n                }\n              });\n              return {\n                status: \"success\",\n                data: entity\n              };\n            } else {\n              return {\n                statusCode: 404,\n                body: {\n                  status: 'fail',\n                  message: 'User not found'\n                }\n              };\n            }\n          }\n        }\n      };\n    },\n    \"delete\": function(collection) {\n      return {\n        \"delete\": {\n          action: function() {\n            if (collection.remove(this.urlParams.id)) {\n              return {\n                status: 'success',\n                data: {\n                  message: 'User removed'\n                }\n              };\n            } else {\n              return {\n                statusCode: 404,\n                body: {\n                  status: 'fail',\n                  message: 'User not found'\n                }\n              };\n            }\n          }\n        }\n      };\n    },\n    post: function(collection) {\n      return {\n        post: {\n          action: function() {\n            var entity, entityId;\n            entityId = Accounts.createUser(this.bodyParams);\n            entity = collection.findOne(entityId, {\n              fields: {\n                profile: 1\n              }\n            });\n            if (entity) {\n              return {\n                statusCode: 201,\n                body: {\n                  status: 'success',\n                  data: entity\n                }\n              };\n            } else {\n              ({\n                statusCode: 400\n              });\n              return {\n                status: 'fail',\n                message: 'No user added'\n              };\n            }\n          }\n        }\n      };\n    },\n    getAll: function(collection) {\n      return {\n        get: {\n          action: function() {\n            var entities;\n            entities = collection.find({}, {\n              fields: {\n                profile: 1\n              }\n            }).fetch();\n            if (entities) {\n              return {\n                status: 'success',\n                data: entities\n              };\n            } else {\n              return {\n                statusCode: 404,\n                body: {\n                  status: 'fail',\n                  message: 'Unable to retrieve users'\n                }\n              };\n            }\n          }\n        }\n      };\n    }\n  };\n\n\n  /*\n    Add /login and /logout endpoints to the API\n   */\n\n  Restivus.prototype._initAuth = function() {\n    var logout, self;\n    self = this;\n\n    /*\n      Add a login endpoint to the API\n    \n      After the user is logged in, the onLoggedIn hook is called (see Restfully.configure() for\n      adding hook).\n     */\n    this.addRoute('login', {\n      authRequired: false\n    }, {\n      post: function() {\n        var auth, e, extraData, ref, ref1, response, searchQuery, user;\n        user = {};\n        if (this.bodyParams.user) {\n          if (this.bodyParams.user.indexOf('@') === -1) {\n            user.username = this.bodyParams.user;\n          } else {\n            user.email = this.bodyParams.user;\n          }\n        } else if (this.bodyParams.username) {\n          user.username = this.bodyParams.username;\n        } else if (this.bodyParams.email) {\n          user.email = this.bodyParams.email;\n        }\n        try {\n          auth = Auth.loginWithPassword(user, this.bodyParams.password);\n        } catch (error) {\n          e = error;\n          console.error(e);\n          return {\n            statusCode: e.error,\n            body: {\n              status: 'error',\n              message: e.reason\n            }\n          };\n        }\n        if (auth.userId && auth.authToken) {\n          searchQuery = {};\n          searchQuery[self._config.auth.token] = Accounts._hashLoginToken(auth.authToken);\n          this.user = Meteor.users.findOne({\n            '_id': auth.userId\n          }, searchQuery);\n          this.userId = (ref = this.user) != null ? ref._id : void 0;\n        }\n        response = {\n          status: 'success',\n          data: auth\n        };\n        extraData = (ref1 = self._config.onLoggedIn) != null ? ref1.call(this) : void 0;\n        if (extraData != null) {\n          _.extend(response.data, {\n            extra: extraData\n          });\n        }\n        return response;\n      }\n    });\n    logout = function() {\n      var authToken, extraData, hashedToken, index, ref, response, tokenFieldName, tokenLocation, tokenPath, tokenRemovalQuery, tokenToRemove;\n      authToken = this.request.headers['x-auth-token'];\n      hashedToken = Accounts._hashLoginToken(authToken);\n      tokenLocation = self._config.auth.token;\n      index = tokenLocation.lastIndexOf('.');\n      tokenPath = tokenLocation.substring(0, index);\n      tokenFieldName = tokenLocation.substring(index + 1);\n      tokenToRemove = {};\n      tokenToRemove[tokenFieldName] = hashedToken;\n      tokenRemovalQuery = {};\n      tokenRemovalQuery[tokenPath] = tokenToRemove;\n      Meteor.users.update(this.user._id, {\n        $pull: tokenRemovalQuery\n      });\n      response = {\n        status: 'success',\n        data: {\n          message: 'You\\'ve been logged out!'\n        }\n      };\n      extraData = (ref = self._config.onLoggedOut) != null ? ref.call(this) : void 0;\n      if (extraData != null) {\n        _.extend(response.data, {\n          extra: extraData\n        });\n      }\n      return response;\n    };\n\n    /*\n      Add a logout endpoint to the API\n    \n      After the user is logged out, the onLoggedOut hook is called (see Restfully.configure() for\n      adding hook).\n     */\n    return this.addRoute('logout', {\n      authRequired: true\n    }, {\n      get: function() {\n        console.warn(\"Warning: Default logout via GET will be removed in Restivus v1.0. Use POST instead.\");\n        console.warn(\"    See https://github.com/kahmali/meteor-restivus/issues/100\");\n        return logout.call(this);\n      },\n      post: logout\n    });\n  };\n\n  return Restivus;\n\n})();\n\nRestivus = this.Restivus;\n","if Meteor.isServer\n    @API = new Restivus\n        apiPath: 'steedos/api/',\n        useDefaultAuth: true\n        prettyJson: true\n        enableCors: false\n        defaultHeaders:\n          'Content-Type': 'application/json'","if (Meteor.isServer) {\n  this.API = new Restivus({\n    apiPath: 'steedos/api/',\n    useDefaultAuth: true,\n    prettyJson: true,\n    enableCors: false,\n    defaultHeaders: {\n      'Content-Type': 'application/json'\n    }\n  });\n}\n","Meteor.startup ->\n\tAPI.addCollection db.space_users, \n\t\texcludedEndpoints: []\n\t\trouteOptions:\n\t\t\tauthRequired: true\n\t\t\tspaceRequired: true","Meteor.startup(function() {\n  return API.addCollection(db.space_users, {\n    excludedEndpoints: [],\n    routeOptions: {\n      authRequired: true,\n      spaceRequired: true\n    }\n  });\n});\n","Meteor.startup ->\n\tAPI.addCollection db.organizations, \n\t\texcludedEndpoints: []\n\t\trouteOptions:\n\t\t\tauthRequired: true\n\t\t\tspaceRequired: true","Meteor.startup(function() {\n  return API.addCollection(db.organizations, {\n    excludedEndpoints: [],\n    routeOptions: {\n      authRequired: true,\n      spaceRequired: true\n    }\n  });\n});\n","JsonRoutes.add \"post\", \"/api/v4/instances/s3/\",  (req, res, next) ->\n  collection = cfs.instances\n  JsonRoutes.parseFiles req, res, ()->\n    if req.files and req.files[0]\n      newFile = new FS.File();\n      newFile.attachData req.files[0].data, {type: req.files[0].mimeType}, (err) ->\n        filename = req.files[0].filename\n\n        if [\"image.jpg\", \"image.gif\", \"image.jpeg\", \"image.png\"].includes(filename.toLowerCase())\n          filename = \"image-\" + moment(new Date()).format('YYYYMMDDHHmmss') + \".\" + filename.split('.').pop()\n\n        body = req.body\n        try\n          if body && (body['upload_from'] is \"IE\" or body['upload_from'] is \"node\")\n            filename = decodeURIComponent(filename)\n        catch e\n          console.error(filename)\n          console.error e\n          filename = filename.replace(/%/g, \"-\")\n\n        newFile.name(filename)\n        \n        if body && body['owner'] && body['owner_name'] && body['space'] && body['instance']  && body['approve']\n          parent = ''\n          metadata = {owner:body['owner'], owner_name:body['owner_name'], space:body['space'], instance:body['instance'], approve: body['approve'], current: true}\n\n          if body[\"is_private\"] && body[\"is_private\"].toLocaleLowerCase() == \"true\"\n            metadata.is_private = true\n          else\n            metadata.is_private = false\n\n          if body['main'] == \"true\"\n            metadata.main = true\n\n          if body['isAddVersion'] && body['parent']\n            parent = body['parent']\n          # else\n          #   collection.find({'metadata.instance': body['instance'], 'metadata.current' : true}).forEach (c) ->\n          #     if c.name() == filename\n          #       parent = c.metadata.parent\n\n          if parent\n            r = collection.update({'metadata.parent': parent, 'metadata.current' : true}, {$unset : {'metadata.current' : ''}})\n            if r\n              metadata.parent = parent\n              if body['locked_by'] && body['locked_by_name']\n                metadata.locked_by = body['locked_by']\n                metadata.locked_by_name = body['locked_by_name']\n\n              newFile.metadata = metadata\n              fileObj = collection.insert newFile\n\n              # 删除同一个申请单同一个步骤同一个人上传的重复的文件\n              if body[\"overwrite\"] && body[\"overwrite\"].toLocaleLowerCase() == \"true\"\n                collection.remove({'metadata.instance': body['instance'], 'metadata.parent': parent, 'metadata.owner': body['owner'], 'metadata.approve': body['approve'], 'metadata.current': {$ne: true}})\n          else\n            newFile.metadata = metadata\n            fileObj = collection.insert newFile\n            fileObj.update({$set: {'metadata.parent' : fileObj._id}})\n\n        # 兼容老版本\n        else\n          fileObj = collection.insert newFile\n        return\n\n      newFile.once 'stored', (storeName)->\n        size = newFile.original.size\n        if !size\n          size = 1024\n        resp =\n          version_id: newFile._id,\n          size: size\n        res.end(JSON.stringify(resp));\n        return\n    else\n      res.statusCode = 500;\n      res.end();\n      return\n\n\nJsonRoutes.add \"delete\", \"/api/v4/instances/s3/\",  (req, res, next) ->\n\n  collection = cfs.instances\n\n  id = req.query.version_id;\n  if id\n    file = collection.findOne({ _id: id })\n    if file\n      file.remove()\n      resp = {\n        status: \"OK\"\n      }\n      res.end(JSON.stringify(resp));\n      return\n\n  res.statusCode = 404;\n  res.end();\n\n\nJsonRoutes.add \"get\", \"/api/v4/instances/s3/\",  (req, res, next) ->\n\n  id = req.query.version_id;\n\n  res.statusCode = 302;\n  res.setHeader \"Location\", Steedos.absoluteUrl(\"api/files/instances/\") + id + \"?download=1\"\n  res.end();\n\n\n# Meteor.methods\n\n#   s3_upgrade: (min, max) ->\n#     console.log(\"/s3/upgrade\")\n\n#     fs = require('fs')\n#     mime = require('mime')\n\n#     root_path = \"/mnt/fakes3/10\"\n#     console.log(root_path)\n#     collection = cfs.instances\n\n#     # 遍历instance 拼出附件路径 到本地找对应文件 分两种情况 1./filename_versionId 2./filename；\n#     deal_with_version = (root_path, space, ins_id, version, attach_filename) ->\n#       _rev = version._rev\n#       if (collection.find({\"_id\": _rev}).count() >0)\n#         return\n#       created_by = version.created_by\n#       approve = version.approve\n#       filename = version.filename || attach_filename;\n#       mime_type = mime.lookup(filename)\n#       new_path = root_path + \"/spaces/\" + space + \"/workflow/\" + ins_id + \"/\" + filename + \"_\" + _rev\n#       old_path = root_path + \"/spaces/\" + space + \"/workflow/\" + ins_id + \"/\" + filename\n\n#       readFile = (full_path) ->\n#         data = fs.readFileSync full_path\n\n#         if data\n#           newFile = new FS.File();\n#           newFile._id = _rev;\n#           newFile.metadata = {owner:created_by, space:space, instance:ins_id, approve: approve};\n#           newFile.attachData data, {type: mime_type}\n#           newFile.name(filename)\n#           fileObj = collection.insert newFile\n#           console.log(fileObj._id)\n\n#       try\n#         n = fs.statSync new_path\n#         if n && n.isFile()\n#           readFile new_path\n#       catch error\n#         try\n#           old = fs.statSync old_path\n#           if old && old.isFile()\n#             readFile old_path\n#         catch error\n#           console.error(\"file not found: \" + old_path)\n\n\n#     count = db.instances.find({\"attachments.current\": {$exists: true}}, {sort: {modified: -1}}).count();\n#     console.log(\"all instances: \" + count)\n\n#     b = new Date()\n\n#     i = min\n#     db.instances.find({\"attachments.current\": {$exists: true}}, {sort: {modified: -1}, skip: min, limit: max-min}).forEach (ins) ->\n#       i = i + 1\n#       console.log(i + \":\" + ins.name)\n#       attachs = ins.attachments\n#       space = ins.space\n#       ins_id = ins._id\n#       attachs.forEach (att) ->\n#         deal_with_version root_path, space, ins_id, att.current, att.filename\n#         if att.historys\n#           att.historys.forEach (his) ->\n#             deal_with_version root_path, space, ins_id, his, att.filename\n\n#     console.log(new Date() - b)\n\n#     return \"ok\"\n","JsonRoutes.add(\"post\", \"/api/v4/instances/s3/\", function(req, res, next) {\n  var collection;\n  collection = cfs.instances;\n  return JsonRoutes.parseFiles(req, res, function() {\n    var newFile;\n    if (req.files && req.files[0]) {\n      newFile = new FS.File();\n      newFile.attachData(req.files[0].data, {\n        type: req.files[0].mimeType\n      }, function(err) {\n        var body, e, fileObj, filename, metadata, parent, r;\n        filename = req.files[0].filename;\n        if ([\"image.jpg\", \"image.gif\", \"image.jpeg\", \"image.png\"].includes(filename.toLowerCase())) {\n          filename = \"image-\" + moment(new Date()).format('YYYYMMDDHHmmss') + \".\" + filename.split('.').pop();\n        }\n        body = req.body;\n        try {\n          if (body && (body['upload_from'] === \"IE\" || body['upload_from'] === \"node\")) {\n            filename = decodeURIComponent(filename);\n          }\n        } catch (error) {\n          e = error;\n          console.error(filename);\n          console.error(e);\n          filename = filename.replace(/%/g, \"-\");\n        }\n        newFile.name(filename);\n        if (body && body['owner'] && body['owner_name'] && body['space'] && body['instance'] && body['approve']) {\n          parent = '';\n          metadata = {\n            owner: body['owner'],\n            owner_name: body['owner_name'],\n            space: body['space'],\n            instance: body['instance'],\n            approve: body['approve'],\n            current: true\n          };\n          if (body[\"is_private\"] && body[\"is_private\"].toLocaleLowerCase() === \"true\") {\n            metadata.is_private = true;\n          } else {\n            metadata.is_private = false;\n          }\n          if (body['main'] === \"true\") {\n            metadata.main = true;\n          }\n          if (body['isAddVersion'] && body['parent']) {\n            parent = body['parent'];\n          }\n          if (parent) {\n            r = collection.update({\n              'metadata.parent': parent,\n              'metadata.current': true\n            }, {\n              $unset: {\n                'metadata.current': ''\n              }\n            });\n            if (r) {\n              metadata.parent = parent;\n              if (body['locked_by'] && body['locked_by_name']) {\n                metadata.locked_by = body['locked_by'];\n                metadata.locked_by_name = body['locked_by_name'];\n              }\n              newFile.metadata = metadata;\n              fileObj = collection.insert(newFile);\n              if (body[\"overwrite\"] && body[\"overwrite\"].toLocaleLowerCase() === \"true\") {\n                collection.remove({\n                  'metadata.instance': body['instance'],\n                  'metadata.parent': parent,\n                  'metadata.owner': body['owner'],\n                  'metadata.approve': body['approve'],\n                  'metadata.current': {\n                    $ne: true\n                  }\n                });\n              }\n            }\n          } else {\n            newFile.metadata = metadata;\n            fileObj = collection.insert(newFile);\n            fileObj.update({\n              $set: {\n                'metadata.parent': fileObj._id\n              }\n            });\n          }\n        } else {\n          fileObj = collection.insert(newFile);\n        }\n      });\n      return newFile.once('stored', function(storeName) {\n        var resp, size;\n        size = newFile.original.size;\n        if (!size) {\n          size = 1024;\n        }\n        resp = {\n          version_id: newFile._id,\n          size: size\n        };\n        res.end(JSON.stringify(resp));\n      });\n    } else {\n      res.statusCode = 500;\n      res.end();\n    }\n  });\n});\n\nJsonRoutes.add(\"delete\", \"/api/v4/instances/s3/\", function(req, res, next) {\n  var collection, file, id, resp;\n  collection = cfs.instances;\n  id = req.query.version_id;\n  if (id) {\n    file = collection.findOne({\n      _id: id\n    });\n    if (file) {\n      file.remove();\n      resp = {\n        status: \"OK\"\n      };\n      res.end(JSON.stringify(resp));\n      return;\n    }\n  }\n  res.statusCode = 404;\n  return res.end();\n});\n\nJsonRoutes.add(\"get\", \"/api/v4/instances/s3/\", function(req, res, next) {\n  var id;\n  id = req.query.version_id;\n  res.statusCode = 302;\n  res.setHeader(\"Location\", Steedos.absoluteUrl(\"api/files/instances/\") + id + \"?download=1\");\n  return res.end();\n});\n","JsonRoutes.add \"post\", \"/api/push/message\", (req, res, next) ->\n    if req.body?.pushTopic and req.body.userIds and req.body.data\n        message = \n            from: \"steedos\"\n            query:\n                appName: req.body.pushTopic\n                userId: \n                    \"$in\": userIds\n        if req.body.data.alertTitle?\n            message[\"title\"] = req.body.data.alertTitle\n        if req.body.data.alert?\n            message[\"text\"] = req.body.data.alert\n        if req.body.data.badge?\n            message[\"badge\"] = req.body.data.badge + \"\"\n        if req.body.data.sound?\n            message[\"sound\"] = req.body.data.sound\n        #if req.body.data.data?\n        #    message[\"data\"] = req.body.data.data\n        Push.send message\n\n        res.end(\"success\");\n\n\n\nMeteor.methods\n    pushSend: (text,title,badge,userId) ->\n        if (!userId)\n            return;\n        Push.send\n            from: 'steedos',\n            title: title,\n            text: text,\n            badge: badge,\n            query: \n                userId: userId\n                appName: \"workflow\"\n","JsonRoutes.add(\"post\", \"/api/push/message\", function(req, res, next) {\n  var message, ref;\n  if (((ref = req.body) != null ? ref.pushTopic : void 0) && req.body.userIds && req.body.data) {\n    message = {\n      from: \"steedos\",\n      query: {\n        appName: req.body.pushTopic,\n        userId: {\n          \"$in\": userIds\n        }\n      }\n    };\n    if (req.body.data.alertTitle != null) {\n      message[\"title\"] = req.body.data.alertTitle;\n    }\n    if (req.body.data.alert != null) {\n      message[\"text\"] = req.body.data.alert;\n    }\n    if (req.body.data.badge != null) {\n      message[\"badge\"] = req.body.data.badge + \"\";\n    }\n    if (req.body.data.sound != null) {\n      message[\"sound\"] = req.body.data.sound;\n    }\n    Push.send(message);\n    return res.end(\"success\");\n  }\n});\n\nMeteor.methods({\n  pushSend: function(text, title, badge, userId) {\n    if (!userId) {\n      return;\n    }\n    return Push.send({\n      from: 'steedos',\n      title: title,\n      text: text,\n      badge: badge,\n      query: {\n        userId: userId,\n        appName: \"workflow\"\n      }\n    });\n  }\n});\n","Aliyun_push = {};\n\nAliyun_push.sendMessage = (userTokens, notification, callback) ->\n\tif notification.title and notification.text\n\t\tif Push.debug\n\t\t\tconsole.log userTokens\n\n\t\taliyunTokens = new Array\n\t\txingeTokens = new Array\n\t\thuaweiTokens = new Array\n\t\tmiTokens = new Array\n\n\t\tuserTokens.forEach (userToken) ->\n\t\t\tarr = userToken.split(':')\n\t\t\tif arr[0] is \"aliyun\"\n\t\t\t\taliyunTokens.push _.last(arr)\n\t\t\telse if arr[0] is \"xinge\"\n\t\t\t\txingeTokens.push _.last(arr)\n\t\t\telse if arr[0] is \"huawei\"\n\t\t\t\thuaweiTokens.push _.last(arr)\n\t\t\telse if arr[0] is \"mi\"\n\t\t\t\tmiTokens.push _.last(arr)\n\n\t\tif !_.isEmpty(aliyunTokens) and Meteor.settings.push?.aliyun\n\t\t\tALY = require('aliyun-sdk');\n\t\t\tif Push.debug\n\t\t\t\tconsole.log \"aliyunTokens: #{aliyunTokens}\"\n\t\t\tALYPUSH = new (ALY.PUSH)(\n\t\t\t\taccessKeyId: Meteor.settings.push.aliyun.accessKeyId\n\t\t\t\tsecretAccessKey: Meteor.settings.push.aliyun.secretAccessKey\n\t\t\t\tendpoint: Meteor.settings.push.aliyun.endpoint\n\t\t\t\tapiVersion: Meteor.settings.push.aliyun.apiVersion);\n\n\t\t\tdata = \n\t\t\t\tAppKey: Meteor.settings.push.aliyun.appKey\n\t\t\t\tTarget: 'device'\n\t\t\t\tTargetValue: aliyunTokens.toString()\n\t\t\t\tTitle: notification.title\n\t\t\t\tSummary: notification.text\n\n\t\t\tALYPUSH.pushNoticeToAndroid data, callback\n\n\t\tif !_.isEmpty(xingeTokens) and Meteor.settings.push?.xinge\n\t\t\tXinge = require('xinge');\n\t\t\tif Push.debug\n\t\t\t\tconsole.log \"xingeTokens: #{xingeTokens}\"\n\t\t\tXingeApp = new Xinge.XingeApp(Meteor.settings.push.xinge.accessId, Meteor.settings.push.xinge.secretKey)\n\t\t\t\n\t\t\tandroidMessage = new Xinge.AndroidMessage\n\t\t\tandroidMessage.type = Xinge.MESSAGE_TYPE_NOTIFICATION\n\t\t\tandroidMessage.title = notification.title\n\t\t\tandroidMessage.content = notification.text\n\t\t\tandroidMessage.style = new Xinge.Style\n\t\t\tandroidMessage.action = new Xinge.ClickAction\n\n\t\t\t_.each xingeTokens, (t)->\n\t\t\t\tXingeApp.pushToSingleDevice t, androidMessage, callback\n\n\t\tif !_.isEmpty(huaweiTokens) and Meteor.settings.push?.huawei\n\t\t\tif Push.debug\n\t\t\t\tconsole.log \"huaweiTokens: #{huaweiTokens}\"\n\n\t\t\tpackage_name = Meteor.settings.push.huawei.appPkgName\n\t\t\ttokenDataList = []\n\t\t\t_.each huaweiTokens, (t)->\n\t\t\t\ttokenDataList.push({'package_name': package_name, 'token': t})\n\t\t\tnoti = {'android': {'title': notification.title, 'message': notification.text}, 'extras': notification.payload}\n\n\t\t\tHuaweiPush.config [{'package_name': package_name, 'client_id': Meteor.settings.push.huawei.appId, 'client_secret': Meteor.settings.push.huawei.appSecret}]\n\t\t\t\n\t\t\tHuaweiPush.sendMany noti, tokenDataList\n\n\n\t\tif !_.isEmpty(miTokens) and Meteor.settings.push?.mi\n\t\t\tMiPush = require('xiaomi-push');\n\t\t\tif Push.debug\n\t\t\t\tconsole.log \"miTokens: #{miTokens}\"\n\t\t\tmsg = new MiPush.Message\n\t\t\tmsg.title(notification.title).description(notification.text)\n\t\t\tnotification = new MiPush.Notification(\n\t\t\t\tproduction: Meteor.settings.push.mi.production\n\t\t\t\tappSecret: Meteor.settings.push.mi.appSecret\n\t\t\t)\n\t\t\t_.each miTokens, (regid)->\n\t\t\t\tnotification.send regid, msg, callback\n\n\nMeteor.startup ->\n\t\n\tif not Meteor.settings.cron?.push_interval\n\t\treturn\n\n\tconfig = {\n\t\tdebug: true\n\t\tkeepNotifications: false\n\t\tsendInterval: Meteor.settings.cron.push_interval\n\t\tsendBatchSize: 10\n\t\tproduction: true\n\t}\n\n\tif !_.isEmpty(Meteor.settings.push?.apn)\n\t\tconfig.apn = {\n\t\t\tkeyData: Meteor.settings.push.apn.keyData\n\t\t\tcertData: Meteor.settings.push.apn.certData\n\t\t}\n\tif !_.isEmpty(Meteor.settings.push?.gcm)\n\t\tconfig.gcm = {\n\t\t\tprojectNumber: Meteor.settings.push.gcm.projectNumber\n\t\t\tapiKey: Meteor.settings.push.gcm.apiKey\n\t\t}\n\n\tPush.Configure config\n\t\n\tif (Meteor.settings.push?.aliyun or Meteor.settings.push?.xinge or Meteor.settings.push?.huawei or Meteor.settings.push?.mi) and Push and typeof Push.sendGCM == 'function'\n\t\t\n\t\tPush.old_sendGCM = Push.sendGCM;\n\n\t\tPush.sendAliyun = (userTokens, notification) ->\n\t\t\tif Push.debug\n\t\t\t\tconsole.log 'sendAliyun', userTokens, notification\n\n\t\t\tif Match.test(notification.gcm, Object)\n\t\t\t\tnotification = _.extend({}, notification, notification.gcm)\n\t\t\t# Make sure userTokens are an array of strings\n\t\t\tif userTokens == '' + userTokens\n\t\t\t\tuserTokens = [ userTokens ]\n\t\t\t# Check if any tokens in there to send\n\t\t\tif !userTokens.length\n\t\t\t\tconsole.log 'sendGCM no push tokens found'\n\t\t\t\treturn\n\t\t\tif Push.debug\n\t\t\t\tconsole.log 'sendAliyun', userTokens, notification\n\n\t\t\tFiber = require('fibers')\n\t  \n\t\t\tuserToken = if userTokens.length == 1 then userTokens[0] else null\n\t\t\tAliyun_push.sendMessage userTokens, notification, (err, result) ->\n\t\t\t\tif err\n\t\t\t\t\tconsole.log 'ANDROID ERROR: result of sender: ' + result\n\t\t\t\telse\n\t\t\t\t\tif result == null\n\t\t\t\t\t\tconsole.log 'ANDROID: Result of sender is null'\n\t\t\t\t\treturn\n\n\t\t\t\t\tif Push.debug\n\t\t\t\t\t\tconsole.log 'ANDROID: Result of sender: ' + JSON.stringify(result)\n\n\t\t\t\t\tif result.canonical_ids == 1 and userToken\n\t\t\t\t\t\tFiber((self) ->\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t\tself.callback self.oldToken, self.newToken\n\t\t\t\t\t\t\tcatch err\n\t\t\t\t\t\t).run\n\t\t\t\t\t\t\toldToken: gcm: userToken\n\t\t\t\t\t\t\tnewToken: gcm: \"aliyun:\" + result.results[0].registration_id\n\t\t\t\t\t\t\tcallback: _replaceToken\n\t\t\t\t\tif result.failure != 0 and userToken\n\t\t\t\t\t\tFiber((self) ->\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t\tself.callback self.token\n\t\t\t\t\t\t\tcatch err\n\t\t\t\t\t\t).run\n\t\t\t\t\t\t\ttoken: gcm: userToken\n\t\t\t\t\t\t\tcallback: _removeToken\n\n\n\n\t\tPush.sendGCM = (userTokens, notification) ->\n\t\t\tif Push.debug\n\t\t\t\tconsole.log 'sendGCM from aliyun-> Push.sendGCM'\n\t\t\tif Match.test(notification.gcm, Object)\n\t\t\t\tnotification = _.extend({}, notification, notification.gcm)\n\t\t\t# Make sure userTokens are an array of strings\n\t\t\tif userTokens == '' + userTokens\n\t\t\t\tuserTokens = [ userTokens ]\n\t\t\t# Check if any tokens in there to send\n\t\t\tif !userTokens.length\n\t\t\t\tconsole.log 'sendGCM no push tokens found'\n\t\t\t\treturn\n\t\t\tif Push.debug\n\t\t\t\tconsole.log 'sendGCM', userTokens, notification\n\n\t\t\taliyunTokens = userTokens.filter((item) ->\n\t\t\t\t\t\t\t\titem.indexOf('aliyun:') > -1 or item.indexOf('xinge:') > -1 or item.indexOf('huawei:') > -1 or item.indexOf('mi:') > -1\n\t\t\t\t\t\t\t)\n\t\t\tif Push.debug\n\t\t\t\tconsole.log 'aliyunTokens is ', aliyunTokens.toString()\n\n\t\t\tgcmTokens = userTokens.filter((item) ->\n\t\t\t\t\t\t\t\titem.indexOf(\"aliyun:\") < 0 and item.indexOf(\"xinge:\") < 0 and item.indexOf(\"huawei:\") < 0 and item.indexOf(\"mi:\") < 0\n\t\t\t\t\t\t\t)\n\t\t\tif Push.debug\n\t\t\t\tconsole.log 'gcmTokens is ' , gcmTokens.toString();\n\n\t\t\tPush.sendAliyun(aliyunTokens, notification);\n\n\t\t\tPush.old_sendGCM(gcmTokens, notification);\n\n\t\tPush.old_sendAPN = Push.sendAPN\n\t\tPush.sendAPN = (userToken, notification) ->\n\t\t\tif notification.title and notification.text\n\t\t\t\tnoti = _.clone(notification)\n\t\t\t\tnoti.text = noti.title + \" \" + noti.text\n\t\t\t\tnoti.title = \"\"\n\t\t\t\tPush.old_sendAPN(userToken, noti)\n\t\t\telse\n\t\t\t\tPush.old_sendAPN(userToken, notification)\n","var Aliyun_push;\n\nAliyun_push = {};\n\nAliyun_push.sendMessage = function(userTokens, notification, callback) {\n  var ALY, ALYPUSH, MiPush, Xinge, XingeApp, aliyunTokens, androidMessage, data, huaweiTokens, miTokens, msg, noti, package_name, ref, ref1, ref2, ref3, tokenDataList, xingeTokens;\n  if (notification.title && notification.text) {\n    if (Push.debug) {\n      console.log(userTokens);\n    }\n    aliyunTokens = new Array;\n    xingeTokens = new Array;\n    huaweiTokens = new Array;\n    miTokens = new Array;\n    userTokens.forEach(function(userToken) {\n      var arr;\n      arr = userToken.split(':');\n      if (arr[0] === \"aliyun\") {\n        return aliyunTokens.push(_.last(arr));\n      } else if (arr[0] === \"xinge\") {\n        return xingeTokens.push(_.last(arr));\n      } else if (arr[0] === \"huawei\") {\n        return huaweiTokens.push(_.last(arr));\n      } else if (arr[0] === \"mi\") {\n        return miTokens.push(_.last(arr));\n      }\n    });\n    if (!_.isEmpty(aliyunTokens) && ((ref = Meteor.settings.push) != null ? ref.aliyun : void 0)) {\n      ALY = require('aliyun-sdk');\n      if (Push.debug) {\n        console.log(\"aliyunTokens: \" + aliyunTokens);\n      }\n      ALYPUSH = new ALY.PUSH({\n        accessKeyId: Meteor.settings.push.aliyun.accessKeyId,\n        secretAccessKey: Meteor.settings.push.aliyun.secretAccessKey,\n        endpoint: Meteor.settings.push.aliyun.endpoint,\n        apiVersion: Meteor.settings.push.aliyun.apiVersion\n      });\n      data = {\n        AppKey: Meteor.settings.push.aliyun.appKey,\n        Target: 'device',\n        TargetValue: aliyunTokens.toString(),\n        Title: notification.title,\n        Summary: notification.text\n      };\n      ALYPUSH.pushNoticeToAndroid(data, callback);\n    }\n    if (!_.isEmpty(xingeTokens) && ((ref1 = Meteor.settings.push) != null ? ref1.xinge : void 0)) {\n      Xinge = require('xinge');\n      if (Push.debug) {\n        console.log(\"xingeTokens: \" + xingeTokens);\n      }\n      XingeApp = new Xinge.XingeApp(Meteor.settings.push.xinge.accessId, Meteor.settings.push.xinge.secretKey);\n      androidMessage = new Xinge.AndroidMessage;\n      androidMessage.type = Xinge.MESSAGE_TYPE_NOTIFICATION;\n      androidMessage.title = notification.title;\n      androidMessage.content = notification.text;\n      androidMessage.style = new Xinge.Style;\n      androidMessage.action = new Xinge.ClickAction;\n      _.each(xingeTokens, function(t) {\n        return XingeApp.pushToSingleDevice(t, androidMessage, callback);\n      });\n    }\n    if (!_.isEmpty(huaweiTokens) && ((ref2 = Meteor.settings.push) != null ? ref2.huawei : void 0)) {\n      if (Push.debug) {\n        console.log(\"huaweiTokens: \" + huaweiTokens);\n      }\n      package_name = Meteor.settings.push.huawei.appPkgName;\n      tokenDataList = [];\n      _.each(huaweiTokens, function(t) {\n        return tokenDataList.push({\n          'package_name': package_name,\n          'token': t\n        });\n      });\n      noti = {\n        'android': {\n          'title': notification.title,\n          'message': notification.text\n        },\n        'extras': notification.payload\n      };\n      HuaweiPush.config([\n        {\n          'package_name': package_name,\n          'client_id': Meteor.settings.push.huawei.appId,\n          'client_secret': Meteor.settings.push.huawei.appSecret\n        }\n      ]);\n      HuaweiPush.sendMany(noti, tokenDataList);\n    }\n    if (!_.isEmpty(miTokens) && ((ref3 = Meteor.settings.push) != null ? ref3.mi : void 0)) {\n      MiPush = require('xiaomi-push');\n      if (Push.debug) {\n        console.log(\"miTokens: \" + miTokens);\n      }\n      msg = new MiPush.Message;\n      msg.title(notification.title).description(notification.text);\n      notification = new MiPush.Notification({\n        production: Meteor.settings.push.mi.production,\n        appSecret: Meteor.settings.push.mi.appSecret\n      });\n      return _.each(miTokens, function(regid) {\n        return notification.send(regid, msg, callback);\n      });\n    }\n  }\n};\n\nMeteor.startup(function() {\n  var config, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n  if (!((ref = Meteor.settings.cron) != null ? ref.push_interval : void 0)) {\n    return;\n  }\n  config = {\n    debug: true,\n    keepNotifications: false,\n    sendInterval: Meteor.settings.cron.push_interval,\n    sendBatchSize: 10,\n    production: true\n  };\n  if (!_.isEmpty((ref1 = Meteor.settings.push) != null ? ref1.apn : void 0)) {\n    config.apn = {\n      keyData: Meteor.settings.push.apn.keyData,\n      certData: Meteor.settings.push.apn.certData\n    };\n  }\n  if (!_.isEmpty((ref2 = Meteor.settings.push) != null ? ref2.gcm : void 0)) {\n    config.gcm = {\n      projectNumber: Meteor.settings.push.gcm.projectNumber,\n      apiKey: Meteor.settings.push.gcm.apiKey\n    };\n  }\n  Push.Configure(config);\n  if ((((ref3 = Meteor.settings.push) != null ? ref3.aliyun : void 0) || ((ref4 = Meteor.settings.push) != null ? ref4.xinge : void 0) || ((ref5 = Meteor.settings.push) != null ? ref5.huawei : void 0) || ((ref6 = Meteor.settings.push) != null ? ref6.mi : void 0)) && Push && typeof Push.sendGCM === 'function') {\n    Push.old_sendGCM = Push.sendGCM;\n    Push.sendAliyun = function(userTokens, notification) {\n      var Fiber, userToken;\n      if (Push.debug) {\n        console.log('sendAliyun', userTokens, notification);\n      }\n      if (Match.test(notification.gcm, Object)) {\n        notification = _.extend({}, notification, notification.gcm);\n      }\n      if (userTokens === '' + userTokens) {\n        userTokens = [userTokens];\n      }\n      if (!userTokens.length) {\n        console.log('sendGCM no push tokens found');\n        return;\n      }\n      if (Push.debug) {\n        console.log('sendAliyun', userTokens, notification);\n      }\n      Fiber = require('fibers');\n      userToken = userTokens.length === 1 ? userTokens[0] : null;\n      return Aliyun_push.sendMessage(userTokens, notification, function(err, result) {\n        if (err) {\n          return console.log('ANDROID ERROR: result of sender: ' + result);\n        } else {\n          if (result === null) {\n            console.log('ANDROID: Result of sender is null');\n          }\n          return;\n          if (Push.debug) {\n            console.log('ANDROID: Result of sender: ' + JSON.stringify(result));\n          }\n          if (result.canonical_ids === 1 && userToken) {\n            Fiber(function(self) {\n              try {\n                return self.callback(self.oldToken, self.newToken);\n              } catch (error) {\n                err = error;\n              }\n            }).run({\n              oldToken: {\n                gcm: userToken\n              },\n              newToken: {\n                gcm: \"aliyun:\" + result.results[0].registration_id\n              },\n              callback: _replaceToken\n            });\n          }\n          if (result.failure !== 0 && userToken) {\n            return Fiber(function(self) {\n              try {\n                return self.callback(self.token);\n              } catch (error) {\n                err = error;\n              }\n            }).run({\n              token: {\n                gcm: userToken\n              },\n              callback: _removeToken\n            });\n          }\n        }\n      });\n    };\n    Push.sendGCM = function(userTokens, notification) {\n      var aliyunTokens, gcmTokens;\n      if (Push.debug) {\n        console.log('sendGCM from aliyun-> Push.sendGCM');\n      }\n      if (Match.test(notification.gcm, Object)) {\n        notification = _.extend({}, notification, notification.gcm);\n      }\n      if (userTokens === '' + userTokens) {\n        userTokens = [userTokens];\n      }\n      if (!userTokens.length) {\n        console.log('sendGCM no push tokens found');\n        return;\n      }\n      if (Push.debug) {\n        console.log('sendGCM', userTokens, notification);\n      }\n      aliyunTokens = userTokens.filter(function(item) {\n        return item.indexOf('aliyun:') > -1 || item.indexOf('xinge:') > -1 || item.indexOf('huawei:') > -1 || item.indexOf('mi:') > -1;\n      });\n      if (Push.debug) {\n        console.log('aliyunTokens is ', aliyunTokens.toString());\n      }\n      gcmTokens = userTokens.filter(function(item) {\n        return item.indexOf(\"aliyun:\") < 0 && item.indexOf(\"xinge:\") < 0 && item.indexOf(\"huawei:\") < 0 && item.indexOf(\"mi:\") < 0;\n      });\n      if (Push.debug) {\n        console.log('gcmTokens is ', gcmTokens.toString());\n      }\n      Push.sendAliyun(aliyunTokens, notification);\n      return Push.old_sendGCM(gcmTokens, notification);\n    };\n    Push.old_sendAPN = Push.sendAPN;\n    return Push.sendAPN = function(userToken, notification) {\n      var noti;\n      if (notification.title && notification.text) {\n        noti = _.clone(notification);\n        noti.text = noti.title + \" \" + noti.text;\n        noti.title = \"\";\n        return Push.old_sendAPN(userToken, noti);\n      } else {\n        return Push.old_sendAPN(userToken, notification);\n      }\n    };\n  }\n});\n"]}