{"version":3,"sources":["meteor://ðŸ’»app/packages/raix:push/lib/common/main.js","meteor://ðŸ’»app/packages/raix:push/lib/common/notifications.js","meteor://ðŸ’»app/packages/raix:push/lib/server/push.api.js","meteor://ðŸ’»app/packages/raix:push/lib/server/server.js"],"names":["Push","EventState","checkClientSecurity","options","apn","certData","Error","keyData","passphrase","gcm","apiKey","init","console","warn","_matchToken","Match","OneOf","String","notifications","Mongo","Collection","_validateDocument","notification","check","from","title","text","sent","Optional","Boolean","sending","Integer","badge","sound","notId","contentAvailable","forceStart","category","image","style","summaryText","picture","actions","Any","query","token","tokens","payload","Object","delayUntil","Date","createdAt","createdBy","length","send","currentUser","Meteor","isClient","userId","isServer","_","extend","pick","test","JSON","stringify","insert","allow","rules","apply","deny","setBadge","isConfigured","sendWorker","task","interval","Log","debug","log","setInterval","error","message","Configure","self","sendTimeout","_replaceToken","currentToken","newToken","emitState","_removeToken","production","development","gateway","absoluteUrl","Npm","require","apnConnection","Connection","on","bindEnvironment","errCode","recipient","indexOf","sendAPN","userToken","priority","myDevice","Device","note","Notification","expiry","Math","floor","now","setContentAvailable","alert","body","ejson","EJSON","messageFrom","pushNotification","initFeedback","feedbackOptions","cert","key","feedback","Feedback","devices","forEach","item","device","start","sendGCM","userTokens","Fiber","data","msgcnt","soundname","Message","collapseKey","sender","Sender","each","value","err","result","canonical_ids","callback","oldToken","run","results","registration_id","failure","_querySend","countApn","countGcm","appCollection","find","app","push","_id","count","$exists","serverSend","tokenList","$or","$and","$in","enabled","$ne","isSendingNotification","sendInterval","_ensureIndex","sendNotification","timeoutAt","reserved","update","$lt","$set","parse","keepNotifications","remove","sentAt","emit","batchSize","sendBatchSize","pendingNotifications","$lte","sort","limit","addListener","multi","$unset","methods","id","appName","metadata","doc","findOne","updatedAt","Random","_collection","removed","found"],"mappings":"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","file":"/packages/raix_push.js","sourcesContent":["// The push object is an event emitter\nPush = new EventState();\n\n\n// Client-side security warnings, used to check options\ncheckClientSecurity = function(options) {\n\n  // Warn if certificates or keys are added here on client. We dont allow the\n  // user to do this for security reasons.\n  if (options.apn && options.apn.certData) {\n    throw new Error('Push.init: Dont add your APN certificate in client code!');\n  }\n\n  if (options.apn && options.apn.keyData) {\n    throw new Error('Push.init: Dont add your APN key in client code!');\n  }\n\n  if (options.apn && options.apn.passphrase) {\n    throw new Error('Push.init: Dont add your APN passphrase in client code!');\n  }\n\n  if (options.gcm && options.gcm.apiKey) {\n    throw new Error('Push.init: Dont add your GCM api key in client code!');\n  }\n};\n\n// DEPRECATED\nPush.init = function() {\n  console.warn('Push.init have been deprecated in favor of \"config.push.json\" please migrate');\n};\n","// This is the match pattern for tokens\n_matchToken = Match.OneOf({ apn: String }, { gcm: String });\n\n// Notifications collection\nPush.notifications = new Mongo.Collection('_raix_push_notifications');\n\n// This is a general function to validate that the data added to notifications\n// is in the correct format. If not this function will throw errors\nvar _validateDocument = function(notification) {\n\n  // Check the general notification\n  check(notification, {\n    from: String,\n    title: String,\n    text: String,\n    sent: Match.Optional(Boolean),\n    sending: Match.Optional(Match.Integer),\n    badge: Match.Optional(Match.Integer),\n    sound: Match.Optional(String),\n    notId: Match.Optional(Match.Integer),\n    contentAvailable: Match.Optional(Match.Integer),\n    forceStart: Match.Optional(Match.Integer),\n    apn: Match.Optional({\n      from: Match.Optional(String),\n      title: Match.Optional(String),\n      text: Match.Optional(String),\n      badge: Match.Optional(Match.Integer),\n      sound: Match.Optional(String),\n      notId: Match.Optional(Match.Integer),\n      category: Match.Optional(String)\n    }),\n    gcm: Match.Optional({\n      from: Match.Optional(String),\n      title: Match.Optional(String),\n      text: Match.Optional(String),\n      image: Match.Optional(String),\n      style: Match.Optional(String),\n      summaryText: Match.Optional(String),\n      picture: Match.Optional(String),\n      badge: Match.Optional(Match.Integer),\n      sound: Match.Optional(String),\n      notId: Match.Optional(Match.Integer),\n      actions: Match.Optional([Match.Any])\n    }),\n    query: Match.Optional(String),\n    token: Match.Optional(_matchToken),\n    tokens: Match.Optional([_matchToken]),\n    payload: Match.Optional(Object),\n    delayUntil: Match.Optional(Date),\n    createdAt: Date,\n    createdBy: Match.OneOf(String, null)\n  });\n\n  // Make sure a token selector or query have been set\n  if (!notification.token && !notification.tokens && !notification.query) {\n    throw new Error('No token selector or query found');\n  }\n\n  // If tokens array is set it should not be empty\n  if (notification.tokens && !notification.tokens.length) {\n    throw new Error('No tokens in array');\n  }\n};\n\nPush.send = function(options) {\n  // If on the client we set the user id - on the server we need an option\n  // set or we default to \"<SERVER>\" as the creator of the notification\n  // If current user not set see if we can set it to the logged in user\n  // this will only run on the client if Meteor.userId is available\n  var currentUser = Meteor.isClient && Meteor.userId && Meteor.userId() ||\n          Meteor.isServer && (options.createdBy || '<SERVER>') || null;\n\n  // Rig the notification object\n   var notification = _.extend({\n    createdAt: new Date(),\n    createdBy: currentUser\n  }, _.pick(options, 'from', 'title', 'text'));\n\n   // Add extra\n   _.extend(notification, _.pick(options, 'payload', 'badge', 'sound', 'notId', 'delayUntil'));\n\n  if (Match.test(options.apn, Object)) {\n    notification.apn = _.pick(options.apn, 'from', 'title', 'text', 'badge', 'sound', 'notId', 'category');\n  }\n\n  if (Match.test(options.gcm, Object)) {\n    notification.gcm = _.pick(options.gcm, 'image', 'style', 'summaryText', 'picture', 'from', 'title', 'text', 'badge', 'sound', 'notId', 'actions');\n  }\n\n  // Set one token selector, this can be token, array of tokens or query\n  if (options.query) {\n    // Set query to the json string version fixing #43 and #39\n    notification.query = JSON.stringify(options.query);\n  } else if (options.token) {\n    // Set token\n    notification.token = options.token;\n  } else if (options.tokens) {\n    // Set tokens\n    notification.tokens = options.tokens;\n  }\n  //console.log(options);\n  if (typeof options.contentAvailable !== 'undefined') {\n    notification.contentAvailable = options.contentAvailable;\n  }\n\n  if (typeof options.forceStart !== 'undefined') {\n    notification.forceStart = options.forceStart;\n  }\n  \n  notification.sent = false;\n  notification.sending = 0;\n\n  // Validate the notification\n  _validateDocument(notification);\n\n  // Try to add the notification to send, we return an id to keep track\n  return Push.notifications.insert(notification);\n};\n\nPush.allow = function(rules) {\n  if (rules.send) {\n    Push.notifications.allow({\n      'insert': function(userId, notification) {\n        // Validate the notification\n        _validateDocument(notification);\n        // Set the user defined \"send\" rules\n        return rules.send.apply(this, [userId, notification]);\n      }\n    });\n  }\n};\n\nPush.deny = function(rules) {\n  if (rules.send) {\n    Push.notifications.deny({\n      'insert': function(userId, notification) {\n        // Validate the notification\n        _validateDocument(notification);\n        // Set the user defined \"send\" rules\n        return rules.send.apply(this, [userId, notification]);\n      }\n    });\n  }\n};\n","/*\n  A general purpose user CordovaPush\n  ios, android, mail, twitter?, facebook?, sms?, snailMail? :)\n\n  Phonegap generic :\n  https://github.com/phonegap-build/PushPlugin\n */\n\n// getText / getBinary\n\nPush.setBadge = function(/* id, count */) {\n    // throw new Error('Push.setBadge not implemented on the server');\n};\n\nvar isConfigured = false;\n\nvar sendWorker = function(task, interval) {\n  if (typeof Push.Log === 'function') {\n    Push.Log('Push: Send worker started, using interval:', interval);\n  }\n  if (Push.debug) {\n    console.log('Push: Send worker started, using interval: ' + interval);\n  }\n\n  return Meteor.setInterval(function() {\n    // xxx: add exponential backoff on error\n    try {\n      task();\n    } catch(error) {\n      if (typeof Push.Log === 'function') {\n        Push.Log('Push: Error while sending:', error.message);\n      }\n      if (Push.debug) {\n        console.log('Push: Error while sending: ' + error.message);\n      }\n    }\n  }, interval);\n};\n\nPush.Configure = function(options) {\n    var self = this;\n    options = _.extend({\n      sendTimeout: 60000, // Timeout period for notification send\n    }, options);\n    // https://npmjs.org/package/apn\n\n    // After requesting the certificate from Apple, export your private key as\n    // a .p12 file anddownload the .cer file from the iOS Provisioning Portal.\n\n    // gateway.push.apple.com, port 2195\n    // gateway.sandbox.push.apple.com, port 2195\n\n    // Now, in the directory containing cert.cer and key.p12 execute the\n    // following commands to generate your .pem files:\n    // $ openssl x509 -in cert.cer -inform DER -outform PEM -out cert.pem\n    // $ openssl pkcs12 -in key.p12 -out key.pem -nodes\n\n    // Block multiple calls\n    if (isConfigured) {\n      throw new Error('Push.Configure should not be called more than once!');\n    }\n\n    isConfigured = true;\n\n    // Add debug info\n    if (Push.debug) {\n      console.log('Push.Configure', options);\n    }\n\n    // This function is called when a token is replaced on a device - normally\n    // this should not happen, but if it does we should take action on it\n    _replaceToken = function(currentToken, newToken) {\n        // console.log('Replace token: ' + currentToken + ' -- ' + newToken);\n        // If the server gets a token event its passing in the current token and\n        // the new value - if new value is undefined this empty the token\n        self.emitState('token', currentToken, newToken);\n    };\n\n    // Rig the removeToken callback\n    _removeToken = function(token) {\n        // console.log('Remove token: ' + token);\n        // Invalidate the token\n        self.emitState('token', token, null);\n    };\n\n\n    if (options.apn) {\n        if (Push.debug) {\n          console.log('Push: APN configured');\n        }\n\n        // Allow production to be a general option for push notifications\n        if (options.production === Boolean(options.production)) {\n          options.apn.production = options.production;\n        }\n\n        // Give the user warnings about development settings\n        if (options.apn.development) {\n          // This flag is normally set by the configuration file\n          console.warn('WARNING: Push APN is using development key and certificate');\n        } else {\n          // We check the apn gateway i the options, we could risk shipping\n          // server into production while using the production configuration.\n          // On the other hand we could be in development but using the production\n          // configuration. And finally we could have configured an unknown apn\n          // gateway (this could change in the future - but a warning about typos\n          // can save hours of debugging)\n          //\n          // Warn about gateway configurations - it's more a guide\n          if (options.apn.gateway) {\n\n              if (options.apn.gateway === 'gateway.sandbox.push.apple.com') {\n                  // Using the development sandbox\n                  console.warn('WARNING: Push APN is in development mode');\n              } else if (options.apn.gateway === 'gateway.push.apple.com') {\n                  // In production - but warn if we are running on localhost\n                  if (/http:\\/\\/localhost/.test(Meteor.absoluteUrl())) {\n                      console.warn('WARNING: Push APN is configured to production mode - but server is running' +\n                        ' from localhost');\n                  }\n              } else {\n                  // Warn about gateways we dont know about\n                  console.warn('WARNING: Push APN unkown gateway \"' + options.apn.gateway + '\"');\n              }\n\n          } else {\n              if (options.apn.production) {\n                  if (/http:\\/\\/localhost/.test(Meteor.absoluteUrl())) {\n                      console.warn('WARNING: Push APN is configured to production mode - but server is running' +\n                        ' from localhost');\n                  }\n              } else {\n                  console.warn('WARNING: Push APN is in development mode');\n              }\n          }\n\n        }\n\n        // Check certificate data\n        if (!options.apn.certData || !options.apn.certData.length) {\n          console.error('ERROR: Push server could not find certData');\n        }\n\n        // Check key data\n        if (!options.apn.keyData || !options.apn.keyData.length) {\n          console.error('ERROR: Push server could not find keyData');\n        }\n\n        // Rig apn connection\n        var apn = Npm.require('apn');\n        var apnConnection = new apn.Connection( options.apn );\n\n        // Listen to transmission errors - should handle the same way as feedback.\n        apnConnection.on('transmissionError', Meteor.bindEnvironment(function (errCode, notification, recipient) {\n          if (Push.debug) {\n            console.log('Got error code %d for token %s', errCode, notification.token);\n          }\n          if ([2, 5, 8].indexOf(errCode) >= 0) {\n\n\n            // Invalid token errors...\n            _removeToken({\n              apn: notification.token\n            });\n          }\n        }));\n        // XXX: should we do a test of the connection? It would be nice to know\n        // That the server/certificates/network are correct configured\n\n        // apnConnection.connect().then(function() {\n        //     console.info('CHECK: Push APN connection OK');\n        // }, function(err) {\n        //     console.warn('CHECK: Push APN connection FAILURE');\n        // });\n        // Note: the above code spoils the connection - investigate how to\n        // shutdown/close it.\n\n        self.sendAPN = function(userToken, notification) {\n            if (Match.test(notification.apn, Object)) {\n              notification = _.extend({}, notification, notification.apn);\n            }\n\n            // console.log('sendAPN', notification.from, userToken, notification.title, notification.text,\n            // notification.badge, notification.priority);\n            var priority = (notification.priority || notification.priority === 0)? notification.priority : 10;\n\n            var myDevice = new apn.Device(userToken);\n\n            var note = new apn.Notification();\n\n            note.expiry = Math.floor(Date.now() / 1000) + 3600; // Expires 1 hour from now.\n            if (typeof notification.badge !== 'undefined') {\n              note.badge = notification.badge;\n            }\n            if (typeof notification.sound !== 'undefined') {\n              note.sound = notification.sound;\n            }\n            //console.log(notification.contentAvailable);\n            //console.log(\"lala2\");\n            //console.log(notification);\n            if (typeof notification.contentAvailable !== 'undefined') {\n              //console.log(\"lala\");\n              note.setContentAvailable(notification.contentAvailable);\n              //console.log(note);\n            }\n\n          // adds category support for iOS8 custom actions as described here:\n            // https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/\n            // RemoteNotificationsPG/Chapters/IPhoneOSClientImp.html#//apple_ref/doc/uid/TP40008194-CH103-SW36\n            if (typeof notification.category !== 'undefined') {\n              note.category = notification.category;\n            }\n\n            note.alert = {\n              body: notification.text\n            };\n\n            if (typeof notification.title !== 'undefined') {\n              note.alert.title = notification.title;\n            }\n\n            // Allow the user to set payload data\n            note.payload = (notification.payload) ? { ejson: EJSON.stringify(notification.payload) } : {};\n\n            note.payload.messageFrom = notification.from;\n            note.priority = priority;\n\n\n            // Store the token on the note so we can reference it if there was an error\n            note.token = userToken;\n\n            // console.log('I:Send message to: ' + userToken + ' count=' + count);\n\n            apnConnection.pushNotification(note, myDevice);\n\n        };\n\n\n        var initFeedback = function () {\n            var apn = Npm.require('apn');\n            // console.log('Init feedback');\n            var feedbackOptions = {\n                'batchFeedback': true,\n\n                // Time in SECONDS\n                'interval': 5,\n                production: !options.apn.development,\n                cert: options.certData,\n                key: options.keyData,\n                passphrase: options.passphrase\n            };\n\n            var feedback = new apn.Feedback(feedbackOptions);\n            feedback.on('feedback', function (devices) {\n                devices.forEach(function (item) {\n                    // Do something with item.device and item.time;\n                    // console.log('A:PUSH FEEDBACK ' + item.device + ' - ' + item.time);\n                    // The app is most likely removed from the device, we should\n                    // remove the token\n                    _removeToken({\n                        apn: item.device\n                    });\n                });\n            });\n\n            feedback.start();\n        };\n\n        // Init feedback from apn server\n        // This will help keep the appCollection up-to-date, it will help update\n        // and remove token from appCollection.\n        initFeedback();\n\n    } // EO ios notification\n\n    if (options.gcm && options.gcm.apiKey) {\n        if (Push.debug) {\n          console.log('GCM configured');\n        }\n        //self.sendGCM = function(options.from, userTokens, options.title, options.text, options.badge, options.priority) {\n        self.sendGCM = function(userTokens, notification) {\n            if (Match.test(notification.gcm, Object)) {\n              notification = _.extend({}, notification, notification.gcm);\n            }\n\n            // Make sure userTokens are an array of strings\n            if (userTokens === ''+userTokens) {\n              userTokens = [userTokens];\n            }\n\n            // Check if any tokens in there to send\n            if (!userTokens.length) {\n                if (Push.debug) {\n                  console.log('sendGCM no push tokens found');\n                }\n                return;\n            }\n\n            if (Push.debug) {\n              console.log('sendGCM', userTokens, notification);\n            }\n\n            var gcm = Npm.require('node-gcm');\n            var Fiber = Npm.require('fibers');\n\n            // Allow user to set payload\n            var data = (notification.payload) ? { ejson: EJSON.stringify(notification.payload) } : {};\n\n            data.title = notification.title;\n            data.message = notification.text;\n\n            // Set image\n            if(typeof notification.image !== 'undefined') {\n              data.image = notification.image;\n            }\n\n            // Set extra details\n            if (typeof notification.badge !== 'undefined') {\n              data.msgcnt = notification.badge;\n            }\n            if (typeof notification.sound !== 'undefined') {\n              data.soundname = notification.sound;\n            }\n            if (typeof notification.notId !== 'undefined') {\n              data.notId = notification.notId;\n            }\n            if(typeof notification.style !== 'undefined') {\n              data.style = notification.style;\n            }\n            if(typeof notification.summaryText !== 'undefined') {\n              data.summaryText = notification.summaryText;\n            }\n            if(typeof notification.picture !== 'undefined') {\n              data.picture = notification.picture;\n            }\n\n            //Action Buttons\n            if(typeof notification.actions !== 'undefined') {\n              data.actions = notification.actions;\n            }\n\n            //Force Start\n            if(typeof notification.forceStart !== 'undefined') {\n              data['force-start'] = notification.forceStart;\n            }\n            if(typeof notification.contentAvailable !== 'undefined') {\n              data['content-available'] = notification.contentAvailable;\n            }\n\n            //var message = new gcm.Message();\n            var message = new gcm.Message({\n                collapseKey: notification.from,\n            //    delayWhileIdle: true,\n            //    timeToLive: 4,\n            //    restricted_package_name: 'dk.gi2.app'\n                data: data\n            });\n\n            if (Push.debug) {\n              console.log('Create GCM Sender using \"' + options.gcm.apiKey + '\"');\n            }\n            var sender = new gcm.Sender(options.gcm.apiKey);\n\n            _.each(userTokens, function(value /*, key */) {\n                if (Push.debug) {\n                  console.log('A:Send message to: ' + value);\n                }\n            });\n\n            /*message.addData('title', title);\n            message.addData('message', text);\n            message.addData('msgcnt', '1');\n            message.collapseKey = 'sitDrift';\n            message.delayWhileIdle = true;\n            message.timeToLive = 3;*/\n\n            // /**\n            //  * Parameters: message-literal, userTokens-array, No. of retries, callback-function\n            //  */\n\n            var userToken = (userTokens.length === 1)?userTokens[0]:null;\n\n            sender.send(message, userTokens, 5, function (err, result) {\n                if (err) {\n                    if (Push.debug) {\n                      console.log('ANDROID ERROR: result of sender: ' + result);\n                    }\n                } else {\n                    if (result === null) {\n                      if (Push.debug) {\n                        console.log('ANDROID: Result of sender is null');\n                      }\n                      return;\n                    }\n                    if (Push.debug) {\n                      console.log('ANDROID: Result of sender: ' + JSON.stringify(result));\n                    }\n                    if (result.canonical_ids === 1 && userToken) { // jshint ignore:line\n\n                        // This is an old device, token is replaced\n                        Fiber(function(self) {\n                            // Run in fiber\n                            try {\n                                self.callback(self.oldToken, self.newToken);\n                            } catch(err) {\n\n                            }\n\n                        }).run({\n                            oldToken: { gcm: userToken },\n                            newToken: { gcm: result.results[0].registration_id }, // jshint ignore:line\n                            callback: _replaceToken\n                        });\n                        //_replaceToken({ gcm: userToken }, { gcm: result.results[0].registration_id });\n\n                    }\n                    // We cant send to that token - might not be registred\n                    // ask the user to remove the token from the list\n                    if (result.failure !== 0 && userToken) {\n\n                        // This is an old device, token is replaced\n                        Fiber(function(self) {\n                            // Run in fiber\n                            try {\n                                self.callback(self.token);\n                            } catch(err) {\n\n                            }\n\n                        }).run({\n                            token: { gcm: userToken },\n                            callback: _removeToken\n                        });\n                        //_replaceToken({ gcm: userToken }, { gcm: result.results[0].registration_id });\n\n                    }\n\n                }\n            });\n            // /** Use the following line if you want to send the message without retries\n            // sender.sendNoRetry(message, userTokens, function (result) {\n            //     console.log('ANDROID: ' + JSON.stringify(result));\n            // });\n            // **/\n        }; // EO sendAndroid\n\n    } // EO Android\n\n    // Universal send function\n    var _querySend = function(query, options) {\n\n      var countApn = [];\n      var countGcm = [];\n\n        Push.appCollection.find(query).forEach(function(app) {\n\n          if (Push.debug) {\n            console.log('send to token', app.token);\n          }\n\n            if (app.token.apn) {\n              countApn.push(app._id);\n                // Send to APN\n                if (self.sendAPN) {\n                  self.sendAPN(app.token.apn, options);\n                }\n\n            } else if (app.token.gcm) {\n              countGcm.push(app._id);\n\n                // Send to GCM\n                // We do support multiple here - so we should construct an array\n                // and send it bulk - Investigate limit count of id's\n                if (self.sendGCM) {\n                  self.sendGCM(app.token.gcm, options);\n                }\n\n            } else {\n                throw new Error('Push.send got a faulty query');\n            }\n\n        });\n\n        if (Push.debug) {\n\n          console.log('Push: Sent message \"' + options.title + '\" to ' + countApn.length + ' ios apps ' +\n            countGcm.length + ' android apps');\n\n          // Add some verbosity about the send result, making sure the developer\n          // understands what just happened.\n          if (!countApn.length && !countGcm.length) {\n            if (Push.appCollection.find().count() === 0) {\n              console.log('Push, GUIDE: The \"Push.appCollection\" is empty -' +\n                ' No clients have registred on the server yet...');\n            }\n          } else if (!countApn.length) {\n            if (Push.appCollection.find({ 'token.apn': { $exists: true } }).count() === 0) {\n              console.log('Push, GUIDE: The \"Push.appCollection\" - No APN clients have registred on the server yet...');\n            }\n          } else if (!countGcm.length) {\n            if (Push.appCollection.find({ 'token.gcm': { $exists: true } }).count() === 0) {\n              console.log('Push, GUIDE: The \"Push.appCollection\" - No GCM clients have registred on the server yet...');\n            }\n          }\n\n        }\n\n        return {\n          apn: countApn,\n          gcm: countGcm\n        };\n    };\n\n    self.serverSend = function(options) {\n      options = options || { badge: 0 };\n      var query;\n\n      // Check basic options\n      if (options.from !== ''+options.from) {\n        throw new Error('Push.send: option \"from\" not a string');\n      }\n\n      if (options.title !== ''+options.title) {\n        throw new Error('Push.send: option \"title\" not a string');\n      }\n\n      if (options.text !== ''+options.text) {\n        throw new Error('Push.send: option \"text\" not a string');\n      }\n\n      if (options.token || options.tokens) {\n\n        // The user set one token or array of tokens\n        var tokenList = (options.token)? [options.token] : options.tokens;\n\n        if (Push.debug) {\n          console.log('Push: Send message \"' + options.title + '\" via token(s)', tokenList);\n        }\n\n        query = {\n          $or: [\n              // XXX: Test this query: can we hand in a list of push tokens?\n              { $and: [\n                  { token: { $in: tokenList } },\n                  // And is not disabled\n                  { enabled: { $ne: false }}\n                ]\n              },\n              // XXX: Test this query: does this work on app id?\n              { $and: [\n                  { _id: { $in: tokenList } }, // one of the app ids\n                  { $or: [\n                      { 'token.apn': { $exists: true }  }, // got apn token\n                      { 'token.gcm': { $exists: true }  }  // got gcm token\n                  ]},\n                  // And is not disabled\n                  { enabled: { $ne: false }}\n                ]\n              }\n          ]\n        };\n\n      } else if (options.query) {\n\n        if (Push.debug) {\n          console.log('Push: Send message \"' + options.title + '\" via query', options.query);\n        }\n\n        query = {\n          $and: [\n              options.query, // query object\n              { $or: [\n                  { 'token.apn': { $exists: true }  }, // got apn token\n                  { 'token.gcm': { $exists: true }  }  // got gcm token\n              ]},\n              // And is not disabled\n              { enabled: { $ne: false }}\n          ]\n        };\n      }\n\n\n      if (query) {\n\n        // Convert to querySend and return status\n        return _querySend(query, options);\n\n      } else {\n        throw new Error('Push.send: please set option \"token\"/\"tokens\" or \"query\"');\n      }\n\n    };\n\n\n    // This interval will allow only one notification to be sent at a time, it\n    // will check for new notifications at every `options.sendInterval`\n    // (default interval is 15000 ms)\n    //\n    // It looks in notifications collection to see if theres any pending\n    // notifications, if so it will try to reserve the pending notification.\n    // If successfully reserved the send is started.\n    //\n    // If notification.query is type string, it's assumed to be a json string\n    // version of the query selector. Making it able to carry `$` properties in\n    // the mongo collection.\n    //\n    // Pr. default notifications are removed from the collection after send have\n    // completed. Setting `options.keepNotifications` will update and keep the\n    // notification eg. if needed for historical reasons.\n    //\n    // After the send have completed a \"send\" event will be emitted with a\n    // status object containing notification id and the send result object.\n    //\n    var isSendingNotification = false;\n\n    if (options.sendInterval !== null) {\n\n      // This will require index since we sort notifications by createdAt\n      Push.notifications._ensureIndex({ createdAt: 1 });\n      Push.notifications._ensureIndex({ sent: 1 });\n      Push.notifications._ensureIndex({ sending: 1 });\n      Push.notifications._ensureIndex({ delayUntil: 1 });\n\n      var sendNotification = function(notification) {\n        // Reserve notification\n        var now = +new Date();\n        var timeoutAt = now + options.sendTimeout;\n        var reserved = Push.notifications.update({\n          _id: notification._id,\n          sent: false, // xxx: need to make sure this is set on create\n          sending: { $lt: now },\n        },\n        {\n          $set: {\n            sending: timeoutAt,\n          }\n        });\n\n        // Make sure we only handle notifications reserved by this\n        // instance\n        if (reserved) {\n\n          // Check if query is set and is type String\n          if (notification.query && notification.query === ''+notification.query) {\n            try {\n              // The query is in string json format - we need to parse it\n              notification.query = JSON.parse(notification.query);\n            } catch(err) {\n              // Did the user tamper with this??\n              throw new Error('Push: Error while parsing query string, Error: ' + err.message);\n            }\n          }\n\n          // Send the notification\n          var result = Push.serverSend(notification);\n\n          if (!options.keepNotifications) {\n              // Pr. Default we will remove notifications\n              Push.notifications.remove({ _id: notification._id });\n          } else {\n\n              // Update the notification\n              Push.notifications.update({ _id: notification._id }, {\n                  $set: {\n                    // Mark as sent\n                    sent: true,\n                    // Set the sent date\n                    sentAt: new Date(),\n                    // Count\n                    count: result,\n                    // Not being sent anymore\n                    sending: 0\n                  }\n              });\n\n          }\n\n          // Emit the send\n          self.emit('send', { notification: notification._id, result: result });\n\n        } // Else could not reserve\n      }; // EO sendNotification\n\n      sendWorker(function() {\n\n          if (isSendingNotification) {\n              return;\n          }\n\n          try {\n\n            // Set send fence\n            isSendingNotification = true;\n\n            // var countSent = 0;\n            var batchSize = options.sendBatchSize || 1;\n\n            var now = +new Date();\n\n            // Find notifications that are not being or already sent\n            var pendingNotifications = Push.notifications.find({ $and: [\n                  // Message is not sent\n                  { sent : false },\n                  // And not being sent by other instances\n                  { sending: { $lt: now } },\n                  // And not queued for future\n                  { $or: [\n                      { delayUntil: { $exists: false } },\n                      { delayUntil:  { $lte: new Date() } }\n                    ]\n                  }\n              ]}, {\n                // Sort by created date\n                sort: { createdAt: 1 },\n                limit: batchSize\n              });\n\n            pendingNotifications.forEach(function(notification) {\n              try {\n                sendNotification(notification);\n              } catch(error) {\n                if (typeof Push.Log === 'function') {\n                  Push.Log('Push: Could not send notification id: \"' + notification._id + '\", Error:', error.message);\n                }\n                if (Push.debug) {\n                  console.log('Push: Could not send notification id: \"' + notification._id + '\", Error: ' + error.message);\n                }\n              }\n            }); // EO forEach\n          } finally {\n\n            // Remove the send fence\n            isSendingNotification = false;\n          }\n      }, options.sendInterval || 15000); // Default every 15th sec\n\n    } else {\n      if (Push.debug) {\n        console.log('Push: Send server is disabled');\n      }\n    }\n\n};\n","Push.appCollection = new Mongo.Collection('_raix_push_app_tokens');\nPush.appCollection._ensureIndex({ userId: 1 });\n\nPush.addListener('token', function(currentToken, value) {\n  if (value) {\n    // Update the token for app\n    Push.appCollection.update({ token: currentToken }, { $set: { token: value } }, { multi: true });\n  } else if (value === null) {\n    // Remove the token for app\n    Push.appCollection.update({ token: currentToken }, { $unset: { token: true } }, { multi: true });\n  }\n});\n\nMeteor.methods({\n  'raix:push-update': function(options) {\n    if (Push.debug) {\n      console.log('Push: Got push token from app:', options);\n    }\n\n    check(options, {\n      id: Match.Optional(String),\n      token: _matchToken,\n      appName: String,\n      userId: Match.OneOf(String, null),\n      metadata: Match.Optional(Object)\n    });\n\n    // The if user id is set then user id should match on client and connection\n    if (options.userId && options.userId !== this.userId) {\n      throw new Meteor.Error(403, 'Forbidden access');\n    }\n\n    var doc;\n\n    // lookup app by id if one was included\n    if (options.id) {\n      doc = Push.appCollection.findOne({_id: options.id});\n    } else if (options.userId) {\n      doc = Push.appCollection.findOne({userId: options.userId});\n    }\n\n    // No doc was found - we check the database to see if\n    // we can find a match for the app via token and appName\n    if (!doc) {\n      doc = Push.appCollection.findOne({\n        $and: [\n          { token: options.token },     // Match token\n          { appName: options.appName }, // Match appName\n          { token: { $exists: true } }  // Make sure token exists\n        ]\n      });\n    }\n\n    // if we could not find the id or token then create it\n    if (!doc) {\n      // Rig default doc\n      doc = {\n        token: options.token,\n        appName: options.appName,\n        userId: options.userId,\n        enabled: true,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n\n      // XXX: We might want to check the id - Why isnt there a match for id\n      // in the Meteor check... Normal length 17 (could be larger), and\n      // numbers+letters are used in Random.id() with exception of 0 and 1\n      doc._id = options.id || Random.id();\n      // The user wanted us to use a specific id, we didn't find this while\n      // searching. The client could depend on the id eg. as reference so\n      // we respect this and try to create a document with the selected id;\n      Push.appCollection._collection.insert(doc);\n    } else {\n      // We found the app so update the updatedAt and set the token\n      Push.appCollection.update({ _id: doc._id }, {\n        $set: {\n          updatedAt: new Date(),\n          token: options.token\n        }\n      });\n    }\n\n    if (doc) {\n      // xxx: Hack\n      // Clean up mech making sure tokens are uniq - android sometimes generate\n      // new tokens resulting in duplicates\n      var removed = Push.appCollection.remove({\n        $and: [\n          { _id: { $ne: doc._id } },\n          { token: doc.token },     // Match token\n          { appName: doc.appName }, // Match appName\n          { token: { $exists: true } }  // Make sure token exists\n        ]\n      });\n\n      if (removed && Push.debug) {\n        console.log('Push: Removed ' + removed + ' existing app items');\n      }\n    }\n\n    if (doc && Push.debug) {\n      console.log('Push: updated', doc);\n    }\n\n    if (!doc) {\n      throw new Meteor.Error(500, 'setPushToken could not create record');\n    }\n    // Return the doc we want to use\n    return doc;\n  },\n  'raix:push-setuser': function(id) {\n    check(id, String);\n\n    if (Push.debug) {\n      console.log('Push: Settings userId \"' + this.userId + '\" for app:', id);\n    }\n    // We update the appCollection id setting the Meteor.userId\n    var found = Push.appCollection.update({ _id: id }, { $set: { userId: this.userId } });\n\n    // Note that the app id might not exist because no token is set yet.\n    // We do create the new app id for the user since we might store additional\n    // metadata for the app / user\n\n    // If id not found then create it?\n    // We dont, its better to wait until the user wants to\n    // store metadata or token - We could end up with unused data in the\n    // collection at every app re-install / update\n    //\n    // The user could store some metadata in appCollectin but only if they\n    // have created the app and provided a token.\n    // If not the metadata should be set via ground:db\n\n    return !!found;\n  },\n  'raix:push-metadata': function(data) {\n    check(data, {\n      id: String,\n      metadata: Object\n    });\n\n    // Set the metadata\n    var found = Push.appCollection.update({ _id: data.id }, { $set: { metadata: data.metadata } });\n\n    return !!found;\n  },\n  'raix:push-enable': function(data) {\n    check(data, {\n      id: String,\n      enabled: Boolean\n    });\n\n    if (Push.debug) {\n      console.log('Push: Setting enabled to \"' + data.enabled + '\" for app:', data.id);\n    }\n\n    var found = Push.appCollection.update({ _id: data.id }, { $set: { enabled: data.enabled } });\n\n    return !!found;\n  }\n});\n\n"]}