name: cms_posts
icon: knowledge
label: Knowledge
enable_files: true
enable_chatter: true
sidebar:
  template_name: creator_grid_sidebar_sites
fields:
  name:
    label: Title
    type: text
    defaultValue: ''
    description: ''
    inlineHelpText: ''
    required: true
    searchable: true
    is_wide: true
  summary:
    type: textarea
    label: Summary
    rows: 2
    is_wide: true
    omit: true
    hidden: true
  body:
    type: markdown
    label: Body
    rows: 5
    is_wide: true
    hidden: true
    omit: true
  htmlBody:
    type: html
    label: Main Body
    required: true
    is_wide: true
  # images:
  #   label: 照片
  #   type: avatar
  #   multiple: true
  #   hidden: false
  #   omit: false
  #   is_wide: true
  # attachments:
  #   label: 附件
  #   type: 'avatar'
  #   multiple: true
  #   is_wide: true
  site:
    label: Site
    type: lookup
    reference_to: cms_sites
    required: true
    sortable: true
    index: true
    defaultValue: !!js/function |
      function () {
        var site = Session.get("site");
        return site ? site._id : null;
      }
  category:
    label: Category
    type: lookup
    reference_to: cms_categories
    sortable: true
    defaultValue: !!js/function |
      function () {
        var category = Session.get("category");
        return category ? category._id : null;
      }
    # filtersFunction: !!js/function |
    #   function () {
    #     return "site eq '" + Session.get("siteId") + "'";
    #   }
    depend_on:
      - site
    optionsFunction: !!js/function |
      function (values) {
        if (!values || !values.site) {
          return [];
        }
        var objectName = "cms_categories";
        var object = Creator.getObject(objectName);
        if(!object){
          console.error(t("cms_posts_error_no_object") + objectName);
          return [];
        }
        var options, result, companys, queryFilters;
        result = [];
        options = {
          $select: 'name'
        };
        var site = values.site;
        if(_.isObject(site)){
          site = site._id;
        }
        queryFilters = ["site", "=", site];
        var steedosFilters = require("@steedos/filters");
        var odataFilter = steedosFilters.formatFiltersToODataQuery(queryFilters);
        options.$filter = odataFilter;
        companys = Creator.odata.query(objectName, options, true);
        companys.forEach(function (item) {
          result.push({
            label: item.name,
            value: item._id
          });
        });
        return result;
      }
  # visibility:
  #   label: 可见性
  #   type: lookup
  #   hidden: true
  #   defaultValue: "private"
  #   is_wide: true
  #   optionsFunction: !!js/function |
  #     function(){
  #       var visibilitys = [
  #         {label: t("cms_posts_visibility_private"), value: "private"},
  #         {label: t("cms_posts_visibility_space"), value: "space"},
  #         /*{label: t("cms_posts_visibility_public"), value: "public"}*/
  #       ];
  #       if(Steedos && Steedos.isSpaceAdmin()){
  #         return visibilitys;
  #       }
  #       else{
  #         return visibilitys[0];
  #       }
  #     }
  members:
    type: object
    label: Members
    is_wide: true
  members.users:
    type: lookup
    label: User Members
    reference_to: users
    multiple: true
    filterable: true
  members.organizations:
    type: lookup
    label: Organization Members
    reference_to: organizations
    multiple: true
    filterable: true
  # postDate:
  #   type: datetime
  #   label: 发布日期
  #   hidden: true
  #   required: false
  #   defaultValue: !!js/function |
  #     function () {
  #       return new Date();
  #     }
  # The post author's name
  # tags:
  #   type: "[text]"
  #   hidden: true
  #   omit: true
  # author_name:
  #   label: 作者
  #   type: "text"
  #   omit: true
  # author:
  #   label: 作者
  #   type: lookup
  #   reference_to: users
  #   index: true
  #   omit: true
  viewCount:
    label: Count
    type: number
    omit: true
    hidden: true
  # commentCount:
  #   label: 评论次数
  #   type: number
  #   hidden: true
  #   omit: true
  # commenters:
  #   label: 评论者
  #   type: lookup
  #   reference_to: users
  #   multiple: true
  #   hidden: true
  #   omit: true
  # lastCommentedAt:
  #   label: 最后评论时间
  #   type: datetime
  #   hidden: true
  #   omit: true
  # clickCount:
  #   label: 点击次数
  #   type: number
  #   hidden: true
  #   omit: true
  # baseScore:
  #   type: number
  #   scale: 2
  #   hidden: true
  #   omit: true
  # upvotes:
  #   type: number
  #   hidden: true
  #   omit: true
  # upvoters:
  #   type: lookup
  #   reference_to: users
  #   multiple: true
  #   hidden: true
  #   omit: true
  # downvotes:
  #   type: number
  #   hidden: true
  #   omit: true
  # downvoters:
  #   type: lookup
  #   reference_to: users
  #   multiple: true
  #   hidden: true
  #   omit: true
  # score:
  #   type: number
  #   scale: 2
  #   hidden: true
  #   omit: true
  # The post's status. 
  # status:
  #   type: number
  #   hidden: true
  #   omit: true
  # featured:
  #   type: boolean
  #   defaultValue: false
  #   hidden: true
  #   omit: true
  # Whether the post is inactive. Inactive posts see their score recalculated less often
  # inactive:
  #   type: boolean
  #   hidden: true
  #   omit: true
  # Save info for later spam checking on a post. We will use this for the akismet package
  # userIP:
  #   type: "text"
  #   hidden: true
  #   omit: true
  # userAgent:
  #   type: "text"
  #   hidden: true
  #   omit: true
  # referrer:
  #   type: "text"
  #   hidden: true
  #   omit: true
list_views:
  all:
    label: All Knowledge
    filter_scope: space
    filters: !<tag:yaml.org,2002:js/function> |-
      function () {
        var userId = Steedos.userId();
        var site = Session.get("site");
        var isSiteAdmin = site && site.admins && site.admins.indexOf(userId) > -1;
        var isAdmin = Steedos.isSpaceAdmin() || isSiteAdmin;
        var isSitePublic = site && site.visibility !== "private";
        var isSiteEnablePostPermissions = site && site.enable_post_permissions;
        var organizations = Steedos.getUserOrganizations(true);
        if(!isAdmin){
          if(isSiteEnablePostPermissions){
            /*启用文章级权限时，权限跟站点可见性没关系，只走members权限*/
            return [
              ["owner","=","{userId}"],
              "or",
              ["members.organizations","=",organizations],
              "or",
              ["members.users","=","{userId}"]
            ];
          }
          else if(!isSitePublic){
            /*私有站点下文档只能被站点成员site.admins看到，不是站点成员则只能看自己owner的文档*/
            return [
              ["owner","=","{userId}"]
            ];
          }
        }
      }
    # filters: !<tag:yaml.org,2002:js/function> |-
    #   function () {
    #     var userId = Steedos.userId();
    #     var site = Session.get("site");
    #     var isSiteAdmin = site && site.admins && site.admins.indexOf(userId) > -1;
    #     var isAdmin = Steedos.isSpaceAdmin() || isSiteAdmin;
    #     var organizations = Steedos.getUserOrganizations(true);
    #     if(!isAdmin){
    #       return [
    #         ["owner","=","{userId}"],
    #         "or",
    #         ["members.organizations","=",organizations],
    #         "or",
    #         ["members.users","=","{userId}"]
    #       ];
    #     }
    #   }
    columns:
      - name
      - modified
      - modified_by
    sort:
      - - modified
        - desc
permission_set:
  user:
    allowCreate: true
    allowDelete: true
    allowEdit: true
    allowRead: true
    modifyAllRecords: false
    viewAllRecords: true
  admin:
    allowCreate: true
    allowDelete: true
    allowEdit: true
    allowRead: true
    modifyAllRecords: true
    viewAllRecords: true