name: queue_import
label: Data Import Queue
icon: product_consumed
enable_files: true
hidden: true
fields:
  description:
    label: Description
    type: text
    is_wide: true
    required: true
    is_name: true
    name: description
    searchable: true
  object_name:
    label: Object
    type: lookup
    optionsFunction: !<tag:yaml.org,2002:js/function> |- 
      function () {
                var _options;
              _options = [];
              _.forEach(Creator.Objects, function (o, k) {
                  return _options.push({
                    label: o.label,
                  value: k,
                  icon: o.icon
                });
              });
              return _options;
            }
    name: object_name
    filterable: true
  encoding:
    label: Character Code
    type: select
    defaultValue: GB2312
    options:
      - label: GB2312 , Simplified Chinese
        value: GB2312
      - label: Unicode (UTF8)
        value: UTF8
      - label: Unicode (UTF16)
        value: UTF16
      - label: Big5 , Traditional Chinese
        value: Big5
      - label: Big5 , Traditional Chinese  (HKSCS)
        value: HKSCS
      - label: Windows Japanese
        value: Windows 日语
      - label: Japanese (Shift_JIS-2004)
        value: Shift_JIS-2004
      - label: KS C 5601 Korean
        value: KS C 5601
      - label: ISO-8859-1（ISO-LATIN-1）
        value: ISO
    omit: true
    name: encoding
    filterable: true
  value_separator:
    label: Separator
    type: select
    options:
      - label: ','
        value: ','
    omit: true
    name: value_separator
    filterable: true
  field_mapping:
    label: Field Mappings
    type: lookup
    multiple: true
    depend_on:
      - object_name
    defaultIcon: service_contract
    optionsFunction: !<tag:yaml.org,2002:js/function> |-
      function (values) {
              if(values && values.object_name){
                var _object = Creator.getObject(values.object_name);
                if(_object){
                  var icon = _object.icon;
                  return [{label: "Primary Key ( _id )", value: "_id", icon: "account"}].concat(Creator.getObjectLookupFieldOptions(values != null ? values.object_name : void 0, true));
                }
              }else{
                return []
              }
            }
    required: true
    name: field_mapping
    filterable: true
  external_id_name:
    label: External_id (Based on this when executing again)
    type: lookup
    multiple: false
    depend_on:
      - object_name
    defaultIcon: service_contract
    optionsFunction: !<tag:yaml.org,2002:js/function> |-
      function (values) {
              if(values && values.object_name){
                var _object = Creator.getObject(values.object_name);
                if(_object){
                  var icon = _object.icon;
                  return [{label: "Primary Key ( _id )", value: "_id", icon: icon}].concat(Creator.getObjectLookupFieldOptions(values != null ? values.object_name : void 0, true));
                }
              }else{
                return []
              }
            }
    required: false
    name: external_id_name
    filterable: true
  success_count:
    label: Number of Successful Records
    type: number
    omit: true
    name: success_count
  failure_count:
    label: Number of Failed Records
    type: number
    omit: true
    name: failure_count
  total_count:
    label: Total Number
    type: number
    omit: true
    name: total_count
  start_time:
    label: Start Time
    type: datetime
    omit: true
    name: start_time
  end_time:
    label: End Time
    type: datetime
    omit: true
    name: end_time
  state:
    label: State
    type: select
    omit: true
    name: state
    filterable: true
  error:
    label: Error Message
    type: '[text]'
    omit: true
    name: error
list_views:
  all:
    label: All Queues
    columns:
      - object_name
      - encoding
      - field_mapping
      - description
      - state
    filter_scope: space
permission_set:
  user:
    allowCreate: false
    allowDelete: false
    allowEdit: false
    allowRead: false
    modifyAllRecords: false
    viewAllRecords: false
  admin:
    allowCreate: true
    allowDelete: true
    allowEdit: true
    allowRead: true
    modifyAllRecords: true
    viewAllRecords: true

actions:
  import:
    label: 'Perform Import'
    visible: true
    'on': record
    todo: !<tag:yaml.org,2002:js/function> |-
      function (object_name, record_id, fields) {
                var space;
              space = Session.get("spaceId");
              return Meteor.call('startImportJobs', record_id, space);
            }
