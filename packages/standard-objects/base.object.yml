name: base
hidden: true
fields:
  owner:
    label: Owner
    type: lookup
    reference_to: users
    sortable: true
    index: true
    defaultValue: "{userId}"
    omit: true
    hidden: true
  space:
    type: text
    label: Space
    reference_to: spaces
    index: true
    hidden: true
    defaultValue: "{spaceId}"
  created:
    type: datetime
    label: Creation Time 
    readonly: true
    sortable: true
    omit: true
  created_by:
    label: Created by
    type: lookup
    readonly: true
    reference_to: users
    disabled: true
    index: true
    omit: true
  modified:
    label: Modification Time
    type: datetime
    readonly: true
    sortable: true
    index: true
    omit: true
  modified_by:
    label: Modified by
    type: lookup
    readonly: true
    reference_to: users
    disabled: true
    omit: true
  is_deleted:
    type: boolean
    label: Deleted
    omit: true
    index: true
    hidden: true
  deleted:
    label: Deletion Time
    type: datetime
    readonly: true
    sortable: true
    index: true
    omit: true
    hidden: true
  deleted_by:
    label: Deleted by
    type: lookup
    readonly: true
    reference_to: users
    disabled: true
    omit: true
    hidden: true
  instances:
    label: Instances
    type: grid
    omit: true
    hidden: true
  instances.$._id:
    label: Instance ID
    type: text
    omit: true
    hidden: true
  instances.$.state:
    label: State
    type: text
    omit: true
    hidden: true
  sharing:
    label: Record Level Permission
    type: grid
    omit: true
    hidden: true
    blackbox: true
  sharing.$:
    label: Authorization
    blackbox: true
    omit: true
    hidden: true
  sharing.$.u:
    label: Authorized Users
    type: "[text]"
    omit: true
    hidden: true
  sharing.$.o:
    label: Authorized Departments
    type: "[text]"
    omit: true
    hidden: true
  sharing.$.r:
    label: Rule
    type: text
    omit: true
    hidden: true
  message_count:
    label: Number of Messages
    type: number
    omit: true
    hidden: true
  locked:
    label: Locked
    type: boolean
    omit: true
    hidden: true
  company_id:
    label: Division
    type: lookup
    reference_to: company
    sortable: true
    index: true
    defaultValue: !!js/function |
      function(){
        if(Meteor.isClient){
          return Steedos.getUserCompanyId()
        }
      }
    optionsFunction: !!js/function |
      function (values) {
        var object = Creator.getObject(values._object_name);
        if(!object){
          console.error("未找到当前对象：" + values._object_name);
          return [];
        }
        var perms = object.permissions.get();
        var options, result, companys, queryFilters;
        result = [];
        options = {
          $select: 'name'
        };
        
        if(perms.modifyAllRecords){
          /* 如果当前用户对当前业务对象的权限为 modifyAllRecords，那选择分部时可以能从所有分部中选择。*/
        }
        else{
          /* 如果当前用户对当前业务对象的权限为 modifyCompanyRecords，那选择分部时只能从当前用户所属分部中选择。*/
          var company_ids = Creator.USER_CONTEXT.user.company_ids;
          if(!company_ids.length){
            console.warn("当前用户不属于任何分部，无权修改该字段。");
            queryFilters = ["_id", "=", -1];
          }else{
            queryFilters = ["_id", "in", company_ids];
          }
        }
        var customFilters = this.filters;
        if(!_.isEmpty(customFilters)){
          if(_.isEmpty(queryFilters)){
            queryFilters = customFilters;
          }
          else{
            queryFilters = [customFilters, 'and', queryFilters];
          }
        }
        if(!_.isEmpty(queryFilters) && this.template && this.template.data && this.template.data._value && this.template.data._value.length){
          var _value = this.template.data._value;
          /* 
            this.template.data._value为原来数据库中返回的选项值，需要始终能兼容返回 
            values.company_id 及 this.template.data.value为当前用户选中的选项，能选中肯定是本来就在列表中的，所以不需要兼容返回
          */
          queryFilters = [queryFilters, 'or', ["_id", "=", _value]];
        }
        if(!_.isEmpty(queryFilters)){
          var steedosFilters = require("@steedos/filters");
          var odataFilter = steedosFilters.formatFiltersToODataQuery(queryFilters);
          options.$filter = odataFilter;
        }
        companys = Creator.odata.query('company', options, true);
        companys.forEach(function (item) {
          result.push({
            label: item.name,
            value: item._id
          });
        });
        return result;
      }
    omit: true
    hidden: true
  company_ids:
    label: All Divisions
    type: lookup
    reference_to: company
    sortable: true
    index: true
    multiple: true
    defaultValue: !!js/function |
      function(){
        if(Meteor.isClient){
          var companyId = Steedos.getUserCompanyId();
          if(companyId){
            return [companyId]
          }
          else{
            return []
          }
        }
      }
    optionsFunction: !!js/function |
      function (values) {
        var object = Creator.getObject(values._object_name);
        if(!object){
          console.error("未找到当前对象：" + values._object_name);
          return [];
        }
        var perms = object.permissions.get();
        var options, result, companys, queryFilters;
        result = [];
        options = {
          $select: 'name'
        };
        
        if(perms.modifyAllRecords){
          /* 如果当前用户对当前业务对象的权限为 modifyAllRecords，那选择分部时可以能从所有分部中选择。*/
        }
        else{
          /* 如果当前用户对当前业务对象的权限为 modifyCompanyRecords，那选择分部时只能从当前用户所属分部中选择。*/
          var company_ids = Creator.USER_CONTEXT.user.company_ids;
          if(!company_ids.length){
            console.warn("当前用户不属于任何分部，无权修改该字段。");
            queryFilters = ["_id", "=", -1];
          }else{
            queryFilters = ["_id", "in", company_ids];
          }
        }
        var customFilters = this.filters;
        if(!_.isEmpty(customFilters)){
          if(_.isEmpty(queryFilters)){
            queryFilters = customFilters;
          }
          else{
            queryFilters = [customFilters, 'and', queryFilters];
          }
        }
        if(!_.isEmpty(queryFilters) && this.template && this.template.data && this.template.data._value && this.template.data._value.length){
          var _value = this.template.data._value;
          /* 
            this.template.data._value为原来数据库中返回的选项值，需要始终能兼容返回 
            values.company_ids 及 this.template.data.value为当前用户选中的选项，能选中肯定是本来就在列表中的，所以不需要兼容返回
          */
          queryFilters = [queryFilters, 'or', ["_id", "in", _value]];
        }
        if(!_.isEmpty(queryFilters)){
          var steedosFilters = require("@steedos/filters");
          var odataFilter = steedosFilters.formatFiltersToODataQuery(queryFilters);
          options.$filter = odataFilter;
        }
        companys = Creator.odata.query('company', options, true);
        companys.forEach(function (item) {
          result.push({
            label: item.name,
            value: item._id
          });
        });
        return result;
      }
    omit: true
    hidden: true
  instance_state:
    label: Instance State
    type: select
    options:
      - label: Draft
        value: draft
      - label: Pending
        value: pending
      - label: Completed
        value: completed
      - label: Approved
        value: approved
      - label: Rejected
        value: rejected
      - label: Terminated
        value: terminated
    omit: true
    hidden: true
  _table:
    label: Object Workflow Related Form Table Item Info
    type: object
    omit: true
    hidden: true
  _table._id:
    type: text
    label: Object Workflow Related Form Table Item ID
    omit: true
    hidden: true
  _table._code:
    type: text
    label: Object Workflow Related Form Table Code
    omit: true
    hidden: true
actions: 
  standard_query:
    label: Search
  standard_new: 
    label: New
  standard_open_view: 
    label: Open
  standard_edit: 
    label: Edit
  standard_delete: 
    label: Delete
  standard_approve: 
    label: Initiate Approval
  standard_view_instance: 
    label: View Instance
  standard_follow: 
    label: Follow
  standard_submit_for_approval:
    label: Submit for Approval
permission_set:
  none:
    allowCreate: false
    allowDelete: false
    allowEdit: false
    allowRead: false
    modifyAllRecords: false
  user:
    allowCreate: true
    allowDelete: true
    allowEdit: true
    allowRead: true
    modifyAllRecords: false
    viewAllRecords: false
  admin:
    allowCreate: true
    allowDelete: true
    allowEdit: true
    allowRead: true
    modifyAllRecords: true
    viewAllRecords: true
